{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","elInfo","defaults","$data","$watchers","$mixins","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","extend","lifeCycles","utils","afterFn","bind","domUtils","tplParse","appendChild","el","content","$beforeInit","bee","checkBinding","walk","key","$watch","$afterInit","update","keyPath","data","keyPaths","$beforeUpdate","arguments","Object","keys","path","$update","$afterUpdate","doc","document","Class","Dir","Com","Watcher","dirs","scope","isUndefined","parseKeyPath","deepSet","create","noop","$beforeDestroy","$afterDestroy","sub","directives","components","filters","json","obj","replacer","space","JSON","stringify","filter","filterName","mount","id","instance","nodeType","getElementById","Comp","getComponent","tagName","toLowerCase","dir","directive","prototype","$get","expression","watch","parse","getValue","$set","val","add","reformed","reKey","hasKey","reVm","reformScope","vm","$replace","last","k","shift","join","isBubble","watchers","replace","pop","push","getWatchers","watcher","callback","immediate","_originFn","addWatcher","$unwatch","unwatch","$destroy","removeEl","wacher","parentNode","removeChild","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",2,3,"dirResult","NODETYPE","FRAGMENT","childNodes","ELEMENT","COMMENT","TEXT","checkText","nodeName","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","constructor","getDir","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","text","tn","createTextNode","insertBefore","escape","html","isFunction","replaceChild","link","unBinding","ATTR","createElement","./token.js","./utils","./watcher",4,"protoProps","staticProps","sup","apply","Fn","__super__",5,"tag","Component","statics","tags","componentName","paths","CurCstr","comName","component",6,"opts","Directive","type","attr","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","evaluate","unLink","tearDown","getNodes","nodes","ast","message","console","error","forgive","eval","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","attrs","newAttrs","position","../utils.js",8,"hyphensReg","hyphenToCamel","dash","char","toUpperCase","comp","curPath","comPath","__ref","warn",9,"createContent","../check-binding","../dom-utils",10,"innerHTML","frag","hide","state","show","template","src","repeat","model","on","../env.js","./attr.js","./content.js","./model.js","./on.js","./repeat.js","./style.js",11,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js","../token.js",12,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",13,"arrDiff","arr1","arr2","trackId","arr2Copy","index","indexByTrackId","splice","item","list","startIndex","item1","arrayMethods","getAttribute","curArr","items","that","isArray","listPath","summary","locals","pos","oldPos","cloneNode","assignments","$index","__repeat","__dirs__","$remove","method",14,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",15,"outerHTML","wraper","trim",16,"root","jsdom",17,"callFilter","arg","args","then","context","getOperator","arity","operators","reset","summaryCall","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","catchby","ternary","?","argName","tree","res","Array",18,"event","addEventListener","attachEvent","removeEventListener","detachEvent",19,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",20,"ass","local","curVm",21,"tokenReg","lastIndex","exec",22,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","chain","arrLike","arr",23,"NaN","exp","watcherUpdate","point"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\nvar mergeProps = {\n  $data: 1, $watchers: 1\n};\n\nvar lifeCycles = {\n  $beforeInit: utils.noop\n, $afterInit: utils.noop\n, $beforeUpdate: utils.noop\n, $afterUpdate: utils.noop\n, $beforeDestroy: utils.noop\n, $afterDestroy: utils.noop\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: {}\n  , $watchers: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: this.$content || null\n\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var elInfo;\n\n  var mixins = ([defaults].concat(this.$mixins || [])).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  isObject(this.$data) && extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  elInfo = domUtils.tplParse(tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(elInfo.el);\n  }else{\n    this.$el = elInfo.el;\n  }\n  this.$tpl = elInfo.tpl;\n  this.$content = elInfo.content;\n\n  this.$beforeInit()\n  this.$el.bee = this;\n\n  if(this.$content){\n    this.__links = checkBinding.walk.call(this.$root, this.$content);\n  }\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this._isRendered = true;\n  this.$afterInit();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives ,components, filters 引用\n  sub.directives = extend(create(this.directives), sub.directives);\n  sub.components = extend(create(this.components), sub.components);\n  sub.filters = extend(create(this.filters), sub.filters);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, filters: {\n    //build in filter\n    json: function(obj, replacer, space) {\n      return JSON.stringify(obj, replacer, space) }\n  }\n, filter: function(filterName, filter) {\n    this.filters[filterName] = filter;\n  }\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.getComponent(el.tagName.toLowerCase());\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, lifeCycles, {\n  /**\n   * 获取属性/方法--\n   * @param {String} expression 路径/表达式\n   * @return {*}\n   */\n  $get: function(expression) {\n    var dir = new Dir('$get', {\n      path: expression\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(true, this.$data, key);\n        extend(true, this, key);\n      }else{\n        this.$data = key;\n      }\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n      add = deepSet(reKey, val, {});\n      if(keys[0] === '$data') {\n        add = add.$data\n      }\n      if(isObject(reVm.$data)) {\n        extend(true, reVm.$data, add);\n        extend(true, reVm, add);\n      }else{\n        reVm.$data = add;\n      }\n    }\n    hasKey ? update.call(reVm, reKey, val) : update.call(reVm, key);\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, last, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      val = key;\n      reKey = '$data';\n      keys = [reKey];\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n    }\n\n    last = reVm.$get(reKey);\n\n    if (keys[0] === '$data') {\n      if(reKey === '$data') {\n        if(isObject(this.$data)) {\n          Object.keys(this.$data).forEach(function (k) {\n            delete this[k];\n          }.bind(this))\n        }\n        extend(reVm, val);\n      }else {\n        deepSet(keys.shift().join('.'), val, reVm)\n      }\n    } else {\n      deepSet(reKey, val, reVm.$data);\n    }\n    deepSet(reKey, val, reVm)\n\n    hasKey ? update.call(reVm, reKey, extend({}, last, val)) : update.call(reVm, extend({}, last, val));\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    //同时更新子路径\n    Watcher.getWatchers(this, keyPath).forEach(function(watcher) {\n      watcher.update();\n    }.bind(this))\n\n    //数组冒泡的情况\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n  }\n, $watch: function (expression, callback, immediate) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      return Watcher.addWatcher.call(this, new Dir('$watch', {path: expression, update: update, immediate : !!immediate}))\n    }\n  }\n, $unwatch: function (expression, callback) {\n    Watcher.unwatch(this, expression, callback)\n  }\n  //销毁当前实例\n, $destroy: function(removeEl) {\n    this.$beforeDestroy()\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    removeEl && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)\n    this.__links = [];\n    this.$afterDestroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n  this.$beforeUpdate(this.$data)\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n  this.$afterUpdate(this.$data)\n}\n\nBee.version = '0.3.2';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template')\n\n//遍历 dom 树\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , dirs = cstr.directive.getDir(el, cstr)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = utils.create(t.escape ? dirs.text : dirs.html);\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else if(dir.replace){\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.link(this);\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\n/**\n * 查询某构造函数下的注册组件\n * @parm {String} componentName\n */\nfunction getComponent(componentName) {\n  var paths = utils.parseKeyPath(componentName);\n  var CurCstr = this;\n  paths.forEach(function(comName) {\n    CurCstr = CurCstr && CurCstr.components[comName];\n  });\n  return CurCstr || null;\n}\n\nexports.tag = exports.component = tag;\nexports.getComponent = getComponent;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, cstr){\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    , directives = cstr.directives\n    , prefix = cstr.prefix\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(cstr.getComponent(nodeName)) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n}","//component as directive\nvar utils = require('../utils.js');\n\n//html 中属性名不区分大小写, 并且会全部转成小写.\n//这里会将连字符写法转成驼峰式\n//attr-name --> attrName\n//attr--name --> attr-name\nvar hyphensReg = /-(-?)([a-z])/ig;\nvar hyphenToCamel = function(attrName) {\n  return attrName.replace(hyphensReg, function(s, dash, char) {\n    return dash ? dash + char : char.toUpperCase();\n  })\n}\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, unLink: function() {\n    this.component && this.component.$destroy()\n  }\n, link: function(vm) {\n    var el = this.el;\n    var cstr = vm.constructor;\n    var comp;\n    var dirs = [], $data = {};\n    var attrs;\n    var Comp = cstr.getComponent(this.path)\n\n    if(Comp) {\n\n      //TODO\n      if(Comp === cstr) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with') {\n          //comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comPath ? comp.$set(comPath, val) : comp.$set(val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[hyphenToCamel(attrs[i].nodeName)] = attrs[i].value;\n      }\n\n      this.component = comp = new Comp({\n        $target: el,\n        //$root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.__ref = comp;\n        vm.$el = comp.$el;\n      }\n      return comp;\n    }else{\n      console.warn('Component: ' + this.path + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function(vm) {\n    this.vm = vm;\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\ndirs.content = require('./content.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n\n    if(!keyPath) { return false; }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$replace(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\n//TODO 移除时的情况\nmodule.exports = {\n  watch: false\n, link: function(vm) {\n    //this.events = {};\n    this.vm = vm;\n  }\n, update: function(events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, unLink: function(){\n    this.list.forEach(function(vm){\n      vm.$destroy()\n    })\n  }\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    this.trackId = this.el.getAttribute('track-by')\n    this.el.removeAttribute('track-by')\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    this.curArr = [];\n    this.list = [];//子 VM list\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n    var trackId = this.trackId;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中相关变量\n      this.listPath = this.summary.locals.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items, trackId).forEach(function(item) {\n        var pos = indexByTrackId(item, curArr, trackId)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].$el)\n        list[pos].$destroy()\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = indexByTrackId(item, items, trackId, i)\n          , oldPos = indexByTrackId(item, curArr, trackId, i)\n          , vm, el\n          ;\n\n        //pos < 0 && (pos = items.lastIndexOf(item, i));\n        //oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.summary.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].$el || this.anchors.end)\n          list.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].$el, list[pos] && list[pos].$el || that.anchors.end)\n            parentNode.insertBefore(list[pos].$el, list[oldPos + 1] && list[oldPos + 1].$el || that.anchors.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].$index = pos\n            list[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      if(!items.__dirs__){\n        //数组操作方法\n        utils.extend(items, {\n          $set: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].$set(item);\n            })\n          },\n          $replace: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].$replace(item)\n            })\n          },\n          $remove: function(i) {\n            items.splice(i, 1);\n          }\n        });\n        arrayMethods.forEach(function(method) {\n          items[method] = utils.afterFn(items[method], function() {\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function(path) {\n                dir.vm.$update(path)\n              })\n            })\n          })\n        });\n        items.__dirs__  = [];\n      }\n      //一个数组多处使用\n      //TODO 移除时的情况\n      if(items.__dirs__.indexOf(that) === -1) {\n        items.__dirs__.push(that)\n      }\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2, trackId) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = indexByTrackId(el, arr2Copy, trackId)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n\nfunction indexByTrackId(item, list, trackId, startIndex) {\n  startIndex = startIndex || 0;\n  var index = list.indexOf(item, startIndex);\n  if(index === -1 && trackId){\n    for(var i = startIndex, item1; item1 = list[i]; i++) {\n      if(item[trackId] ===  item1[trackId] && !utils.isUndefined(item[trackId])){\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',\n  'top', 'left', 'right', 'bottom'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr = styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top\n        dashKey = key.replace(camelReg, function (upperChar) {\n          return '-' + upperChar.toLowerCase();\n        });\n\n        if (!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n          val += 'px';\n        }\n        styleStr += dashKey + ': ' + val + '; ';\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\n//处理 $target,  $content, $tpl\n//target: el 替换的目标\nfunction tplParse(tpl, target, content) {\n  var el;\n  if(utils.isObject(target) && target.childNodes) {\n    content = createContent(target.childNodes);\n  }else{\n    if(content) {\n      content = createContent(content)\n    }\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    //字符串\n    el = createContent(tpl).childNodes[0];\n  }\n\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, content: content};\n}\n\n//将模板/元素/nodelist 包裹在 fragment 中\nfunction createContent(tpl) {\n  var content = doc.createDocumentFragment();\n  var wraper;\n  var nodes = [];\n  if(utils.isObject(tpl)) {\n    if(tpl.nodeName && tpl.nodeType) {\n      //dom 元素\n      content.appendChild(tpl);\n    }else if('length' in tpl){\n      //nodelist\n      nodes = tpl;\n    }\n  }else {\n    wraper = doc.createElement('div')\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\n    wraper.innerHTML = (tpl + '').trim();\n    nodes = wraper.childNodes;\n  }\n  while(nodes[0]) {\n    content.appendChild(nodes[0])\n  }\n  return content;\n}\n\nmodule.exports = {\n  tplParse: tplParse,\n  createContent: createContent\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","//表达式执行\n\n\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n    //filter. name|filter\n  , '|': function(l, r){ return callFilter(l, r, []) }\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.repeat) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  , 'catchby': function(l, r) {\n      if(l['catch']) {\n        return l['catch'](r.bind(context.locals))\n      }else{\n        console.error('catchby expect a promise')\n        return l;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n    //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\n  }\n};\n\nfunction callFilter(arg, filter, args) {\n  if(arg && arg.then) {\n    return arg.then(function(data) {\n      return filter.apply(context.locals, [data].concat(args))\n    });\n  }else{\n    return filter.apply(context.locals, [arg].concat(args))\n  }\n}\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        //summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'repeat':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.constructor.filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = require('./scope').getValue\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  //infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n  infix('catchby', 10);\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var scope = cur, ass, curVm = cur;\n\n  while(cur) {\n    curVm = scope = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { scope: scope, vm:curVm, path: paths.join('.') }\n};\n\n//根据 vm 及 key 求值\n//求值的结果在 js 及模板中保持一致\nvar getValue = function(key, scope) {\n  var reformed = reformScope(scope, key)\n\n  return reformed.scope[reformed.path]\n};\n\nexports.reformScope = reformScope;\nexports.getValue = getValue;\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Object} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n  dir.summary = evaluate.summary(dir.ast);\n\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    this.watchers.push( watchers );\n  }\n\n  dir.immediate !== false && this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\n//获取某 keyPath 子路径的 watchers\nWatcher.getWatchers = function getWatchers(vm, keyPath) {\n  var _watchers = vm._watchers, watchers = [];\n  var point;\n  for(var key in _watchers) {\n    point = key.charAt(keyPath.length);\n    if(key.indexOf(keyPath) === 0 && (point === '.')) {\n      watchers = watchers.concat(_watchers[key])\n    }\n  }\n  return watchers\n}\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    //简单过滤重复更新\n    if(newVal !== this.val || utils.isObject(newVal)){\n      if(newVal && newVal.then) {\n        //a promise\n        newVal.then(function(val) {\n          watcherUpdate.call(that, val);\n        });\n      }else{\n        watcherUpdate.call(this, newVal);\n      }\n    }\n  },\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}