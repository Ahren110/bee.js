{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$filters","$watchers","$mixins","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","extend","lifeCycles","utils","afterFn","bind","domUtils","tplParse","appendChild","content","bee","checkBinding","walk","key","$watch","$replace","$init","update","keyPath","data","keyPaths","arguments","Object","keys","path","$update","doc","document","Class","Dir","Com","Watcher","dirs","scope","isUndefined","parseKeyPath","deepSet","create","noop","$destroy","sub","directives","components","mount","id","instance","nodeType","getElementById","Comp","tagName","toLowerCase","dir","directive","prototype","$get","watch","parse","getValue","$set","val","add","reformed","reKey","hasKey","reVm","reformScope","vm","isBubble","attrs","watchers","replace","join","pop","push","isArray","attr","callback","_originFn","addWatcher","$unwatch","unwatch","__destroy","wacher","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",2,3,"dirResult","NODETYPE","FRAGMENT","childNodes","ELEMENT","COMMENT","TEXT","checkText","nodeName","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","constructor","getDir","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","parentNode","text","tn","createTextNode","insertBefore","removeChild","escape","html","watcher","isFunction","replaceChild","link","unBinding","ATTR","createElement","./token.js","./utils","./watcher",4,"protoProps","staticProps","sup","apply","Fn","__super__",5,"tag","Component","statics","tags","component",6,"opts","Directive","type","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","evaluate","unLink","tearDown","getNodes","nodes","ast","message","console","error","forgive","eval","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","newAttrs","position","../utils.js",8,"comp","comName","filter","curPath","comPath","__ref","warn",9,"createContent","../check-binding","../dom-utils",10,"innerHTML","frag","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./content.js","./model.js","./on.js","./repeat.js","./style.js",11,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",12,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","shift","../utils",13,"arrDiff","arr1","arr2","arr2Copy","index","splice","arrayMethods","curArr","list","items","that","listPath","summary","locals","item","pos","oldPos","cloneNode","assignments","$index","__repeat","__dirs__","$remove","method",14,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",15,"outerHTML","wraper","trim",16,"root","jsdom",17,"callFilter","arg","args","then","context","getOperator","arity","operators","reset","summaryCall","filters","paths","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","ternary","?","argName","tree","res","Array",18,"event","addEventListener","attachEvent","removeEventListener","detachEvent",19,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",20,"ass","local","curVm",21,"tokenReg","lastIndex","exec",22,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","arrLike","arr",23,"NaN","exp","watcherUpdate"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  //, Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\nvar mergeProps = {\n  $data: 1, $filters: 1, $watchers: 1\n};\n\nvar lifeCycles = {\n  $init: utils.noop\n, $destroy: utils.noop\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: {}\n  , $filters: {}\n  , $watchers: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: this.$content || null\n\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  var mixins = ([defaults].concat(this.$mixins || [])).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  isObject(this.$data) && extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = domUtils.tplParse(tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$content = el.content;\n\n  this.$el.bee = this;\n\n  if(this.$content){\n    this.__links = checkBinding.walk.call(this.$root, this.$content);\n  }\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this.$replace(this.$data);\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives 和 components 引用\n  sub.directives = create(this.directives);\n  sub.components = create(this.components);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, /*Event,*/ lifeCycles, {\n  /**\n   * 获取属性/方法--\n   * @param {String} keyPath 路径/表达式\n   * @return {*}\n   */\n  $get: function(keyPath) {\n    var dir = new Dir('$get', {\n      path: keyPath\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(true, this.$data, key);\n        extend(true, this, key);\n      }else{\n        this.$data = key;\n      }\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n      add = deepSet(reKey, val, {});\n      if(keys[0] === '$data') {\n        add = add.$data\n      }\n      if(isObject(reVm.$data)) {\n        extend(true, reVm.$data, add);\n        extend(true, reVm, add);\n      }else{\n        reVm.$data = add;\n      }\n    }\n    hasKey ? update.call(reVm, reKey, val) : update.call(reVm, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        Object.keys(this.$data).forEach(function(key) {\n          delete this[key];\n        }.bind(this))\n        extend(this, key);\n      }\n      this.$data = key;\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n      if(keys[0] !== '$data') {\n        deepSet(reKey, val, reVm.$data);\n      }\n      deepSet(reKey, val, reVm);\n    }\n    hasKey ? update.call(reVm, reKey, val) : update.call(reVm, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs) && !utils.isArray(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      Watcher.addWatcher.call(this, new Dir('$watch', {path: keyPath, update: update}))\n    }\n    return this;\n  }\n, $unwatch: function (keyPath, callback) {\n    Watcher.unwatch(this, keyPath, callback)\n    return this;\n  }\n, __destroy: function() {\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    this.__links = [];\n    this.$destroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\n\nBee.version = '0.2.0';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template')\n\n//遍历 dom 树\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , prefix = cstr.prefix\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = utils.create(t.escape ? dirs.text : dirs.html);\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else if(dir.replace){\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.link(this);\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, unLink: function() {\n    this.component && this.component.__destroy()\n  }\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      //TODO\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with' || dir.dirName === 'attr') {\n          //这里 attr 及 with 指令效果一样\n          comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comp.$set(comPath, val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      this.component = comp = new Comp({\n        $target: el,\n        //$root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.__ref = comp;\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function(vm) {\n    this.vm = vm;\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\ndirs.content = require('./content.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n\n    if(!keyPath) { return false; }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\n//TODO 移除时的情况\nmodule.exports = {\n  watch: false\n, link: function(vm) {\n    //this.events = {};\n    this.vm = vm;\n  }\n, update: function(events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    this.curArr = [];\n    this.list = [];//子 VM list\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中\n      this.listPath = this.summary.locals.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      //TODO 删除引用父级的 watchers\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].$el)\n        list[pos].__destroy()\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        //pos < 0 && (pos = items.lastIndexOf(item, i));\n        //oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.summary.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].$el || this.anchors.end)\n          list.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].$el, list[pos] && list[pos].$el || that.anchor.end)\n            parentNode.insertBefore(list[pos].$el, list[oldPos + 1] && list[oldPos + 1].$el || that.anchor.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].$index = pos\n            list[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      if(!items.__dirs__){\n        //数组操作方法\n        utils.extend(items, {\n          $set: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].$set(item);\n            })\n          },\n          $replace: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].$replace(item)\n            })\n          },\n          $remove: function(i) {\n            items.splice(i, 1);\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function (path) {\n                dir.vm.$update(path)\n              });\n            })\n          }\n        });\n        arrayMethods.forEach(function(method) {\n          items[method] = utils.afterFn(items[method], function() {\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function(path) {\n                dir.vm.$update(path)\n              })\n            })\n          })\n        });\n        items.__dirs__  = [];\n      }\n      //一个数组多处使用\n      //TODO 移除时的情况\n      if(items.__dirs__.indexOf(that) === -1) {\n        items.__dirs__.push(that)\n      }\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = arr2Copy.indexOf(el)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr = styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top\n        dashKey = key.replace(camelReg, function (upperChar) {\n          return '-' + upperChar.toLowerCase();\n        });\n\n        if (!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n          val += 'px';\n        }\n        styleStr += dashKey + ': ' + val + '; ';\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\n//处理 $target,  $content, $tpl\n//target: el 替换的目标\nfunction tplParse(tpl, target, content) {\n  var el;\n  if(utils.isObject(target) && target.childNodes) {\n    content = createContent(target.childNodes);\n  }else{\n    if(content) {\n      content = createContent(content)\n    }\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    //字符串\n    el = createContent(tpl).childNodes[0];\n  }\n\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, content: content};\n}\n\n//将模板/元素/nodelist 包裹在 fragment 中\nfunction createContent(tpl) {\n  var content = doc.createDocumentFragment();\n  var wraper;\n  var nodes = [];\n  if(utils.isObject(tpl)) {\n    if(tpl.nodeName && tpl.nodeType) {\n      //dom 元素\n      content.appendChild(tpl);\n    }else if('length' in tpl){\n      //nodelist\n      nodes = tpl;\n    }\n  }else {\n    wraper = doc.createElement('div')\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\n    wraper.innerHTML = (tpl + '').trim();\n    nodes = wraper.childNodes;\n  }\n  while(nodes[0]) {\n    content.appendChild(nodes[0])\n  }\n  return content;\n}\n\nmodule.exports = {\n  tplParse: tplParse,\n  createContent: createContent\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","//表达式执行\n\n\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n    //filter. name|filter\n  , '|': function(l, r){ return callFilter(l, r, []) }\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.repeat) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n    //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\n  }\n};\n\nfunction callFilter(arg, filter, args) {\n  if(arg && arg.then) {\n    return arg.then(function(data) {\n      return filter.apply(context.locals, [data].concat(args))\n    });\n  }else{\n    return filter.apply(context.locals, [arg].concat(args))\n  }\n}\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'repeat':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = require('./scope').getValue\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var scope = cur, ass, curVm = cur;\n\n  while(cur) {\n    curVm = scope = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { scope: scope, vm:curVm, path: paths.join('.') }\n};\n\n//根据 vm 及 key 求值\n//求值的结果在 js 及模板中保持一致\nvar getValue = function(key, scope) {\n  var reformed = reformScope(scope, key)\n\n  return reformed.scope[reformed.path]\n};\n\nexports.reformScope = reformScope;\nexports.getValue = getValue;\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n  dir.summary = evaluate.summary(dir.ast);\n\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    this.watchers.push( watchers );\n  }\n\n  this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n  },\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}