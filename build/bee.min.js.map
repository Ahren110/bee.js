{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/env.js","src/eval.js","src/event-bind.js","src/event.js","src/parse.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$el","$target","$children","$filters","$parent","_watchers","_assignments","_relativePath","_isRendered","extend","tplParse","appendChild","children","bee","walk","$render","$init","update","keyPath","data","keyPaths","arguments","isObject","Object","keys","path","$update","nodeType","NODETYPE","FRAGMENT","childNodes","isUndefined","ELEMENT","COMMENT","TEXT","checkText","checkAttr","terminal","content","parentNode","replaceChild","next","child","firstChild","nextSibling","dir","terminalPriority","cstr","constructor","dirs","directive","getDir","directives","components","result","__dirs","priority","removeAttribute","nodeName","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","forEach","text","tn","doc","createTextNode","insertBefore","bind","removeChild","create","escape","html","replace","isFunction","link","d","addWatcher","watch","Watcher","target","wraper","push","cloneNode","outerHTML","createElement","innerHTML","firstElementChild","env","document","utils","Event","Class","Dir","Com","parseKeyPath","deepSet","deepGet","ATTR","mount","id","instance","getElementById","Comp","tagName","toLowerCase","prototype","$replace","noop","$get","strict","paths","headPath","scope","$set","key","val","add","hasKey","isBubble","attrs","watchers","join","pop","attr","isArray","$watch","callback","$unwatch","splice","version","./class.js","./component.js","./directive.js","./directives","./env.js","./event.js","./token.js","./utils.js","./watcher.js",2,3,"protoProps","staticProps","hasOwnProperty","sup","apply","Fn","__super__",4,"tag","Component","statics","tags","component",5,"opts","Directive","type","attrName","dirName","anchors","parent","setAttribute","attributes","slice","indexOf","value","anchor","start","createComment","end","sort","d0","d1","tearDown","getNodes","nodes",6,"setAttr","style","className","console","warn","removeAttr","attrPostReg","test","conditionalAttr","newAttrs","position","../utils.js",7,"vm","comp","comName","filter","withMap","map","componentPath","locals","local","pathConfig",8,"frag","createDocumentFragment","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./model.js","./on.js","./repeat.js","./style.js",9,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",10,"eventBind","name",11,"arrDiff","arr1","arr2","arrayMethods","curArr","list","items","that","item","pos","oldPos","lastIndexOf","listPath","assignments","$index","$remove","method","afterFn",12,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",13,"root","jsdom",14,"getOperator","arity","operators","reset","context","filters","summary","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",".","(","|","Date","Function","in","assignment","ternary","?","concat","argName","evaluate","tree","arg","res","args","Array","getValue","eval",15,"event","addEventListener","attachEvent","removeEventListener","detachEvent",16,"$on","ctx","_handlers","$one","one","$off","handlers","$trigger",17,"source","F","error","message","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context","parse",18,"tokenReg","lastIndex","exec","trim",19,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","cur",20,"exParse","ast","curVm","localKey","willUpdate","ass","NaN","STATE_READY","shift","watcherUpdate","STATE_CALLED","then","./eval.js","./parse.js"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar env = require('./env.js')\n  , doc = env.document\n  , utils = require('./utils.js')\n  , Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , token = require('./token.js')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isFunction = utils.isFunction\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , deepGet = utils.deepGet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: this.$data || {}\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $children: null\n  , $filters: this.$filters || {}\n  , $parent: null\n\n    //私有属性/方法\n  , _watchers: this._watchers || {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  //合并所有到当前空间下\n  extend(this, defaults, props);\n  extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = tplParse(tpl, this.$target);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$children = el.children;\n\n  this.$el.bee = this;\n\n  walk.call(this, this.$el);\n\n  this.$render(this.$data || {});\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, Class, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('a-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, Event, {\n  /**\n   * ### ant.render\n   * 渲染模板\n   */\n  $render: function(data) {\n    data = data || this.$data;\n    this.$replace(data);\n    return this;\n  }\n, $init: utils.noop\n  /**\n   * 获取属性/方法\n   * @param {String} keyPath 路径\n   * @param {Boolean} [strict=false] 是否严格在自身中查找.\n   * @return {*}\n   */\n, $get: function(keyPath, strict) {\n    strict = strict === true;\n\n    var scope = this\n      , path = keyPath\n      , paths, headPath\n      ;\n\n    if(!strict) {\n      if(this.$parent) {\n        paths = parseKeyPath(path);\n        headPath = paths[0]\n        if(scope._assignments && scope._assignments.length) {\n          // 具名 repeat 不会直接查找自身作用域\n          if(headPath === this._assignments[0]) {\n            scope = {};\n            scope[headPath] = this;\n          }else{\n            return this.$parent.$get(keyPath, strict)\n          }\n        }else{\n          //匿名 repeat\n          return (headPath in this) ? this.$get(keyPath) : this.$parent.$get(keyPath, strict)\n        }\n      }\n    }\n\n    return deepGet(path, scope);\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      extend(true, this.$data, key);\n      extend(true, this, key);\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      add = deepSet(key, val, {});\n      keys[0] !== '$data' && extend(true, this.$data, add);\n      extend(true, this, add);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      Object.keys(this.$data).forEach(function(key) {\n        delete this[key];\n      }.bind(this))\n      this.$data = key;\n      extend(this, key);\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      if(keys[0] !== 'data') {\n        deepSet(key, null, this.$data);\n        deepSet(key, val, this.$data);\n      }\n      deepSet(key, null, this);\n      deepSet(key, val, this);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key];\n\n      if (watchers) {\n        for (var i = 0, l = watchers.length; i < l; i++) {\n          watchers[i].update();\n        }\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      addWatcher.call(this, {path: keyPath, update: callback, watch: true})\n    }\n  }\n, $unwatch: function (keyPath, callback) {\n    var watchers = this._watchers[keyPath] || [];\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      if(watchers[i].dir.update === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\n\n//遍历 dom 树\nfunction walk(el) {\n\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      walk.call(this, el[i]);\n    }\n    return;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n        break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return;\n        break;\n    case NODETYPE.TEXT:\n      //文本节点\n      checkText.call(this, el);\n      return;\n        break;\n  }\n\n  if(checkAttr.call(this, el).terminal){\n    return;\n  }\n\n  //template\n  //meta element has content, too.\n  if(el.content && el.content.nodeType) {\n    walk.call(this, el.content);\n    el.parentNode && el.parentNode.replaceChild(el.content, el);\n    return;\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    walk.call(this, child);\n    child = next;\n  }\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , prefix = cstr.prefix\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\n    , dir\n    , terminalPriority, terminal\n    , result = {};\n    ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.__dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    setBinding.call(this, dir);\n\n    if(dir.terminal) {\n      terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.dirs = dirs;\n  if(terminal) {\n    result.terminal = true;\n  }\n  return result;\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        checkText.call(this, tn);\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = create(t.escape ? dirs.text : dirs.html);\n      setBinding.call(this, extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n}\n\nfunction setBinding(dir) {\n  if(dir.replace) {\n    var el = dir.el;\n    if(isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else if(dir.replace){\n      //dir.node = doc.createComment(dir.type + ' = ' + dir.path);\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.link(this);\n\n  if(dir.dirs) {\n    //属性表达式\n    dir.dirs.forEach(function(d) {\n      addWatcher.call(this, extend(create(dir), d));\n    }.bind(this));\n  }else{\n    addWatcher.call(this, dir);\n  }\n}\n\nfunction addWatcher(dir) {\n  if(dir.path && dir.watch) {\n    return new Watcher(this, dir);\n  }\n}\n\n\n//target: el 替换的目标\nfunction tplParse(tpl, target) {\n  var el, children = null, wraper;\n  if(isObject(target) && target.children) {\n    children = [];\n    for(var i = 0, l = target.children.length; i < l; i++) {\n      children.push(target.children[i].cloneNode(true));\n    }\n  }\n  if(isObject(tpl)){\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    wraper = doc.createElement('div');\n    wraper.innerHTML = tpl;\n\n    el = wraper.firstElementChild || wraper.children[0];\n\n  }\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, children: children};\n}\n\nBee.version = '0.1.0';\n\nmodule.exports = Bee;\n",null,"var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n};\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = utils.create(directives[dirName]);\n      dir.dirName = dirName\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      dir = utils.create(directives['attr']);\n      dir.dirs = token.parseToken(attr.value);\n      dir.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n    }else{\n      dir = false;\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dirs.push(utils.extend(dir, {el: el, node: attr, nodeName: attrName, path: attr.value, anchors: dir.anchor ? anchors : null}));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\ndirective.getDir = getDir;\n\nexports.directive = directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nvar attrPostReg = /\\?$/;\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //条件属性\n      if(attrPostReg.test(this.dirName)) {// someAttr? condition binding\n        this.dirName = this.dirName.replace(attrPostReg, '');\n        this.conditionalAttr = true;\n      }\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditionalAttr) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  try{\n    //chrome setattribute with `{{}}` will throw an error\n    el.setAttribute(attr, val);\n  }catch(e){ console.warn(e) }\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, terminal: true\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.__dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      attrs = el.attributes;\n\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      dirs.forEach(function (dir) {\n        var withMap = [];\n        //属性表达式\n        if(dir.dirs) {\n          withMap = dir.dirs.map(function (token) {\n            return {path: token.path, componentPath: dir.nodeName};\n          });\n        }else{\n          //a-with directive\n          withMap = dir.locals.map(function(local) {\n            return {path: local, componentPath: local};\n          });\n        }\n\n        //监听父组件更新\n        withMap.forEach(function (pathConfig) {\n          vm.$watch(pathConfig.path, function (val) {\n            if (comp) {\n              comp.$set(pathConfig.componentPath, val);\n            } else {\n              if(pathConfig.componentPath === '$data'){\n                $data = val\n              }else {\n                $data[pathConfig.componentPath] = val;\n              }\n            }\n          })\n        });\n      });\n\n      comp = new Comp({$target: el, $data: utils.extend({}, Comp.prototype.$data, $data)});\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\n//dirs.partial = require('./partial.js');\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n    var paths = utils.parseKeyPath(keyPath);\n    var headPath = paths[0];\n\n    if(!keyPath) { return false; }\n\n    //TODO 实现类似 .$get 的 .$set\n    if(vm.$parent) {\n      if (vm._assignments && vm._assignments[0] === headPath) {\n        keyPath = paths.slice(1).join('.') || '$data';\n      }else{\n        vm = vm.$parent;\n      }\n    }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      //, cur = vm.$getVM(keyPath, {assignment: this.assignment})\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath, false))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val, {isBubble: isInit !== true});\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals, {isBubble: isInit !== true});\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\r\n\r\n//事件监听\r\n\r\nvar eventBind = require('../event-bind.js');\r\n\r\n//TODO 移除时的情况\r\nmodule.exports = {\r\n  link: function(vm) {\r\n    //this.events = {};\r\n    this.vm = vm;\r\n  }\r\n, update: function(events) {\r\n    for(var name in events) {\r\n      eventBind.addEvent(this.el, name, events[name].bind(this.vm));\r\n    }\r\n    //this.events = events;\r\n  }\r\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = this.cstr = cstr.__super__.constructor;\n    }\n\n\n    this.curArr = [];\n    this.list = [];//[{el:el, vm: vm}]\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this;\n\n    if(utils.isArray(items)) {\n\n      //删除元素\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(this.list[pos].el)\n        this.list.splice(pos, 1)\n      }.bind(this))\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        pos < 0 && (pos = items.lastIndexOf(item, i));\n        oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          // 在 repeat 指令表达式中\n          this.listPath = this.locals.filter(function(path) {\n            return utils.isArray(this.vm.$get(path))\n          }.bind(this));\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {$data: item, $parent: this.vm, _assignments: this.assignments, $index: pos});\n          parentNode.insertBefore(vm.$el, this.list[pos] && this.list[pos].el || this.anchors.end)\n          this.list.splice(pos, 0, {el: el, vm: vm});\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(this.list[oldPos].el, this.list[pos] && this.list[pos].el || this.anchor.end)\n            parentNode.insertBefore(this.list[pos].el, this.list[oldPos + 1] && this.list[oldPos + 1].el || this.anchor.end)\n            this.list[oldPos] = [this.list[pos], this.list[pos] = this.list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            this.list[pos].vm.$index = pos\n            this.list[pos].vm.$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(item, i) {\n        item.vm.$index = i\n        item.vm.$update('$index', false)\n      });\n\n      //数组操作方法\n      utils.extend(items, {\n        $set: function(i, item) {\n          that.list[i].vm.$set(item);\n        },\n        $replace: function(i, item) {\n          that.list[i].vm.$replace(item)\n        },\n        $remove: function(i) {\n          items.splice(i, 1);\n          that.listPath.forEach(function(path) {\n            that.vm.$update(path)\n          });\n        }\n      });\n      arrayMethods.forEach(function(method) {\n        items[method] = utils.afterFn(items[method], function() {\n          that.listPath.forEach(function(path) {\n            that.vm.$update(path)\n          })\n        })\n      })\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  return arr1.filter(function(el) {\n    return arr2.indexOf(el) < 0\n  })\n}\n\n","\"use strict\";\r\n\r\n//样式指令\r\n\r\nvar camelReg = /([A-Z])/g;\r\n\r\n//默认单位为 px 的属性\r\n//TODO 待完善\r\nvar pixelAttrs = [\r\n  'width','height',\r\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\r\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\r\n]\r\n\r\nmodule.exports = {\r\n  link: function() {\r\n\r\n  }\r\n, update: function(styles) {\r\n    var el = this.el;\r\n    var styleStr = '';\r\n    var dashKey, val;\r\n\r\n    for(var key in styles) {\r\n      val = styles[key];\r\n\r\n      dashKey = key.replace(camelReg, function (upperChar) {\r\n        return '-' + upperChar.toLowerCase();\r\n      });\r\n\r\n      if(!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\r\n        val += 'px';\r\n      }\r\n      styleStr += dashKey + ': ' + val + '; ';\r\n    }\r\n    if(el.style.setAttribute){\r\n      //老 IE\r\n      el.style.setAttribute('cssText', styleStr);\r\n    }else{\r\n      el.setAttribute('style', styleStr);\r\n    }\r\n  }\r\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n  , '|': function(l, r){ return r.call(context.locals, l) }//filter. name|filter\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.assignment) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n  //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return s.apply(context.locals, [f].concat(t)); }\n  }\n};\n\nvar argName = ['first', 'second', 'third']\n  , context, summary\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        //console.debug(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'assignment':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  if(scope) {\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function (key, scope) {\n  if(scope.$get) {\n    return scope.$get(key, false)\n  }else{\n    return scope[key]\n  }\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\r\n\r\nexports.addEvent = function addEvent(el, event, handler) {\r\n  if(el.addEventListener) {\r\n    el.addEventListener(event, handler, false);\r\n  }else{\r\n    el.attachEvent('on' + event, handler);\r\n  }\r\n}\r\n\r\nexports.removeEvent = function removeEvent(el, event, handler) {\r\n  if(el.removeEventListener) {\r\n    el.removeEventListener(event, handler);\r\n  }else{\r\n    el.detachEvent('on' + event, handler);\r\n  }\r\n}","var utils = require('./utils.js');\n\nvar Event = {\n  //监听自定义事件.\n  $on: function(name, handler, context) {\n    var ctx = context || this\n      ;\n\n    ctx._handlers = ctx._handlers || {};\n    ctx._handlers[name] = ctx._handlers[name] || [];\n\n    ctx._handlers[name].push({handler: handler, context: context, ctx: ctx});\n    return this;\n  },\n  $one: function (name, handler, context) {\n    if(handler){\n      handler.one = true;\n    }\n    return this.on(name, handler, context);\n  },\n  //移除监听事件.\n  $off: function(name, handler, context) {\n    var ctx = context || this\n      , handlers = ctx._handlers\n      ;\n\n    if(name && handlers[name]){\n      if(utils.isFunction(handler)){\n        for(var i = handlers[name].length - 1; i >=0; i--) {\n          if(handlers[name][i].handler === handler){\n            handlers[name].splice(i, 1);\n          }\n        }\n      }else{\n        handlers[name] = [];\n      }\n    }\n    return this;\n  },\n  //触发自定义事件.\n  //该方法没有提供静态化的 context 参数. 如要静态化使用, 应该: `Event.trigger.call(context, name, data)`\n  $trigger: function(name, data) {\n    var args = [].slice.call(arguments, 1)\n      , handlers = this._handlers && this._handlers[name]\n      ;\n\n    if(handlers){\n      for(var i = 0, item; item = handlers[i]; i++) {\n        item.handler.apply(this, args);\n        if(item.handler.one) {\n          handlers.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nmodule.exports = Event;\n","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\tvar f; //The regexp flag.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// regexp\n\t\t}else if(c === '/' && false){\n\t\t\ti += 1;\n\t\t\tstr = '';\n\t\t\tf = '';\n\t\t\tfor(; ; ) {\n\t\t\t\tc = code.charAt(i);\n\n\t\t\t\t// Look for close slash\n\n\t\t\t\tif(c === '/') {\n\t\t\t\t\tfor(; ; ) {\n\t\t\t\t\t\tc = code.charAt(i + 1);\n\t\t\t\t\t\tif((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') {\n\t\t\t\t\t\t\tf += c;\n\t\t\t\t\t\t\ti += 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated regexp\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tc = '\\\\' + c;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('regexp', new RegExp(str, f)));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'assignment';\n\t\t\tthis.assignment = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(0);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n  //prefix('/', function() {\n  //  var a = [], n, v;\n  //  if(token.id !== '/') {\n  //    while(true) {\n  //      n = token;\n  //      advance();\n  //    }\n  //  }\n  //  advance('/');\n  //  this.first = a;\n  //  return this;\n  //})\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) ) {\n            target[ name ] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, deepGet: function (keyStr, obj) {\n    var chain, cur = obj, key;\n    if(keyStr){\n      chain = parseKeyPath(keyStr);\n      for(var i = 0, l = chain.length; i < l; i++) {\n        key = chain[i];\n        if(cur){\n          cur = cur[key];\n        }else{\n          return;\n        }\n      }\n    }\n    return cur;\n  }\n, extend: extend\n, create: create\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  ;\n\nvar extend = utils.extend;\n\n//表达式解析\nfunction exParse(path) {\n  var ast = {}\n    , summary\n    ;\n\n  try{\n    ast = parse(path, this.dir.type);\n  }catch(e) {\n    e.message = 'SyntaxError in \"' + path + '\" | ' + e.message;\n    console.error(e);\n  }\n\n  summary = evaluate.summary(ast);\n  extend(this.dir, summary);\n  extend(this, summary);\n  this.ast = ast;\n};\n\nfunction Watcher(vm, dir) {\n  var path, scope = vm, curVm, localKey, willUpdate, ass, paths;\n\n  this.dir = dir;\n  this.vm = vm;\n\n  this.val = NaN;\n\n  this.state = Watcher.STATE_READY;\n\n  exParse.call(this, dir.path);\n\n  for(var i = 0, l = this.paths.length; i < l; i++) {\n    paths = utils.parseKeyPath(this.paths[i]);\n    localKey = paths[0];\n\n    while(scope) {\n      curVm = scope;\n      ass = scope._assignments;\n\n      if(ass && ass.length) {\n        //具名 repeat\n        if(ass[0] === localKey) {\n          if(paths.length == 1) {\n            paths[0] = '$data';\n          }else{\n            paths.shift();\n          }\n          break;\n        }\n      }else if(localKey in scope){\n        break;\n      }\n\n      //向上查找\n      scope = scope.$parent;\n    }\n    path = paths.join('.');\n    curVm._watchers[path] = curVm._watchers[path] || [];\n    curVm._watchers[path].push(this);\n  }\n\n  //没有变量 / 变量不在当前作用域的表达式立即求值\n  for(var i = 0, l = this.locals.length; i < l; i++) {\n    if(utils.isObject(this.vm.$data) && (this.locals[i] in this.vm.$data)) {\n      break;\n    }\n  }\n  if(i == l) {\n    willUpdate = true;\n  }\n\n  if(willUpdate || this.vm._isRendered) {\n    this.update();\n  }\n}\n\n//TODO\nextend(Watcher, {\n  STATE_READY: 0\n, STATE_CALLED: 1\n}, Class);\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nextend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n\n    this.state = Watcher.STATE_CALLED;\n  }\n, getValue: function(scope) {\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this.dir);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(utils.isUndefined(val) || val === null) {\n      val = '';\n    }\n    return val;\n  }\n});\n\nmodule.exports = Watcher"],"sourceRoot":"./"}