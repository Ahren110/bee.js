{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/env.js","src/eval.js","src/event-bind.js","src/event.js","src/parse.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$el","$target","$content","$filters","$parent","$root","_watchers","_assignments","_relativePath","_isRendered","extend","tplParse","appendChild","content","bee","walk","$render","$init","update","keyPath","data","keyPaths","arguments","isObject","Object","keys","path","$update","nodeType","NODETYPE","FRAGMENT","childNodes","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","doc","createDocumentFragment","checkAttr","next","child","firstChild","nextSibling","dir","terminalPriority","terminal","cstr","constructor","dirs","directive","getDir","directives","components","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","parentNode","forEach","text","tn","createTextNode","insertBefore","bind","removeChild","create","escape","html","replace","isFunction","replaceChild","link","addWatcher","watch","Watcher","target","wraper","outerHTML","createElement","innerHTML","firstElementChild","children","env","document","utils","Event","Class","Dir","Com","parseKeyPath","deepSet","deepGet","ATTR","mount","id","instance","getElementById","Comp","tagName","prototype","$replace","noop","$get","strict","paths","headPath","scope","$set","key","val","add","hasKey","isBubble","attrs","watchers","join","pop","push","attr","isArray","$watch","callback","$unwatch","splice","version","./class.js","./component.js","./directive.js","./directives","./env.js","./event.js","./token.js","./utils.js","./watcher.js",2,3,"protoProps","staticProps","hasOwnProperty","sup","apply","Fn","__super__",4,"tag","Component","statics","tags","component",5,"opts","Directive","type","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","parse","evaluate","tearDown","getNodes","nodes","ast","message","console","error","getValue","eval","./eval.js","./parse.js",6,"setAttr","style","className","removeAttr","newAttrs","position","../utils.js",7,"vm","comp","comName","filter","curPath","comPath","warn",8,"frag","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./model.js","./on.js","./repeat.js","./style.js",9,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",10,"eventBind","name",11,"arrDiff","arr1","arr2","arrayMethods","curArr","list","items","that","item","pos","oldPos","lastIndexOf","listPath","locals","cloneNode","assignments","$index","$remove","method","afterFn",12,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",13,"root","jsdom",14,"getOperator","arity","operators","reset","summaryCall","context","filters","summary","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",".","(","|","Date","Function","in","assignment","ternary","?","concat","argName","tree","arg","res","args","Array",15,"event","addEventListener","attachEvent","removeEventListener","detachEvent",16,"$on","ctx","_handlers","$one","one","$off","handlers","$trigger",17,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",18,"tokenReg","lastIndex","exec","trim",19,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","cur",20,"exParse","curVm","localKey","willUpdate","ass","NaN","STATE_READY","shift","watcherUpdate","STATE_CALLED","then"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar env = require('./env.js')\n  , doc = env.document\n  , utils = require('./utils.js')\n  , Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , token = require('./token.js')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isFunction = utils.isFunction\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , deepGet = utils.deepGet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: this.$data || {}\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: null\n  , $filters: this.$filters || {}\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: this._watchers || {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  //合并所有到当前空间下\n  extend(this, defaults, props);\n  extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = tplParse(tpl, this.$target);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$content = el.content;\n\n  this.$el.bee = this;\n\n  walk.call(this, this.$el);\n\n  this.$render(this.$data || {});\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, Class, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, Event, {\n  /**\n   * ### ant.render\n   * 渲染模板\n   */\n  $render: function(data) {\n    data = data || this.$data;\n    this.$replace(data);\n    return this;\n  }\n, $init: utils.noop\n  /**\n   * 获取属性/方法\n   * @param {String} keyPath 路径\n   * @param {Boolean} [strict=false] 是否严格在自身中查找.\n   * @return {*}\n   */\n, $get: function(keyPath, strict) {\n    strict = strict === true;\n\n    var scope = this\n      , path = keyPath\n      , paths, headPath\n      ;\n\n    if(!strict) {\n      if(this.$parent) {\n        paths = parseKeyPath(path);\n        headPath = paths[0]\n        if(scope._assignments && scope._assignments.length) {\n          // 具名 repeat 不会直接查找自身作用域\n          if(headPath === this._assignments[0]) {\n            scope = {};\n            scope[headPath] = this;\n          }else{\n            return this.$parent.$get(keyPath, strict)\n          }\n        }else{\n          //匿名 repeat\n          return (headPath in this) ? this.$get(keyPath) : this.$parent.$get(keyPath, strict)\n        }\n      }\n    }\n\n    return deepGet(path, scope);\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      extend(true, this.$data, key);\n      extend(true, this, key);\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      add = deepSet(key, val, {});\n      keys[0] !== '$data' && extend(true, this.$data, add);\n      extend(true, this, add);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      Object.keys(this.$data).forEach(function(key) {\n        delete this[key];\n      }.bind(this))\n      this.$data = key;\n      extend(this, key);\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      if(keys[0] !== 'data') {\n        deepSet(key, null, this.$data);\n        deepSet(key, val, this.$data);\n      }\n      deepSet(key, null, this);\n      deepSet(key, val, this);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key];\n\n      if (watchers) {\n        for (var i = 0, l = watchers.length; i < l; i++) {\n          watchers[i].update();\n        }\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      addWatcher.call(this, new Dir('watcher', {path: keyPath, update: callback}))\n    }\n  }\n  //TODO 支持 表达式 keyPath ?\n, $unwatch: function (keyPath, callback) {\n    var watchers = this._watchers[keyPath] || [];\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      if(watchers[i].dir.update === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\ndoc.createElement('template')\n//遍历 dom 树\nfunction walk(el) {\n\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      walk.call(this, el[i]);\n    }\n    return;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n        break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return;\n        break;\n    case NODETYPE.TEXT:\n      //文本节点\n      checkText.call(this, el);\n      return;\n        break;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  if(checkAttr.call(this, el)){\n    return;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    walk.call(this, el.content)\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    walk.call(this, child);\n    child = next;\n  }\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , prefix = cstr.prefix\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\n    , dir\n    , terminalPriority, terminal\n    , result = {};\n    ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    setBinding.call(this, dir);\n\n    if(dir.terminal) {\n      terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.dirs = dirs;\n\n  return terminal\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        checkText.call(this, tn);\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = create(t.escape ? dirs.text : dirs.html);\n      setBinding.call(this, extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n}\n\nfunction setBinding(dir) {\n  if(dir.replace) {\n    var el = dir.el;\n    if(isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else if(dir.replace){\n      //dir.node = doc.createComment(dir.type + ' = ' + dir.path);\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.link(this);\n\n  addWatcher.call(this, dir)\n}\n\nfunction addWatcher(dir) {\n  if(dir.path && dir.watch) {\n    return new Watcher(this, dir);\n  }\n}\n\n\n//target: el 替换的目标\nfunction tplParse(tpl, target) {\n  var el, wraper;\n  var content = doc.createDocumentFragment()\n  if(isObject(target) && target.childNodes) {\n    while(target.childNodes[0]) {\n      content.appendChild(target.childNodes[0]);\n    }\n  }\n  if(isObject(tpl)){\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    wraper = doc.createElement('div');\n    wraper.innerHTML = tpl;\n\n    el = wraper.firstElementChild || wraper.children[0];\n\n  }\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, content: content};\n}\n\nBee.version = '0.1.1';\n\nmodule.exports = Bee;\n",null,"var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n, getValue: function(scope) {\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(utils.isUndefined(val) || val === null) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, terminal: true\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      //TODO\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with' || dir.dirName === 'attr') {\n          //这里 attr 及 with 指令效果一样\n          comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comp.$set(comPath, val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      comp = new Comp({\n        $target: el,\n        $root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\n//dirs.partial = require('./partial.js');\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n    var paths = utils.parseKeyPath(keyPath);\n    var headPath = paths[0];\n\n    if(!keyPath) { return false; }\n\n    //TODO 实现类似 .$get 的 .$set\n    if(vm.$parent) {\n      if (vm._assignments && vm._assignments[0] === headPath) {\n        keyPath = paths.slice(1).join('.') || '$data';\n      }else{\n        vm = vm.$parent;\n      }\n    }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath, false))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\r\n\r\n//事件监听\r\n\r\nvar eventBind = require('../event-bind.js');\r\n\r\n//TODO 移除时的情况\r\nmodule.exports = {\r\n  link: function(vm) {\r\n    //this.events = {};\r\n    this.vm = vm;\r\n  }\r\n, update: function(events) {\r\n    for(var name in events) {\r\n      eventBind.addEvent(this.el, name, events[name].bind(this.vm));\r\n    }\r\n    //this.events = events;\r\n  }\r\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = this.cstr = cstr.__super__.constructor;\n    }\n\n\n    this.curArr = [];\n    this.list = [];//[{el:el, vm: vm}]\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n\n    if(utils.isArray(items)) {\n\n      //删除元素\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].el)\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        pos < 0 && (pos = items.lastIndexOf(item, i));\n        oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          // 在 repeat 指令表达式中\n          this.listPath = this.locals.filter(function(path) {\n            return utils.isArray(that.vm.$get(path))\n          });\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].el || this.anchors.end)\n          list.splice(pos, 0, {el: el, vm: vm});\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].el, list[pos] && list[pos].el || that.anchor.end)\n            parentNode.insertBefore(list[pos].el, list[oldPos + 1] && list[oldPos + 1].el || that.anchor.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].vm.$index = pos\n            list[pos].vm.$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(item, i) {\n        item.vm.$index = i\n        item.vm.$update('$index', false)\n      });\n\n      //数组操作方法\n      utils.extend(items, {\n        $set: function(i, item) {\n          that.list[i].vm.$set(item);\n        },\n        $replace: function(i, item) {\n          that.list[i].vm.$replace(item)\n        },\n        $remove: function(i) {\n          items.splice(i, 1);\n          that.listPath.forEach(function(path) {\n            that.vm.$update(path)\n          });\n        }\n      });\n      arrayMethods.forEach(function(method) {\n        items[method] = utils.afterFn(items[method], function() {\n          that.listPath.forEach(function(path) {\n            that.vm.$update(path)\n          })\n        })\n      })\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  return arr1.filter(function(el) {\n    return arr2.indexOf(el) < 0\n  })\n}\n\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\n//TODO 待完善\nvar pixelAttrs = [\n  'width','height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    for(var key in styles) {\n      val = styles[key];\n\n      dashKey = key.replace(camelReg, function (upperChar) {\n        return '-' + upperChar.toLowerCase();\n      });\n\n      if(!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n        val += 'px';\n      }\n      styleStr += dashKey + ': ' + val + '; ';\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n  , '|': function(l, r){ return r.call(context.locals, l) }//filter. name|filter\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.assignment) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n  //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return s.apply(context.locals, [f].concat(t)); }\n  }\n};\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'assignment':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function (key, scope) {\n  if(scope.$get) {\n    return scope.$get(key, false)\n  }else{\n    return scope[key]\n  }\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\r\n\r\nexports.addEvent = function addEvent(el, event, handler) {\r\n  if(el.addEventListener) {\r\n    el.addEventListener(event, handler, false);\r\n  }else{\r\n    el.attachEvent('on' + event, handler);\r\n  }\r\n}\r\n\r\nexports.removeEvent = function removeEvent(el, event, handler) {\r\n  if(el.removeEventListener) {\r\n    el.removeEventListener(event, handler);\r\n  }else{\r\n    el.detachEvent('on' + event, handler);\r\n  }\r\n}","var utils = require('./utils.js');\n\nvar Event = {\n  //监听自定义事件.\n  $on: function(name, handler, context) {\n    var ctx = context || this\n      ;\n\n    ctx._handlers = ctx._handlers || {};\n    ctx._handlers[name] = ctx._handlers[name] || [];\n\n    ctx._handlers[name].push({handler: handler, context: context, ctx: ctx});\n    return this;\n  },\n  $one: function (name, handler, context) {\n    if(handler){\n      handler.one = true;\n    }\n    return this.on(name, handler, context);\n  },\n  //移除监听事件.\n  $off: function(name, handler, context) {\n    var ctx = context || this\n      , handlers = ctx._handlers\n      ;\n\n    if(name && handlers[name]){\n      if(utils.isFunction(handler)){\n        for(var i = handlers[name].length - 1; i >=0; i--) {\n          if(handlers[name][i].handler === handler){\n            handlers[name].splice(i, 1);\n          }\n        }\n      }else{\n        handlers[name] = [];\n      }\n    }\n    return this;\n  },\n  //触发自定义事件.\n  //该方法没有提供静态化的 context 参数. 如要静态化使用, 应该: `Event.trigger.call(context, name, data)`\n  $trigger: function(name, data) {\n    var args = [].slice.call(arguments, 1)\n      , handlers = this._handlers && this._handlers[name]\n      ;\n\n    if(handlers){\n      for(var i = 0, item; item = handlers[i]; i++) {\n        item.handler.apply(this, args);\n        if(item.handler.one) {\n          handlers.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nmodule.exports = Event;\n","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\tvar f; //The regexp flag.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// regexp\n\t\t}else if(c === '/' && false){\n\t\t\ti += 1;\n\t\t\tstr = '';\n\t\t\tf = '';\n\t\t\tfor(; ; ) {\n\t\t\t\tc = code.charAt(i);\n\n\t\t\t\t// Look for close slash\n\n\t\t\t\tif(c === '/') {\n\t\t\t\t\tfor(; ; ) {\n\t\t\t\t\t\tc = code.charAt(i + 1);\n\t\t\t\t\t\tif((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') {\n\t\t\t\t\t\t\tf += c;\n\t\t\t\t\t\t\ti += 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated regexp\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tc = '\\\\' + c;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('regexp', new RegExp(str, f)));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'assignment';\n\t\t\tthis.assignment = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(0);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n  //prefix('/', function() {\n  //  var a = [], n, v;\n  //  if(token.id !== '/') {\n  //    while(true) {\n  //      n = token;\n  //      advance();\n  //    }\n  //  }\n  //  advance('/');\n  //  this.first = a;\n  //  return this;\n  //})\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) ) {\n            target[ name ] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, deepGet: function (keyStr, obj) {\n    var chain, cur = obj, key;\n    if(keyStr){\n      chain = parseKeyPath(keyStr);\n      for(var i = 0, l = chain.length; i < l; i++) {\n        key = chain[i];\n        if(cur){\n          cur = cur[key];\n        }else{\n          return;\n        }\n      }\n    }\n    return cur;\n  }\n, extend: extend\n, create: create\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  ;\n\nvar extend = utils.extend;\n\n//表达式解析\nfunction exParse() {\n  var summary\n    , dir = this.dir\n    ;\n\n  dir.parse();\n\n  summary = evaluate.summary(dir.ast);\n  extend(dir, summary);\n  extend(this, summary);\n};\n\nfunction Watcher(vm, dir) {\n  var path, scope = vm, curVm, localKey, willUpdate, ass, paths;\n\n  this.dir = dir;\n  this.vm = vm;\n\n  this.val = NaN;\n\n  this.state = Watcher.STATE_READY;\n\n  exParse.call(this, dir.path);\n\n  for(var i = 0, l = this.paths.length; i < l; i++) {\n    paths = utils.parseKeyPath(this.paths[i]);\n    localKey = paths[0];\n\n    while(scope) {\n      curVm = scope;\n      ass = scope._assignments;\n\n      if(ass && ass.length) {\n        //具名 repeat\n        if(ass[0] === localKey) {\n          if(paths.length == 1) {\n            paths[0] = '$data';\n          }else{\n            paths.shift();\n          }\n          break;\n        }\n      }else if(localKey in scope){\n        break;\n      }\n\n      //向上查找\n      scope = scope.$parent;\n    }\n    path = paths.join('.');\n    curVm._watchers[path] = curVm._watchers[path] || [];\n    curVm._watchers[path].push(this);\n  }\n\n  //没有变量 / 变量不在当前作用域的表达式立即求值\n  for(var i = 0, l = this.locals.length; i < l; i++) {\n    if(utils.isObject(this.vm.$data) && (this.locals[i] in this.vm.$data)) {\n      break;\n    }\n  }\n  if(i == l) {\n    willUpdate = true;\n  }\n\n  if(willUpdate || this.vm._isRendered) {\n    this.update();\n  }\n}\n\n//TODO\nextend(Watcher, {\n  STATE_READY: 0\n, STATE_CALLED: 1\n}, Class);\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nextend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n\n    this.state = Watcher.STATE_CALLED;\n  }\n});\n\nmodule.exports = Watcher"],"sourceRoot":"./"}