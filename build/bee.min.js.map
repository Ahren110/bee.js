{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/ref.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","elInfo","defaults","$data","$watchers","$refs","$mixins","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","extend","lifeCycles","utils","afterFn","bind","domUtils","tplParse","appendChild","el","content","$beforeInit","bee","checkBinding","walk","key","$watch","$afterInit","update","keyPath","data","keyPaths","$beforeUpdate","arguments","Object","keys","path","$update","$afterUpdate","doc","document","Class","Dir","Com","Watcher","dirs","scope","parseKeyPath","deepSet","create","noop","$beforeDestroy","$afterDestroy","sub","directives","components","filters","json","obj","replacer","space","JSON","stringify","filter","filterName","mount","id","instance","Comp","dir","nodeType","getElementById","directive","getDirs","type","getComponent","getAttrs","prototype","$get","expression","watch","parse","getValue","$set","val","add","reformed","reKey","hasKey","reVm","reformScope","vm","$replace","last","k","shift","join","isBubble","watchers","replace","pop","push","getWatchers","watcher","callback","immediate","_originFn","addWatcher","$unwatch","unwatch","$destroy","removeEl","wacher","parentNode","removeChild","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",2,3,"dirResult","NODETYPE","FRAGMENT","childNodes","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","constructor","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","text","tn","createTextNode","insertBefore","escape","html","isFunction","replaceChild","link","unBinding","ATTR","createElement","./token.js","./utils","./watcher",4,"protoProps","staticProps","sup","apply","Fn","__super__",5,"tag","tagName","Component","statics","tags","componentName","paths","CurCstr","comName","component",6,"opts","Directive","attr","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","getDir","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","subType","evaluate","astCache","unLink","tearDown","getNodes","nodes","cache","_type","ast","message","console","error","forgive","eval","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","attrs","newAttrs","position","../utils.js",8,"comp","curPath","comPath","createContent","__ref","warn","../check-binding","../dom-utils",9,10,"innerHTML","frag","remove","state","hide","src","repeat","model","on","ref","../env.js","./attr.js","./content.js","./model.js","./on.js","./ref.js","./repeat.js","./style.js",11,"events","teminal","ev","isSetDefaut","crlf","newVal","handler","callHandler","propertyName","ie","$valuekey","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js","../token.js",12,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",13,"isArray","splice","$index","__repeat",14,"arrDiff","arr1","arr2","trackId","arr2Copy","index","indexByTrackId","item","list","startIndex","item1","arrayMethods","vmList","getAttribute","curArr","items","that","listPath","summary","pos","oldPos","cloneNode","assignments","localKey","local","__dirs__","$remove","method","../scope",15,"camelReg","pixelAttrs","initStyle","styles","dashKey","styleStr","upperChar","isNumeric",16,"outerHTML","wraper","trim","hyphensReg","hyphenToCamel","dash","char","toUpperCase",17,"root","jsdom",18,"callFilter","arg","args","then","getOperator","arity","operators","reset","summaryCall","context","locals","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","catchby","ternary","?","argName","tree","res","Array",19,"event","addEventListener","attachEvent","removeEventListener","detachEvent",20,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",21,"ass","curVm",22,"tokenReg","lastIndex","exec",23,"bra","keyPathReg","copy","copyIsArray","clone","deep","parseFloat","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","chain","arrLike","arr",24,"summaryCache","NaN","exp","watcherUpdate","point"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n  ;\n\n\nvar isObject = utils.isObject\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n//TODO 清理这个\nvar mergeProps = {\n  $data: 1, $watchers: 1\n};\n\nvar lifeCycles = {\n  $beforeInit: utils.noop\n, $afterInit: utils.noop\n, $beforeUpdate: utils.noop\n, $afterUpdate: utils.noop\n, $beforeDestroy: utils.noop\n, $afterDestroy: utils.noop\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: {}\n  , $watchers: {}\n  , $refs: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: this.$content || null\n\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var elInfo;\n\n  var mixins = [defaults].concat(this.$mixins).concat(props.$mixins).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  isObject(this.$data) && extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  elInfo = domUtils.tplParse(tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(elInfo.el);\n  }else{\n    this.$el = elInfo.el;\n  }\n  this.$tpl = elInfo.tpl;\n  this.$content = elInfo.content;\n\n  this.$beforeInit()\n  this.$el.bee = this;\n\n  //__links 包含了 $el 下所有的绑定引用\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this._isRendered = true;\n  this.$afterInit();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives ,components, filters 引用\n  sub.directives = extend(create(this.directives), sub.directives);\n  sub.components = extend(create(this.components), sub.components);\n  sub.filters = extend(create(this.filters), sub.filters);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, defaults: {}\n, filters: {\n    //build in filter\n    json: function(obj, replacer, space) {\n      return JSON.stringify(obj, replacer, space) }\n  }\n, filter: function(filterName, filter) {\n    this.filters[filterName] = filter;\n  }\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var instance;\n    var dirs = this.directive.getDirs(el, this);\n    var Comp, dir;\n\n    dir = dirs.filter(function(dir) {\n      return  dir.type === 'tag' || dir.type === 'component'\n    })[0];\n\n    if(dir) {\n      Comp = this.getComponent(dir.path)\n    }\n\n    props = props || {};\n    if(Comp) {\n      props.$data = extend(domUtils.getAttrs(el), props.$data)\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, lifeCycles, {\n  /**\n   * 获取属性/方法--\n   * @param {String} expression 路径/表达式\n   * @returns {*}\n   */\n  $get: function(expression) {\n    var dir = new Dir('$get', {\n      path: expression\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(this.$data, key);\n        extend(this, key);\n      }else{\n        this.$data = key;\n      }\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n      add = deepSet(reKey, val, {});\n      if(keys[0] === '$data') {\n        add = add.$data\n      }\n      if(isObject(reVm.$data)) {\n        extend(true, reVm.$data, add);\n        extend(true, reVm, add);\n      }else{\n        reVm.$data = add;\n      }\n    }\n    hasKey ? update.call(reVm, reKey, val) : update.call(reVm, key);\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, last, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      val = key;\n      reKey = '$data';\n      keys = [reKey];\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n    }\n\n    last = reVm.$get(reKey);\n\n    if (keys[0] === '$data') {\n      if(reKey === '$data') {\n        if(isObject(this.$data)) {\n          Object.keys(this.$data).forEach(function (k) {\n            delete this[k];\n          }.bind(this))\n        }\n        extend(reVm, val);\n      }else {\n        deepSet(keys.shift().join('.'), val, reVm)\n      }\n    } else {\n      deepSet(reKey, val, reVm.$data);\n    }\n    deepSet(reKey, val, reVm)\n\n    hasKey ? update.call(reVm, reKey, extend({}, last, val)) : update.call(reVm, extend({}, last, val));\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    //同时更新子路径\n    Watcher.getWatchers(this, keyPath).forEach(function(watcher) {\n      watcher.update();\n    }.bind(this))\n\n    //数组冒泡的情况\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n  }\n, $watch: function (expression, callback, immediate) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      return Watcher.addWatcher.call(this, new Dir('$watch', {path: expression, update: update, immediate : !!immediate}))\n    }\n  }\n, $unwatch: function (expression, callback) {\n    Watcher.unwatch(this, expression, callback)\n  }\n  //销毁当前实例\n, $destroy: function(removeEl) {\n    this.$beforeDestroy()\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    removeEl && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)\n    this.__links = [];\n    this.$afterDestroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n  this.$beforeUpdate(this.$data)\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n  this.$afterUpdate(this.$data)\n}\n\nBee.version = '0.4.1';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template')\n\n/**\n * 遍历 dom 树\n * @private\n * @param {Element|NodeList} el\n * @returns {Array} 节点下所有的绑定\n */\n\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , dirs = cstr.directive.getDirs(el, cstr)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = utils.create(t.escape ? dirs.text : dirs.html);\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else{\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.vm = this;\n  dir.link();\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /**\n   * 构造函数继承.\n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @returns {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n\n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n\n    return constructor;\n  }\n};\n\nmodule.exports = Class;\n","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\n/**\n * 查询某构造函数下的注册组件\n * @parm {String} componentName\n */\nfunction getComponent(componentName) {\n  var paths = utils.parseKeyPath(componentName);\n  var CurCstr = this;\n  paths.forEach(function(comName) {\n    CurCstr = CurCstr && CurCstr.components[comName];\n  });\n  return CurCstr || null;\n}\n\nexports.tag = exports.component = tag;\nexports.getComponent = getComponent;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nvar astCache = {};\n\nDirective.prototype = {\n  priority: 0//权重\n, type: '' //指令类型\n, subType: '' //子类型. 比如 `b-on-click` 的 type 为 `on`, subType 为 `click`\n, sub: false //是否允许子类型指令\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化. 如果为 false 的话, update 方法默认只会在初始化后调用一次\n, immediate: true //是否在 dir 初始化时立即执行 update 方法\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    var cache = astCache[this.path]\n    if(cache && cache._type === this.type){\n      this.ast = cache\n    }else {\n      try {\n        this.ast = parse(this.path, this.type);\n        this.ast._type = this.type;\n        astCache[this.path] = this.ast;\n      } catch (e) {\n        this.ast = {};\n        e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n        console.error(e);\n      }\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n/**\n * 获取一个元素上所有用 HTML 属性定义的指令\n * @param  {Element} el   指令所在元素\n * @param  {Bee} cstr 组件构造函数\n * @return {directeve[]}      `el` 上所有的指令\n */\nfunction getDirs(el, cstr){\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    , directives = cstr.directives\n    , prefix = cstr.prefix\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(cstr.getComponent(nodeName)) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dir = getDir(dirName, directives))) {\n      //指令\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nfunction getDir(dirName, dirs) {\n  var dir, subType;\n  for(var key in dirs) {\n    if(dirName === key){\n      dir = dirs[key]\n      break\n    }else if(dirName.indexOf(key + '-') === 0){\n      dir = dirs[key]\n      if(!dir.sub){\n        dir = null\n      }else{\n        subType = dirName.slice(key.length + 1)\n      }\n      break;\n    }\n  }\n  if(dir) {\n    dir = create(dir);\n    dir.subType = subType;\n  }\n  return dir;\n}\n\nDirective.directive = directive;\ndirective.getDirs = getDirs;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n}","//component as directive\nvar utils = require('../utils.js');\nvar domUtils = require('../dom-utils')\nvar checkBinding = require('../check-binding')\n\nmodule.exports = {\n  priority: -1\n, watch: false\n, unLink: function() {\n    this.component && this.component.$destroy()\n  }\n, link: function() {\n    var vm = this.vm;\n    var el = this.el;\n    var cstr = vm.constructor;\n    var comp, content;\n    //var refName;\n    var dirs = [], $data = {};\n    var Comp = cstr.getComponent(this.path)\n\n    if(Comp) {\n\n      //TODO\n      if(Comp === cstr) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        // if(dir.type === 'ref') {\n        //   refName = dir.path;\n        // }\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with') {\n          //comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comPath ? comp.$set(comPath, val) : comp.$set(val);\n          }\n        })\n      });\n\n      content = domUtils.createContent(el.childNodes);\n\n      //组件内容属于其容器\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, content));\n\n      el.appendChild(content)\n\n      this.component = comp = new Comp({\n        $target: el,\n        $data: utils.extend({}, Comp.prototype.$data, $data, domUtils.getAttrs(el))\n      });\n      el.bee = comp;\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.__ref = comp;\n        vm.$el = comp.$el;\n      }\n      return comp;\n    }else{\n      console.warn('Component: ' + this.path + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function() {\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , checkBinding = require('../check-binding')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, terminal: true\n, link: function() {\n    this.watchers = [];\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.remove();\n    }\n    this.watchers = checkBinding.walk.call(this.vm, this.frag);\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.add() }\n    }else{\n      if(this.state) { this.remove(); }\n    }\n    this.state = val;\n  }\n\n, add: function() {\n    var anchor = this.anchors.end;\n    this.watchers.forEach(function(watcher) {\n      watcher.hide = false;\n      watcher.update()\n    })\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, remove: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n    this.watchers.forEach(function(watcher) {\n      watcher.hide = true;\n    })\n    // this.watcher = [];\n  }\n};\n\n//图片用, 避免加载 URL 中带有大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = dirs.tag = require('./component.js');\ndirs.content = require('./content.js')\ndirs.ref = require('./ref.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\n\nmodule.exports = {\n  teminal: true\n, priority: -2\n, link: function() {\n    var keyPath = this.path;\n    var vm = this.vm;\n\n    if(!keyPath) { return false; }\n\n    var comp = this.el\n      , ev = 'change'\n      , attr\n      , value = attr = 'value'\n      , isSetDefaut = utils.isUndefined(vm.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n\n        //更新组件\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = comp[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ comp[attr] = newVal; }\n        }\n\n        //更新 viewModel\n      , handler = function() {\n          var val = comp[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          vm.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    if(comp.bee) {\n      // 组件的双向绑定\n      comp = comp.bee;\n      value = comp.$valuekey;\n      if(value) {\n        callback = function(val) {\n          comp.$replace(value, val)\n        };\n        handler = function() {\n          vm.$replace(keyPath, comp.$get(value))\n        }\n        comp.$watch(value, function() {\n          handler()\n        }, true)\n      }\n    }else{\n      //HTML 原生控件的双向绑定\n      switch(comp.tagName) {\n        default:\n          value = attr = 'innerHTML';\n          //ev += ' blur';\n        case 'INPUT':\n        case 'TEXTAREA':\n          switch(comp.type) {\n            case 'checkbox':\n              value = attr = 'checked';\n              //IE6, IE7 下监听 propertychange 会挂?\n              if(ie) { ev += ' click'; }\n            break;\n            case 'radio':\n              attr = 'checked';\n              if(ie) { ev += ' click'; }\n              callback = function(val) {\n                comp.checked = comp.value === val + '';\n              };\n              isSetDefaut = comp.checked;\n            break;\n            default:\n              if(!vm.$lazy){\n                if('oninput' in comp){\n                  ev += ' input';\n                }\n                //IE 下的 input 事件替代\n                if(ie) {\n                  ev += ' keyup propertychange cut';\n                }\n              }\n            break;\n          }\n        break;\n        case 'SELECT':\n          if(comp.multiple){\n            handler = function() {\n              var vals = [];\n              for(var i = 0, l = comp.options.length; i < l; i++){\n                if(comp.options[i].selected){ vals.push(comp.options[i].value) }\n              }\n              vm.$replace(keyPath, vals);\n            };\n            callback = function(vals){\n              if(vals && vals.length){\n                for(var i = 0, l = comp.options.length; i < l; i++){\n                  comp.options[i].selected = vals.indexOf(comp.options[i].value) !== -1;\n                }\n              }\n            };\n          }\n          isSetDefaut = isSetDefaut && !hasToken(comp[value]);\n        break;\n      }\n\n      ev.split(/\\s+/g).forEach(function(e){\n        events.removeEvent(comp, e, callHandler);\n        events.addEvent(comp, e, callHandler);\n      });\n      //根据表单元素的初始化默认值设置对应 model 的值\n      if(comp[value] && isSetDefaut){\n         handler();\n      }\n    }\n\n    this.update = callback;\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, sub: true\n, immediate: false // watch 和 immediate 同时为 false 时, 指令的 update 方法将不会自动被外部调用\n, link: function() {\n    var dir = this;\n    if(this.subType){\n      // be-on-click 等\n      eventBind.addEvent(this.el, this.subType, function() {\n        dir.vm.$get(dir.path)\n      })\n    }else{\n      //link 方法的调用在 watcher 检测 immediate 之前,\n      //所以可以在这里将 immediate 置为 true 以便自动调用 update 方法\n      this.immediate = true;\n      //this.update(this.vm.$get(this.path))\n    }\n  }\n, update: function (events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\n//要求 IE8+\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, priority: -2 // ref 应该在 component 之后\n, unLink: function() {\n    if(utils.isArray(this.ref)) {\n      this.ref.splice(this.vm.$index, 1)\n    }else{\n      this.vm.$refs[this.path] = null;\n    }\n  }\n, link: function() {\n    var vm = this.vm\n    //在 `repeat` 元素上的 `ref` 会指向匿名 `viewmodel`\n    if(vm.__repeat){\n      if(!vm.$index) {\n        vm.$parent.$refs[this.path] = [];\n      }\n      this.ref = vm.$parent.$refs[this.path]\n      this.ref[vm.$index] = vm;\n    }else{\n      vm.$refs[this.path] = this.el.bee || this.el;\n    }\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , scope = require('../scope')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, unLink: function(){\n    this.vmList.forEach(function(vm){\n      vm.$destroy()\n    })\n  }\n, link: function() {\n    var cstr = this.cstr = this.vm.constructor;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    this.trackId = this.el.getAttribute('track-by')\n    this.el.removeAttribute('track-by')\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    this.curArr = [];\n    this.vmList = [];//子 VM list\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.vmList;\n    var trackId = this.trackId;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中相关变量\n      this.listPath = this.summary.paths.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items, trackId).forEach(function(item) {\n        var pos = indexByTrackId(item, curArr, trackId)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].$el)\n        list[pos].$destroy()\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = indexByTrackId(item, items, trackId, i)\n          , oldPos = indexByTrackId(item, curArr, trackId, i)\n          , vm, el\n          ;\n\n        //pos < 0 && (pos = items.lastIndexOf(item, i));\n        //oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.summary.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].$el || this.anchors.end)\n          list.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].$el, list[pos] && list[pos].$el || that.anchors.end)\n            parentNode.insertBefore(list[pos].$el, list[oldPos + 1] && list[oldPos + 1].$el || that.anchors.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].$index = pos\n            list[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      list.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      this.summary.paths.forEach(function(localKey) {\n        var local = that.vm.$get(localKey);\n        var dirs = local.__dirs__;\n        if(utils.isArray(local)) {\n          if(!dirs){\n            //数组操作方法\n            utils.extend(local, {\n              $set: function(i, item) {\n                local.splice(i, 1, utils.isObject(item) ? utils.extend({}, local[i], item) : item)\n              },\n              $replace: function(i, item) {\n                local.splice(i, 1, item)\n              },\n              $remove: function(i) {\n                local.splice(i, 1);\n              }\n            });\n            arrayMethods.forEach(function(method) {\n              local[method] = utils.afterFn(local[method], function() {\n                dirs.forEach(function(dir) {\n                  dir.listPath.forEach(function(path) {\n                    var reformed = scope.reformScope(dir.vm, path)\n                    reformed.vm.$update(reformed.path)\n                  })\n                })\n              })\n            });\n            dirs = local.__dirs__  = [];\n          }\n          //一个数组多处使用\n          //TODO 移除时的情况\n          if(dirs.indexOf(that) === -1) {\n            dirs.push(that)\n          }\n        }\n      })\n\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2, trackId) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = indexByTrackId(el, arr2Copy, trackId)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n\nfunction indexByTrackId(item, list, trackId, startIndex) {\n  startIndex = startIndex || 0;\n  var index = list.indexOf(item, startIndex);\n  if(index === -1 && trackId){\n    for(var i = startIndex, item1; item1 = list[i]; i++) {\n      if(item[trackId] ===  item1[trackId] && !utils.isUndefined(item[trackId])){\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\n","\"use strict\";\n\n//样式指令\nvar utils = require('../utils')\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',\n  'top', 'left', 'right', 'bottom'\n]\n\n//对于 IE6, IE7 浏览器需要使用 `el.style.getAttribute('cssText')` 与 `el.style.setAttribute('cssText')` 来读写 style 字符属性\n\nmodule.exports = {\n  link: function() {\n    this.initStyle = this.el.style.getAttribute ? this.el.style.getAttribute('cssText') : this.el.getAttribute('style')\n  },\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = this.initStyle ? this.initStyle.replace(/;?$/, ';') : '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr += styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top. 驼峰转连接符式\n        dashKey = key.replace(camelReg, function (upperChar) {\n          return '-' + upperChar.toLowerCase();\n        });\n\n        if (pixelAttrs.indexOf(dashKey) >= 0 && utils.isNumeric(val)) {\n          val += 'px';\n        }\n        if(!utils.isUndefined(val)){\n          styleStr += dashKey + ': ' + val + '; ';\n        }\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};\n","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\n//处理 $target,  $content, $tpl\n//target: el 替换的目标\nfunction tplParse(tpl, target, content) {\n  var el;\n  if(utils.isObject(target) && target.childNodes) {\n    content = createContent(target.childNodes);\n  }else{\n    if(content) {\n      content = createContent(content)\n    }\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    //字符串\n    el = createContent(tpl).childNodes[0];\n  }\n\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, content: content};\n}\n\n//将模板/元素/nodelist 包裹在 fragment 中\nfunction createContent(tpl) {\n  var content = doc.createDocumentFragment();\n  var wraper;\n  var nodes = [];\n  if(utils.isObject(tpl)) {\n    if(tpl.nodeName && tpl.nodeType) {\n      //dom 元素\n      content.appendChild(tpl);\n    }else if('length' in tpl){\n      //nodelist\n      nodes = tpl;\n    }\n  }else {\n    wraper = doc.createElement('div')\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\n    wraper.innerHTML = (tpl + '').trim();\n    nodes = wraper.childNodes;\n  }\n  while(nodes[0]) {\n    content.appendChild(nodes[0])\n  }\n  return content;\n}\n\n//html 中属性名不区分大小写, 并且会全部转成小写.\n//这里会将连字符写法转成驼峰式\n//attr-name --> attrName\n//attr--name --> attr-name\nvar hyphensReg = /-(-?)([a-z])/ig;\nvar hyphenToCamel = function(attrName) {\n  return attrName.replace(hyphensReg, function(s, dash, char) {\n    return dash ? dash + char : char.toUpperCase();\n  })\n}\n\nmodule.exports = {\n  tplParse: tplParse,\n  createContent: createContent,\n\n  //获取元素属性\n  getAttrs: function(el) {\n    var attributes = el.attributes;\n    var attrs = {};\n\n    for(var i = attributes.length - 1; i >= 0; i--) {\n      //连接符转驼峰写法\n      attrs[hyphenToCamel(attributes[i].nodeName)] = attributes[i].value;\n    }\n\n    return attrs;\n  }\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","/**\n * 表达式执行\n */\n\n\"use strict\";\n\nvar scope = require('./scope')\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n    //TODO 模板中方法的 this 应该指向 root\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n    //filter. name|filter\n  , '|': function(l, r){ return callFilter(l, r, []) }\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.repeat) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  , 'catchby': function(l, r) {\n      if(l['catch']) {\n        return l['catch'](r.bind(root))\n      }else{\n        summaryCall || console.error('catchby expect a promise')\n        return l;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n    //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\n  }\n};\n\nfunction callFilter(arg, filter, args) {\n  if(arg && arg.then) {\n    return arg.then(function(data) {\n      return filter.apply(root, [data].concat(args))\n    });\n  }else{\n    return filter.apply(root, [arg].concat(args))\n  }\n}\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  , root\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        //summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'repeat':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    root = scope.$root;\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.constructor.filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function(key, vm) {\n  var reformed = scope.reformScope(vm, key)\n  return reformed.vm[reformed.path]\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  //infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(10));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n  infix('catchby', 10);\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var ass, curVm = cur;\n\n  while(cur) {\n    curVm = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { vm: curVm, path: paths.join('.') }\n};\n\n\nexports.reformScope = reformScope;\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @returns {Object} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n, isNumeric: function(val) {\n    return !utils.isArray(val) && val - parseFloat(val) + 1 >= 0;\n  }\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nvar summaryCache = {};\n\n/**\n * 每个 directive 对应一个 watcher\n * @param {Bee} vm  directive 所处的环境\n * @param {Directive} dir\n */\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n  var summary = summaryCache[dir.path]\n\n  dir.watcher = this;\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n\n  if(!summary || summary._type !== dir.type){\n    summary = evaluate.summary(dir.ast);\n    summary._type = dir.type;\n    summaryCache[dir.path] = summary;\n  }\n  dir.summary = summary\n\n  //将该 watcher 与每一个属性建立引用关系\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    //将每个 key 对应的 watchers 都塞进来\n    this.watchers.push( watchers );\n  }\n\n  //是否在初始化时更新\n  dir.immediate !== false && this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers[i].unwatch()\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\n//获取某 keyPath 子路径的 watchers\nWatcher.getWatchers = function getWatchers(vm, keyPath) {\n  var _watchers = vm._watchers, watchers = [];\n  var point;\n  for(var key in _watchers) {\n    point = key.charAt(keyPath.length);\n    if(key.indexOf(keyPath) === 0 && (point === '.')) {\n      watchers = watchers.concat(_watchers[key])\n    }\n  }\n  return watchers\n}\n\nfunction watcherUpdate (val) {\n  try{\n    this.val = val;\n    this.dir.update(val, this.val);\n  }catch(e){\n    console.error(e);\n  }\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行并更新 view\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    if(this.hide) {\n      return;\n    }\n    newVal = this.dir.getValue(this.vm);\n\n    //简单过滤重复更新\n    if(newVal !== this.val || utils.isObject(newVal)){\n      if(newVal && newVal.then) {\n        //a promise\n        newVal.then(function(val) {\n          watcherUpdate.call(that, val);\n        });\n      }else{\n        watcherUpdate.call(this, newVal);\n      }\n    }\n  },\n  //移除\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}