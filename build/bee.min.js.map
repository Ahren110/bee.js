{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/env.js","src/eval.js","src/event-bind.js","src/event.js","src/parse.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$filters","$watchers","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","_isRendered","propKey","mergeProps","extend","tplParse","appendChild","content","bee","walk","key","$watch","$render","$init","update","keyPath","data","keyPaths","arguments","isObject","Object","keys","path","$update","nodeType","NODETYPE","FRAGMENT","childNodes","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","doc","createDocumentFragment","checkAttr","next","child","firstChild","nextSibling","dir","terminalPriority","terminal","cstr","constructor","dirs","directive","getDir","directives","components","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","parentNode","forEach","text","tn","createTextNode","insertBefore","bind","removeChild","create","escape","html","replace","isFunction","replaceChild","link","addWatcher","watch","Watcher","target","wraper","outerHTML","createElement","innerHTML","firstElementChild","children","env","document","utils","Event","Class","Dir","Com","parseKeyPath","deepSet","deepGet","ATTR","$filter","mount","id","instance","getElementById","Comp","tagName","prototype","$replace","noop","$get","strict","paths","headPath","scope","$set","val","add","hasKey","isBubble","attrs","watchers","join","pop","push","attr","isArray","callback","_originFn","$unwatch","splice","version","./class.js","./component.js","./directive.js","./directives","./env.js","./event.js","./token.js","./utils.js","./watcher.js",2,3,"protoProps","staticProps","hasOwnProperty","sup","apply","Fn","__super__",4,"tag","Component","statics","tags","component",5,"opts","Directive","type","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","parse","evaluate","tearDown","getNodes","nodes","ast","message","console","error","getValue","eval","./eval.js","./parse.js",6,"setAttr","style","className","removeAttr","newAttrs","position","../utils.js",7,"vm","comp","comName","filter","curPath","comPath","warn",8,"frag","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./model.js","./on.js","./repeat.js","./style.js",9,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",10,"eventBind","name",11,"arrDiff","arr1","arr2","arrayMethods","curArr","list","items","that","listPath","locals","item","pos","oldPos","lastIndexOf","cloneNode","assignments","$index","__bee__","$remove","method","afterFn",12,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",13,"root","jsdom",14,"getOperator","arity","operators","reset","summaryCall","context","filters","summary","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",".","(","|","Date","Function","in","assignment","ternary","?","concat","argName","tree","arg","res","args","Array",15,"event","addEventListener","attachEvent","removeEventListener","detachEvent",16,"$on","ctx","_handlers","$one","one","$off","handlers","$trigger",17,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",18,"tokenReg","lastIndex","exec","trim",19,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","cur",20,"exParse","curVm","localKey","willUpdate","ass","NaN","STATE_READY","shift","watcherUpdate","STATE_CALLED","then"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar env = require('./env.js')\n  , doc = env.document\n  , utils = require('./utils.js')\n  , Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , token = require('./token.js')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isFunction = utils.isFunction\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , deepGet = utils.deepGet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\nvar mergeProps = {\n  $data: 1, $filter: 1, $watchers: 1\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: this.$data || {}\n  , $filters: this.$filters || {}\n  , $watchers: this.$watchers || {}\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: null\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: this._watchers || {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  for(var propKey in props) {\n    if(propKey in mergeProps) {\n      extend(defaults[propKey], props[propKey])\n      defaults[propKey] = extend(props[propKey], defaults[propKey]);\n    }else{\n      defaults[propKey] = props[propKey];\n    }\n  }\n\n  //合并所有到当前空间下\n  extend(this, defaults);\n  extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = tplParse(tpl, this.$target);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$content = el.content;\n\n  this.$el.bee = this;\n\n  walk.call(this, this.$el);\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this.$render(this.$data);\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, Class, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, Event, {\n  /**\n   * ### ant.render\n   * 渲染模板\n   */\n  $render: function(data) {\n    data = data || this.$data;\n    this.$replace(data);\n    return this;\n  }\n, $init: utils.noop\n  /**\n   * 获取属性/方法\n   * @param {String} keyPath 路径\n   * @param {Boolean} [strict=false] 是否严格在自身中查找.\n   * @return {*}\n   */\n, $get: function(keyPath, strict) {\n    strict = strict === true;\n\n    var scope = this\n      , path = keyPath\n      , paths, headPath\n      ;\n\n    if(!strict) {\n      if(this.$parent) {\n        paths = parseKeyPath(path);\n        headPath = paths[0]\n        if(scope._assignments && scope._assignments.length) {\n          // 具名 repeat 不会直接查找自身作用域\n          if(headPath === this._assignments[0]) {\n            scope = {};\n            scope[headPath] = this;\n          }else{\n            return this.$parent.$get(keyPath, strict)\n          }\n        }else{\n          //匿名 repeat\n          return (headPath in this) ? this.$get(keyPath) : this.$parent.$get(keyPath, strict)\n        }\n      }\n    }\n\n    return deepGet(path, scope);\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      extend(true, this.$data, key);\n      extend(true, this, key);\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      add = deepSet(key, val, {});\n      keys[0] !== '$data' && extend(true, this.$data, add);\n      extend(true, this, add);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      Object.keys(this.$data).forEach(function(key) {\n        delete this[key];\n      }.bind(this))\n      this.$data = key;\n      extend(this, key);\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      if(keys[0] !== 'data') {\n        deepSet(key, null, this.$data);\n        deepSet(key, val, this.$data);\n      }\n      deepSet(key, null, this);\n      deepSet(key, val, this);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key];\n\n      if (watchers) {\n        for (var i = 0, l = watchers.length; i < l; i++) {\n          watchers[i].update();\n        }\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      addWatcher.call(this, new Dir('watcher', {path: keyPath, update: update}))\n    }\n  }\n  //TODO 支持 表达式 keyPath ?\n, $unwatch: function (keyPath, callback) {\n    var watchers = this._watchers[keyPath] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\ndoc.createElement('template')\n//遍历 dom 树\nfunction walk(el) {\n\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      walk.call(this, el[i]);\n    }\n    return;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n        break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return;\n        break;\n    case NODETYPE.TEXT:\n      //文本节点\n      checkText.call(this, el);\n      return;\n        break;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  if(checkAttr.call(this, el)){\n    return;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    walk.call(this, el.content)\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    walk.call(this, child);\n    child = next;\n  }\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , prefix = cstr.prefix\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\n    , dir\n    , terminalPriority, terminal\n    , result = {};\n    ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    setBinding.call(this, dir);\n\n    if(dir.terminal) {\n      terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.dirs = dirs;\n\n  return terminal\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        checkText.call(this, tn);\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = create(t.escape ? dirs.text : dirs.html);\n      setBinding.call(this, extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n}\n\nfunction setBinding(dir) {\n  if(dir.replace) {\n    var el = dir.el;\n    if(isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else if(dir.replace){\n      //dir.node = doc.createComment(dir.type + ' = ' + dir.path);\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.link(this);\n\n  addWatcher.call(this, dir)\n}\n\nfunction addWatcher(dir) {\n  if(dir.path && dir.watch) {\n    return new Watcher(this, dir);\n  }\n}\n\n\n//target: el 替换的目标\nfunction tplParse(tpl, target) {\n  var el, wraper;\n  var content = doc.createDocumentFragment()\n  if(isObject(target) && target.childNodes) {\n    while(target.childNodes[0]) {\n      content.appendChild(target.childNodes[0]);\n    }\n  }\n  if(isObject(tpl)){\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    wraper = doc.createElement('div');\n    wraper.innerHTML = tpl;\n\n    el = wraper.firstElementChild || wraper.children[0];\n\n  }\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, content: content};\n}\n\nBee.version = '0.1.2';\n\nmodule.exports = Bee;\n",null,"var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n, getValue: function(scope) {\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(utils.isUndefined(val) || val === null) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      //TODO\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with' || dir.dirName === 'attr') {\n          //这里 attr 及 with 指令效果一样\n          comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comp.$set(comPath, val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      comp = new Comp({\n        $target: el,\n        $root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\n//dirs.partial = require('./partial.js');\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n    var paths = utils.parseKeyPath(keyPath);\n    var headPath = paths[0];\n\n    if(!keyPath) { return false; }\n\n    //TODO 实现类似 .$get 的 .$set\n    if(vm.$parent) {\n      if (vm._assignments && vm._assignments[0] === headPath) {\n        keyPath = paths.slice(1).join('.') || '$data';\n      }else{\n        vm = vm.$parent;\n      }\n    }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath, false))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\n\n//TODO 移除时的情况\nmodule.exports = {\n  link: function(vm) {\n    //this.events = {};\n    this.vm = vm;\n  }\n, update: function(events) {\n    for(var name in events) {\n      eventBind.addEvent(this.el, name, events[name].bind(this.vm));\n    }\n    //this.events = events;\n  }\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = this.cstr = cstr.__super__.constructor;\n    }\n\n\n    this.curArr = [];\n    this.list = [];//[{el:el, vm: vm}]\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中\n      this.listPath = this.locals.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].el)\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        pos < 0 && (pos = items.lastIndexOf(item, i));\n        oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].el || this.anchors.end)\n          list.splice(pos, 0, {el: el, vm: vm});\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].el, list[pos] && list[pos].el || that.anchor.end)\n            parentNode.insertBefore(list[pos].el, list[oldPos + 1] && list[oldPos + 1].el || that.anchor.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].vm.$index = pos\n            list[pos].vm.$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(item, i) {\n        item.vm.$index = i\n        item.vm.$update('$index', false)\n      });\n\n      if(!items.__bee__){\n        //数组操作方法\n        utils.extend(items, {\n          $set: function(i, item) {\n            that.list[i].vm.$set(item);\n          },\n          $replace: function(i, item) {\n            that.list[i].vm.$replace(item)\n          },\n          $remove: function(i) {\n            items.splice(i, 1);\n            that.listPath.forEach(function(path) {\n              that.vm.$update(path)\n            });\n          }\n        });\n        arrayMethods.forEach(function(method) {\n          items[method] = utils.afterFn(items[method], function() {\n            that.listPath.forEach(function(path) {\n              that.vm.$update(path)\n            })\n          })\n        });\n        items.__bee__  = true;\n      }\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  return arr1.filter(function(el) {\n    return arr2.indexOf(el) < 0\n  })\n}\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\n//TODO 待完善\nvar pixelAttrs = [\n  'width','height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    for(var key in styles) {\n      val = styles[key];\n\n      dashKey = key.replace(camelReg, function (upperChar) {\n        return '-' + upperChar.toLowerCase();\n      });\n\n      if(!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n        val += 'px';\n      }\n      styleStr += dashKey + ': ' + val + '; ';\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n  , '|': function(l, r){ return r.call(context.locals, l) }//filter. name|filter\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.assignment) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n  //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return s.apply(context.locals, [f].concat(t)); }\n  }\n};\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'assignment':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function (key, scope) {\n  if(scope.$get) {\n    return scope.$get(key, false)\n  }else{\n    return scope[key]\n  }\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","var utils = require('./utils.js');\n\nvar Event = {\n  //监听自定义事件.\n  $on: function(name, handler, context) {\n    var ctx = context || this\n      ;\n\n    ctx._handlers = ctx._handlers || {};\n    ctx._handlers[name] = ctx._handlers[name] || [];\n\n    ctx._handlers[name].push({handler: handler, context: context, ctx: ctx});\n    return this;\n  },\n  $one: function (name, handler, context) {\n    if(handler){\n      handler.one = true;\n    }\n    return this.on(name, handler, context);\n  },\n  //移除监听事件.\n  $off: function(name, handler, context) {\n    var ctx = context || this\n      , handlers = ctx._handlers\n      ;\n\n    if(name && handlers[name]){\n      if(utils.isFunction(handler)){\n        for(var i = handlers[name].length - 1; i >=0; i--) {\n          if(handlers[name][i].handler === handler){\n            handlers[name].splice(i, 1);\n          }\n        }\n      }else{\n        handlers[name] = [];\n      }\n    }\n    return this;\n  },\n  //触发自定义事件.\n  //该方法没有提供静态化的 context 参数. 如要静态化使用, 应该: `Event.trigger.call(context, name, data)`\n  $trigger: function(name, data) {\n    var args = [].slice.call(arguments, 1)\n      , handlers = this._handlers && this._handlers[name]\n      ;\n\n    if(handlers){\n      for(var i = 0, item; item = handlers[i]; i++) {\n        item.handler.apply(this, args);\n        if(item.handler.one) {\n          handlers.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nmodule.exports = Event;\n","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\tvar f; //The regexp flag.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// regexp\n\t\t}else if(c === '/' && false){\n\t\t\ti += 1;\n\t\t\tstr = '';\n\t\t\tf = '';\n\t\t\tfor(; ; ) {\n\t\t\t\tc = code.charAt(i);\n\n\t\t\t\t// Look for close slash\n\n\t\t\t\tif(c === '/') {\n\t\t\t\t\tfor(; ; ) {\n\t\t\t\t\t\tc = code.charAt(i + 1);\n\t\t\t\t\t\tif((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') {\n\t\t\t\t\t\t\tf += c;\n\t\t\t\t\t\t\ti += 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated regexp\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tc = '\\\\' + c;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('regexp', new RegExp(str, f)));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'assignment';\n\t\t\tthis.assignment = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(0);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n  //prefix('/', function() {\n  //  var a = [], n, v;\n  //  if(token.id !== '/') {\n  //    while(true) {\n  //      n = token;\n  //      advance();\n  //    }\n  //  }\n  //  advance('/');\n  //  this.first = a;\n  //  return this;\n  //})\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) ) {\n            target[ name ] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, deepGet: function (keyStr, obj) {\n    var chain, cur = obj, key;\n    if(keyStr){\n      chain = parseKeyPath(keyStr);\n      for(var i = 0, l = chain.length; i < l; i++) {\n        key = chain[i];\n        if(cur){\n          cur = cur[key];\n        }else{\n          return;\n        }\n      }\n    }\n    return cur;\n  }\n, extend: extend\n, create: create\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  ;\n\nvar extend = utils.extend;\n\n//表达式解析\nfunction exParse() {\n  var summary\n    , dir = this.dir\n    ;\n\n  dir.parse();\n\n  summary = evaluate.summary(dir.ast);\n  extend(dir, summary);\n  extend(this, summary);\n};\n\nfunction Watcher(vm, dir) {\n  var path, scope = vm, curVm, localKey, willUpdate, ass, paths;\n\n  this.dir = dir;\n  this.vm = vm;\n\n  this.val = NaN;\n\n  this.state = Watcher.STATE_READY;\n\n  exParse.call(this, dir.path);\n\n  for(var i = 0, l = this.paths.length; i < l; i++) {\n    paths = utils.parseKeyPath(this.paths[i]);\n    localKey = paths[0];\n\n    while(scope) {\n      curVm = scope;\n      ass = scope._assignments;\n\n      if(ass && ass.length) {\n        //具名 repeat\n        if(ass[0] === localKey) {\n          if(paths.length == 1) {\n            paths[0] = '$data';\n          }else{\n            paths.shift();\n          }\n          break;\n        }\n      }else if(localKey in scope){\n        break;\n      }\n\n      //向上查找\n      scope = scope.$parent;\n    }\n    path = paths.join('.');\n    curVm._watchers[path] = curVm._watchers[path] || [];\n    curVm._watchers[path].push(this);\n  }\n\n  //没有变量 / 变量不在当前作用域的表达式立即求值\n  for(var i = 0, l = this.locals.length; i < l; i++) {\n    if(utils.isObject(this.vm.$data) && (this.locals[i] in this.vm.$data)) {\n      break;\n    }\n  }\n  if(i == l) {\n    willUpdate = true;\n  }\n\n  if(willUpdate || this.vm._isRendered) {\n    this.update();\n  }\n}\n\n//TODO\nextend(Watcher, {\n  STATE_READY: 0\n, STATE_CALLED: 1\n}, Class);\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nextend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n\n    this.state = Watcher.STATE_CALLED;\n  }\n});\n\nmodule.exports = Watcher"],"sourceRoot":"./"}