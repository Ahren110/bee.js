{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/event.js","src/parse.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$filters","$watchers","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","_isRendered","propKey","mergeProps","isObject","extend","domUtils","tplParse","appendChild","content","bee","checkBinding","walk","key","$watch","$replace","$init","update","keyPath","data","keyPaths","arguments","Object","keys","path","$update","doc","document","utils","Event","Class","Dir","Com","Watcher","dirs","isUndefined","parseKeyPath","deepSet","deepGet","create","$filter","afterFn","noop","sub","directives","components","mount","id","instance","nodeType","getElementById","Comp","tagName","toLowerCase","dir","directive","prototype","$get","strict","paths","headPath","scope","__repeat","$set","val","add","hasKey","forEach","bind","isBubble","attrs","watchers","replace","join","pop","push","isArray","attr","callback","_originFn","addWatcher","$unwatch","unwatch","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./event.js","./utils.js","./watcher.js",2,3,"NODETYPE","FRAGMENT","childNodes","ELEMENT","COMMENT","TEXT","checkText","nodeName","createDocumentFragment","checkAttr","next","child","firstChild","nextSibling","terminalPriority","terminal","cstr","constructor","getDir","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","parentNode","text","tn","createTextNode","insertBefore","removeChild","escape","html","isFunction","replaceChild","link","ATTR","createElement","./token.js","./utils","./watcher",4,"protoProps","staticProps","hasOwnProperty","sup","apply","Fn","__super__",5,"tag","Component","statics","tags","component",6,"opts","Directive","type","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","parse","evaluate","tearDown","watch","getNodes","nodes","ast","message","console","error","getValue","eval","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","newAttrs","position","../utils.js",8,"vm","comp","comName","filter","curPath","comPath","warn",9,"createContent","../check-binding","../dom-utils",10,"innerHTML","frag","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./content.js","./model.js","./on.js","./repeat.js","./style.js",11,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",12,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","shift","../utils",13,"arrDiff","arr1","arr2","arr2Copy","index","splice","arrayMethods","curArr","list","items","that","listPath","locals","item","pos","oldPos","cloneNode","assignments","$index","__dirs__","$remove","method",14,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",15,"outerHTML","wraper","trim",16,"root","jsdom",17,"getOperator","arity","operators","reset","summaryCall","context","filters","summary","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","assignment","ternary","?","concat","argName","tree","arg","res","args","Array",18,"event","addEventListener","attachEvent","removeEventListener","detachEvent",19,"$on","ctx","_handlers","$one","one","$off","handlers","$trigger",20,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",21,"tokenReg","lastIndex","exec",22,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","arrLike","arr",23,"exParse","curVm","localKey","ass","NaN","watcherUpdate","then"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , deepGet = utils.deepGet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\nvar mergeProps = {\n  $data: 1, $filter: 1, $watchers: 1\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: this.$data || {}\n  , $filters: this.$filters || {}\n  , $watchers: this.$watchers || {}\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: null\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: this._watchers || {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  //保持对传入属性的引用\n  for(var propKey in props) {\n    if((propKey in mergeProps) && isObject(props[propKey])) {\n      //mergeProps 中的属性会被默认值扩展\n      extend(defaults[propKey], props[propKey])\n      defaults[propKey] = extend(props[propKey], defaults[propKey]);\n    }else{\n      defaults[propKey] = props[propKey];\n    }\n  }\n\n  //合并所有到当前空间下\n  extend(this, defaults);\n  extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = domUtils.tplParse(tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$content = el.content;\n\n  this.$el.bee = this;\n\n  this.$content && checkBinding.walk.call(this.$root, this.$content);\n  checkBinding.walk.call(this, this.$el);\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this.$replace(this.$data);\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives 和 components 引用\n  sub.directives = create(this.directives);\n  sub.components = create(this.components);\n})}, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, Event, {\n  $init: utils.noop\n  /**\n   * 获取属性/方法\n   * @param {String} keyPath 路径\n   * @param {Boolean} [strict=false] 是否严格在自身中查找.\n   * @return {*}\n   */\n, $get: function(keyPath, strict) {\n    strict = strict === true;\n\n    var scope = this\n      , path = keyPath\n      , paths, headPath\n      ;\n\n    if(!strict) {\n      if(this.__repeat) {\n        paths = parseKeyPath(path);\n        headPath = paths[0]\n        if(scope._assignments && scope._assignments.length) {\n          if(headPath === this._assignments[0]) {\n            // 具名 repeat 不会直接查找自身作用域\n            scope = {};\n            scope[headPath] = this.$data;\n          }else if(headPath === '$index' || headPath === '$parent') {\n            scope = this;\n          }else{\n            return this.$parent.$get(keyPath, strict)\n          }\n        }else{\n          //匿名 repeat\n          return (headPath in this) ? this.$get(keyPath) : this.$parent.$get(keyPath, strict)\n        }\n      }\n    }\n\n    return deepGet(path, scope);\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(true, this.$data, key);\n        extend(true, this, key);\n      }else{\n        this.$data = key;\n      }\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      add = deepSet(key, val, {});\n      if(keys[0] === '$data') {\n        add = add.$data\n      }\n      extend(true, this.$data, add);\n      extend(true, this, add);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        Object.keys(this.$data).forEach(function(key) {\n          delete this[key];\n        }.bind(this))\n        extend(this, key);\n      }\n      this.$data = key;\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      if(keys[0] !== '$data') {\n        deepSet(key, null, this.$data);\n        deepSet(key, val, this.$data);\n      }\n      deepSet(key, null, this);\n      deepSet(key, val, this);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs) && !utils.isArray(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      Watcher.addWatcher.call(this, new Dir('watcher', {path: keyPath, update: update}))\n    }\n  }\n, $unwatch: function (keyPath, callback) {\n    Watcher.unwatch(this, keyPath, callback)\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\n\nBee.version = '0.2.0';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\r\n\r\nvar Watcher = require('./watcher')\r\n  , token = require('./token.js')\r\n  , utils = require('./utils')\r\n  , doc = require('./env.js').document\r\n  ;\r\n\r\nvar NODETYPE = {\r\n    ELEMENT: 1\r\n  , ATTR: 2\r\n  , TEXT: 3\r\n  , COMMENT: 8\r\n  , FRAGMENT: 11\r\n};\r\n\r\ndoc.createElement('template')\r\n\r\n//遍历 dom 树\r\nfunction walk(el) {\r\n\r\n  if(el.nodeType === NODETYPE.FRAGMENT) {\r\n    el = el.childNodes;\r\n  }\r\n\r\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\r\n    //node list\r\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\r\n    for(var i = 0; i < el.length; i++) {\r\n      walk.call(this, el[i]);\r\n    }\r\n    return;\r\n  }\r\n\r\n  switch (el.nodeType) {\r\n    case NODETYPE.ELEMENT:\r\n      break;\r\n    case NODETYPE.COMMENT:\r\n      //注释节点\r\n      return;\r\n      break;\r\n    case NODETYPE.TEXT:\r\n      //文本节点\r\n      checkText.call(this, el);\r\n      return;\r\n      break;\r\n  }\r\n\r\n  if(el.nodeName.toLowerCase() === 'template') {\r\n    //template shim\r\n    if(!el.content) {\r\n      el.content = doc.createDocumentFragment();\r\n      while(el.childNodes[0]) {\r\n        el.content.appendChild(el.childNodes[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  if(checkAttr.call(this, el)){\r\n    return;\r\n  }\r\n\r\n  if(el.nodeName.toLowerCase() === 'template') {\r\n    walk.call(this, el.content)\r\n  }\r\n\r\n  for(var child = el.firstChild, next; child; ){\r\n    next = child.nextSibling;\r\n    walk.call(this, child);\r\n    child = next;\r\n  }\r\n}\r\n\r\n//遍历属性\r\nfunction checkAttr(el) {\r\n  var cstr = this.constructor\r\n    , prefix = cstr.prefix\r\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\r\n    , dir\r\n    , terminalPriority, terminal\r\n    , result = {};\r\n  ;\r\n\r\n  for (var i = 0, l = dirs.length; i < l; i++) {\r\n    dir = dirs[i];\r\n    dir.dirs = dirs;\r\n\r\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\r\n    if(terminalPriority > dir.priority) {\r\n      break;\r\n    }\r\n\r\n    el.removeAttribute(dir.nodeName);\r\n\r\n    setBinding.call(this, dir);\r\n\r\n    if(dir.terminal) {\r\n      terminal = true;\r\n      terminalPriority = dir.priority;\r\n    }\r\n  }\r\n\r\n  result.dirs = dirs;\r\n\r\n  return terminal\r\n}\r\n\r\n//处理文本节点中的绑定占位符({{...}})\r\nfunction checkText(node) {\r\n  if(token.hasToken(node.nodeValue)) {\r\n    var tokens = token.parseToken(node.nodeValue)\r\n      , textMap = tokens.textMap\r\n      , el = node.parentNode\r\n      , dirs = this.constructor.directives\r\n      , t, dir\r\n      ;\r\n\r\n    //将{{key}}分割成单独的文本节点\r\n    if(textMap.length > 1) {\r\n      textMap.forEach(function(text) {\r\n        var tn = doc.createTextNode(text);\r\n        el.insertBefore(tn, node);\r\n        checkText.call(this, tn);\r\n      }.bind(this));\r\n      el.removeChild(node);\r\n    }else{\r\n      t = tokens[0];\r\n      //内置各占位符处理.\r\n      dir = utils.create(t.escape ? dirs.text : dirs.html);\r\n      setBinding.call(this, utils.extend(dir, t, {\r\n        el: node\r\n      }));\r\n    }\r\n  }\r\n}\r\n\r\nfunction setBinding(dir) {\r\n  if(dir.replace) {\r\n    var el = dir.el;\r\n    if(utils.isFunction(dir.replace)) {\r\n      dir.node = dir.replace();\r\n    }else if(dir.replace){\r\n      dir.node = doc.createTextNode('');\r\n    }\r\n\r\n    dir.el = dir.el.parentNode;\r\n    dir.el.replaceChild(dir.node, el);\r\n  }\r\n\r\n  dir.link(this);\r\n\r\n  Watcher.addWatcher.call(this, dir)\r\n}\r\n\r\nmodule.exports = {\r\n  walk: walk\r\n};\r\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n, getValue: function(scope) {\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(utils.isUndefined(val) || val === null) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      //TODO\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with' || dir.dirName === 'attr') {\n          //这里 attr 及 with 指令效果一样\n          comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comp.$set(comPath, val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      comp = new Comp({\n        $target: el,\n        //$root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\r\n\r\nvar domUtils = require('../dom-utils')\r\n  , checkBinding = require('../check-binding')\r\n  ;\r\n\r\nmodule.exports = {\r\n  replace: true\r\n, anchor: true\r\n, link: function(vm) {\r\n    this.vm = vm;\r\n  }\r\n, update: function(tpl) {\r\n    var nodes = this.getNodes()\r\n    var parent = this.anchors.end.parentNode\r\n    var content = domUtils.createContent(tpl)\r\n\r\n    checkBinding.walk.call(this.vm, content)\r\n    //TODO 移除对应的 watcher\r\n    nodes.forEach(function(node) {\r\n      parent.removeChild(node);\r\n    })\r\n    parent.insertBefore(content, this.anchors.end)\r\n  }\r\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\ndirs.content = require('./content.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n    var paths = utils.parseKeyPath(keyPath);\n    var headPath = paths[0];\n\n    if(!keyPath) { return false; }\n\n    //TODO 实现类似 .$get 的 .$set\n    if(vm.$parent) {\n      if (vm._assignments && vm._assignments[0] === headPath) {\n        keyPath = paths.slice(1).join('.') || '$data';\n      }else{\n        vm = vm.$parent;\n      }\n    }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath, false))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\n//TODO 移除时的情况\nmodule.exports = {\n  watch: false\n, link: function(vm) {\n    //this.events = {};\n    this.vm = vm;\n  }\n, update: function(events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    this.curArr = [];\n    this.list = [];//[{el:el, vm: vm}]\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中\n      this.listPath = this.locals.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      //TODO 删除引用父级的 watchers\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].el)\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        //pos < 0 && (pos = items.lastIndexOf(item, i));\n        //oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].el || this.anchors.end)\n          list.splice(pos, 0, {el: el, vm: vm});\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].el, list[pos] && list[pos].el || that.anchor.end)\n            parentNode.insertBefore(list[pos].el, list[oldPos + 1] && list[oldPos + 1].el || that.anchor.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].vm.$index = pos\n            list[pos].vm.$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(item, i) {\n        item.vm.$index = i\n        item.el.$index = i\n        item.vm.$update('$index', false)\n      });\n\n      if(!items.__dirs__){\n        //数组操作方法\n        utils.extend(items, {\n          $set: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].vm.$set(item);\n            })\n          },\n          $replace: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].vm.$replace(item)\n            })\n          },\n          $remove: function(i) {\n            items.splice(i, 1);\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function (path) {\n                dir.vm.$update(path)\n              });\n            })\n          }\n        });\n        arrayMethods.forEach(function(method) {\n          items[method] = utils.afterFn(items[method], function() {\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function(path) {\n                dir.vm.$update(path)\n              })\n            })\n          })\n        });\n        items.__dirs__  = [];\n      }\n      //一个数组多处使用\n      //TODO 移除时的情况\n      if(items.__dirs__.indexOf(that) === -1) {\n        items.__dirs__.push(that)\n      }\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = arr2Copy.indexOf(el)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\n//TODO 待完善\nvar pixelAttrs = [\n  'width','height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    for(var key in styles) {\n      val = styles[key];\n\n      dashKey = key.replace(camelReg, function (upperChar) {\n        return '-' + upperChar.toLowerCase();\n      });\n\n      if(!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n        val += 'px';\n      }\n      styleStr += dashKey + ': ' + val + '; ';\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","\"use strict\";\r\n\r\nvar doc = require('./env.js').document\r\nvar utils = require('./utils')\r\n\r\n//处理 $target,  $content, $tpl\r\n//target: el 替换的目标\r\nfunction tplParse(tpl, target, content) {\r\n  var el;\r\n  if(utils.isObject(target) && target.childNodes) {\r\n    content = createContent(target.childNodes);\r\n  }else{\r\n    if(content) {\r\n      content = createContent(content)\r\n    }\r\n  }\r\n\r\n  if(utils.isObject(tpl)){\r\n    //DOM 元素\r\n    el = tpl;\r\n    tpl = el.outerHTML;\r\n  }else{\r\n    //字符串\r\n    el = createContent(tpl).childNodes[0];\r\n  }\r\n\r\n  if(target){\r\n    target.parentNode && target.parentNode.replaceChild(el, target);\r\n  }\r\n\r\n  return {el: el, tpl: tpl, content: content};\r\n}\r\n\r\n//将模板/元素/nodelist 包裹在 fragment 中\r\nfunction createContent(tpl) {\r\n  var content = doc.createDocumentFragment();\r\n  var wraper;\r\n  var nodes = [];\r\n  if(utils.isObject(tpl)) {\r\n    if(tpl.nodeName && tpl.nodeType) {\r\n      //dom 元素\r\n      content.appendChild(tpl);\r\n    }else if('length' in tpl){\r\n      //nodelist\r\n      nodes = tpl;\r\n    }\r\n  }else {\r\n    wraper = doc.createElement('div')\r\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\r\n    wraper.innerHTML = (tpl + '').trim();\r\n    nodes = wraper.childNodes;\r\n  }\r\n  while(nodes[0]) {\r\n    content.appendChild(nodes[0])\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  tplParse: tplParse,\r\n  createContent: createContent\r\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n  , '|': function(l, r){ return r.call(context.locals, l) }//filter. name|filter\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.assignment) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n  //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return s.apply(context.locals, [f].concat(t)); }\n  }\n};\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'assignment':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function (key, scope) {\n  if(scope.$get) {\n    return scope.$get(key, false)\n  }else{\n    return scope[key]\n  }\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","var utils = require('./utils.js');\n\nvar Event = {\n  //监听自定义事件.\n  $on: function(name, handler, context) {\n    var ctx = context || this\n      ;\n\n    ctx._handlers = ctx._handlers || {};\n    ctx._handlers[name] = ctx._handlers[name] || [];\n\n    ctx._handlers[name].push({handler: handler, context: context, ctx: ctx});\n    return this;\n  },\n  $one: function (name, handler, context) {\n    if(handler){\n      handler.one = true;\n    }\n    return this.on(name, handler, context);\n  },\n  //移除监听事件.\n  $off: function(name, handler, context) {\n    var ctx = context || this\n      , handlers = ctx._handlers\n      ;\n\n    if(name && handlers[name]){\n      if(utils.isFunction(handler)){\n        for(var i = handlers[name].length - 1; i >=0; i--) {\n          if(handlers[name][i].handler === handler){\n            handlers[name].splice(i, 1);\n          }\n        }\n      }else{\n        handlers[name] = [];\n      }\n    }\n    return this;\n  },\n  //触发自定义事件.\n  //该方法没有提供静态化的 context 参数. 如要静态化使用, 应该: `Event.trigger.call(context, name, data)`\n  $trigger: function(name, data) {\n    var args = [].slice.call(arguments, 1)\n      , handlers = this._handlers && this._handlers[name]\n      ;\n\n    if(handlers){\n      for(var i = 0, item; item = handlers[i]; i++) {\n        item.handler.apply(this, args);\n        if(item.handler.one) {\n          handlers.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nmodule.exports = Event;\n","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\tvar f; //The regexp flag.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'assignment';\n\t\t\tthis.assignment = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, deepGet: function (keyStr, obj) {\n    var chain, cur = obj, key;\n    if(keyStr){\n      chain = parseKeyPath(keyStr);\n      for(var i = 0, l = chain.length; i < l; i++) {\n        key = chain[i];\n        if(cur){\n          cur = cur[key];\n        }else{\n          return;\n        }\n      }\n    }\n    return cur;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  ;\n\nvar extend = utils.extend;\n\n//表达式解析\nfunction exParse() {\n  var summary\n    , dir = this.dir\n    ;\n\n  dir.parse();\n\n  summary = evaluate.summary(dir.ast);\n  extend(dir, summary);\n}\n\nfunction Watcher(vm, dir) {\n  var path, scope = vm, curVm, localKey, willUpdate, ass, paths;\n\n  this.dir = dir;\n  this.vm = vm;\n\n  this.val = NaN;\n\n  exParse.call(this, dir.path);\n\n  for(var i = 0, l = this.dir.paths.length; i < l; i++) {\n    paths = utils.parseKeyPath(this.dir.paths[i]);\n    localKey = paths[0];\n\n    while(scope) {\n      curVm = scope;\n      ass = scope._assignments;\n\n      if(ass && ass.length) {\n        //具名 repeat\n        if(ass[0] === localKey) {\n          if(paths.length == 1) {\n            paths[0] = '$data';\n          }else{\n            paths.shift();\n          }\n          break;\n        }else if(localKey === '$index' || localKey === '$parent') {\n          break;\n        }\n      }else if(localKey in scope){\n        break;\n      }\n\n      //向上查找\n      scope = scope.$parent;\n    }\n    if(dir.watch) {\n      path = paths.join('.');\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n    }\n  }\n\n  //没有变量 / 变量不在当前作用域的表达式立即求值\n  //for(var i = 0, l = this.dir.locals.length; i < l; i++) {\n  //  if(utils.isObject(this.vm.$data) && (this.dir.locals[i] in this.vm.$data)) {\n  //    break;\n  //  }\n  //}\n  //if(i == l) {\n  //  willUpdate = true;\n  //}\n\n  //if(willUpdate || this.vm._isRendered) {\n    this.update();\n  //}\n}\n\nfunction unwatch (vm, key, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(key))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + key + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nextend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}