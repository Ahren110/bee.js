{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/if.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/ref.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","elInfo","defaults","$data","extend","constructor","$refs","$mixins","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","lifeCycles","utils","afterFn","bind","domUtils","tplParse","appendChild","el","content","$beforeInit","bee","checkBinding","walk","$afterInit","update","keyPath","data","keyPaths","$beforeUpdate","arguments","Object","keys","path","$update","$afterUpdate","doc","document","Class","directive","Com","Watcher","dirs","scope","Dir","Directive","parseKeyPath","deepSet","create","noop","$beforeDestroy","$afterDestroy","sub","directives","components","filters","json","obj","replacer","space","JSON","stringify","filter","filterName","mount","id","instance","Comp","dir","nodeType","getElementById","getDirs","type","getComponent","getAttrs","__mountcall","prototype","$get","expression","watch","parse","getValue","$set","key","val","reVm","$replace","last","reformed","reKey","hasKey","reformScope","vm","k","shift","join","isBubble","watchers","replace","pop","push","getWatchers","watcher","$watch","callback","immediate","_originFn","addWatcher","$unwatch","unwatch","$destroy","removeEl","wacher","parentNode","removeChild","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",2,3,"dirResult","NODETYPE","FRAGMENT","childNodes","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","text","tn","createTextNode","insertBefore","escape","html","isFunction","replaceChild","link","unBinding","ATTR","createElement","./directive","./token.js","./utils","./watcher",4,"protoProps","staticProps","sup","apply","Fn","supRef","__super__",5,"tag","tagName","Component","statics","tags","componentName","paths","CurCstr","comName","component",6,"opts","attr","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","getDir","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","subType","evaluate","astCache","unLink","tearDown","getNodes","nodes","cache","_type","ast","message","console","error","forgive","eval","./dom-utils","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","attrs","newAttrs","position","../utils.js",8,"comp","curPath","comPath","hyphenToCamel","createContent","warn","../check-binding","../dom-utils",9,10,"frag","remove","state","add","walked","_hide","_needUpdate","../env",11,"innerHTML","template","src","repeat","model","on","ref","../env.js","./attr","./component","./content","./if","./model","./on","./ref","./repeat","./style",12,"events","teminal","ev","isSetDefaut","crlf","newVal","handler","callHandler","propertyName","ie","$valuekey","oldValue","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js","../token.js",13,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",14,"isArray","splice","$index","__repeat",15,"getAnchor","index","vmList","isRange","__anchor__","getNodesByIndex","getElByIndex","arrDiff","arr1","arr2","trackId","arr2Copy","indexByTrackId","item","list","startIndex","item1","arrayMethods","getAttribute","curArr","items","that","listPath","summary","pos","oldPos","cloneNode","assignments","localKey","local","__dirs__","$remove","method","../scope",16,"camelReg","pixelAttrs","initStyle","styles","dashKey","styleStr","upperChar","isNumeric",17,"outerHTML","wraper","trim","hasAttr","hasAttribute",18,"root","jsdom",19,"callFilter","arg","args","then","getOperator","arity","operators","reset","summaryCall","context","locals","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","catchby","ternary","?","argName","tree","res","Array",20,"event","addEventListener","attachEvent","removeEventListener","detachEvent",21,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",22,"ass","curVm",23,"tokenReg","lastIndex","exec",24,"bra","keyPathReg","copy","copyIsArray","clone","deep","hyphensReg","dash","char","toUpperCase","parseFloat","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","chain","arrLike","arr",25,"summaryCache","NaN","exp","watcherUpdate","point"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , directive = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n\n  , Dir = directive.Directive\n  ;\n\n\nvar isObject = utils.isObject\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n//TODO 清理这个\nvar mergeProps = {\n  $data: 1\n};\n\nvar lifeCycles = {\n  $beforeInit: utils.noop\n, $afterInit: utils.noop\n, $beforeUpdate: utils.noop\n, $afterUpdate: utils.noop\n, $beforeDestroy: utils.noop\n, $afterDestroy: utils.noop\n};\n\n/**\n * 构造函数\n * @constructor\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n */\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n  }else{\n    props = props || {};\n    if(tpl) {\n      props.$tpl = tpl;\n    }\n  }\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: extend(true, {}, this.constructor.defaults)\n  , $refs: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: this.$content || null\n\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var elInfo;\n\n  var mixins = [defaults].concat(this.$mixins).concat(props.$mixins).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  extend(this, this.$data);\n\n  elInfo = domUtils.tplParse(this.$tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(elInfo.el);\n  }else{\n    this.$el = elInfo.el;\n  }\n  this.$tpl = elInfo.tpl;\n  this.$content = elInfo.content;\n\n  this.$beforeInit()\n  this.$el.bee = this;\n\n  //__links 包含了 $el 下所有的绑定引用\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  this._isRendered = true;\n  this.$afterInit();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives ,components, filters 引用\n  sub.directives = extend(create(this.directives), sub.directives);\n  sub.components = extend(create(this.components), sub.components);\n  sub.filters = extend(create(this.filters), sub.filters);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, directive: directive.directive\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, defaults: {}\n, filters: {\n    //build in filter\n    json: function(obj, replacer, space) {\n      return JSON.stringify(obj, replacer, space) }\n  }\n, filter: function(filterName, filter) {\n    this.filters[filterName] = filter;\n  }\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var instance;\n    var dirs = directive.getDirs(el, this);\n    var Comp, dir;\n\n    dir = dirs.filter(function(dir) {\n      return  dir.type === 'tag' || dir.type === 'component'\n    })[0];\n\n    if(dir) {\n      Comp = this.getComponent(dir.path)\n    }\n\n    props = props || {};\n    if(Comp) {\n      props.$data = extend(domUtils.getAttrs(el), props.$data)\n      instance = new Comp(extend({$target: el, __mountcall: true}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, lifeCycles, {\n  /**\n   * 获取属性/方法\n   * @param {String} expression 路径/表达式\n   * @returns {*}\n   */\n  $get: function(expression) {\n    var dir = new Dir('$get', {\n      path: expression\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(this.$data, key);\n        extend(this, key);\n      }else{\n        this.$data = key;\n      }\n      update.call(reVm, key);\n    }else{\n      this.$replace(key, val);\n    }\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, last, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      val = key;\n      reKey = '$data';\n      keys = [reKey];\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n    }\n\n    last = reVm.$get(reKey);\n\n    if (keys[0] === '$data') {\n      if(reKey === '$data') {\n        if(isObject(this.$data)) {\n          Object.keys(this.$data).forEach(function (k) {\n            delete this[k];\n          }.bind(this))\n        }\n        extend(reVm, val);\n      }else {\n        deepSet(keys.shift().join('.'), val, reVm)\n      }\n    } else {\n      deepSet(reKey, val, reVm.$data);\n    }\n    deepSet(reKey, val, reVm)\n\n    hasKey ? update.call(reVm, reKey, extend({}, last, val)) : update.call(reVm, extend({}, last, val));\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    //同时更新子路径\n    Watcher.getWatchers(this, keyPath).forEach(function(watcher) {\n      watcher.update();\n    }.bind(this))\n\n    //数组冒泡的情况\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n  }\n, $watch: function (expression, callback, immediate) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      return Watcher.addWatcher.call(this, new Dir('$watch', {path: expression, update: update, immediate : !!immediate}))\n    }\n  }\n, $unwatch: function (expression, callback) {\n    Watcher.unwatch(this, expression, callback)\n  }\n  //销毁当前实例\n, $destroy: function(removeEl) {\n    this.$beforeDestroy()\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    removeEl && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)\n    this.__links = [];\n    this.$afterDestroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n  this.$beforeUpdate(this.$data)\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n  this.$afterUpdate(this.$data)\n}\n\nBee.version = '0.4.1';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  , directive = require('./directive')\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template');\n\n/**\n * 遍历 dom 树\n * @private\n * @param {Element|NodeList} el\n * @returns {Array} 节点下所有的绑定\n */\n\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , dirs = directive.getDirs(el, cstr)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = utils.create(t.escape ? dirs.text : dirs.html);\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else{\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.vm = this;\n  dir.link();\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /**\n   * 构造函数继承.\n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @returns {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ?\n          protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    var supRef = {__super__: sup.prototype};\n\n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, supRef, protoProps);\n    extend(constructor, sup, supRef, staticProps);\n\n    return constructor;\n  }\n};\n\nmodule.exports = Class;\n","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\n/**\n * 查询某构造函数下的注册组件\n * @parm {String} componentName\n */\nfunction getComponent(componentName) {\n  var paths = utils.parseKeyPath(componentName);\n  var CurCstr = this;\n  paths.forEach(function(comName) {\n    CurCstr = CurCstr && CurCstr.components[comName];\n  });\n  return CurCstr || null;\n}\n\nexports.tag = exports.component = tag;\nexports.getComponent = getComponent;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n  , domUtils = require('./dom-utils')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nvar astCache = {};\n\nDirective.prototype = {\n  priority: 0//权重\n, type: '' //指令类型\n, subType: '' //子类型. 比如 `b-on-click` 的 type 为 `on`, subType 为 `click`\n, sub: false //是否允许子类型指令\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化. 如果为 false 的话, update 方法默认只会在初始化后调用一次\n, immediate: true //是否在 dir 初始化时立即执行 update 方法\n\n, anchor: false\n, anchors: null\n\n  //获取两个锚点之间的所有节点.\n, getNodes: function(start, end) {\n    start = start || this.anchors.start;\n    end = end || this.anchors.end;\n\n    var nodes = [], node = start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    var cache = astCache[this.path]\n    if(cache && cache._type === this.type){\n      this.ast = cache\n    }else {\n      try {\n        this.ast = parse(this.path, this.type);\n        this.ast._type = this.type;\n        astCache[this.path] = this.ast;\n      } catch (e) {\n        this.ast = {};\n        e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n        console.error(e);\n      }\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n/**\n * 获取一个元素上所有用 HTML 属性定义的指令\n * @param  {Element} el   指令所在元素\n * @param  {Bee} cstr 组件构造函数\n * @return {directeve[]}      `el` 上所有的指令\n */\nfunction getDirs(el, cstr){\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    , directives = cstr.directives\n    , prefix = cstr.prefix\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(cstr.getComponent(nodeName)) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dir = getDir(dirName, directives))) {\n      //指令\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor) {\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nfunction getDir(dirName, dirs) {\n  var dir, subType;\n  for(var key in dirs) {\n    if(dirName === key){\n      dir = dirs[key]\n      break\n    }else if(dirName.indexOf(key + '-') === 0){\n      dir = dirs[key]\n      if(!dir.sub){\n        dir = null\n      }else{\n        subType = dirName.slice(key.length + 1)\n      }\n      break;\n    }\n  }\n  if(dir) {\n    dir = create(dir);\n    dir.subType = subType;\n  }\n  return dir;\n}\n\nmodule.exports = {\n  Directive: Directive,\n  directive: directive,\n  getDirs: getDirs\n};\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n}","//component as directive\nvar utils = require('../utils.js');\nvar domUtils = require('../dom-utils')\nvar checkBinding = require('../check-binding')\n\nmodule.exports = {\n  priority: -1\n, watch: false\n, unLink: function() {\n    this.component && this.component.$destroy()\n  }\n, link: function() {\n    var vm = this.vm;\n    var el = this.el;\n    var cstr = vm.constructor;\n    var comp, content;\n    //var refName;\n    var dirs = [], $data = {};\n    var Comp = cstr.getComponent(this.path)\n\n    if(Comp) {\n\n      if(Comp === cstr && vm.__mountcall) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        // if(dir.type === 'ref') {\n        //   refName = dir.path;\n        // }\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with') {\n          //comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = utils.hyphenToCamel(dir.dirName);\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comPath ? comp.$set(comPath, val) : comp.$set(val);\n          }\n        })\n      });\n\n      content = domUtils.createContent(el.childNodes);\n\n      //组件内容属于其容器\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, content));\n\n      el.appendChild(content)\n\n      this.component = comp = new Comp({\n        $target: el,\n        $data: utils.extend({}, Comp.prototype.$data, $data, domUtils.getAttrs(el))\n      });\n      el.bee = comp;\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      // if(vm.$el === el) {\n      //   vm.__ref = comp;\n      //   vm.$el = comp.$el;\n      // }\n      return comp;\n    }else{\n      console.warn('Component: ' + this.path + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function() {\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}\n","\"use strict\";\n\nvar checkBinding = require('../check-binding')\n  , domUtils = require('../dom-utils')\n  , doc = require('../env').document\n\nmodule.exports = {\n  anchor: true\n, priority: 900\n, terminal: true\n, link: function() {\n    this.watchers = [];\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n    }\n    this.remove();\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.add() }\n    }else{\n      if(this.state) { this.remove(); }\n    }\n    this.state = val;\n  }\n\n, add: function() {\n    var anchor = this.anchors.end;\n    if(!this.walked) {\n      this.walked = true;\n      this.watchers = checkBinding.walk.call(this.vm, this.frag);\n    }\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = false;\n      if(watcher._needUpdate) {\n        watcher.update()\n        watcher._needUpdate = false;\n      }\n    })\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, remove: function() {\n    var nodes = this.getNodes();\n\n    for(var i = 0, l = nodes.length; i < l; i++) {\n      this.frag.appendChild(nodes[i]);\n    }\n\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = true;\n    })\n  }\n};\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , checkBinding = require('../check-binding')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, watch: false\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载 URL 中带有大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs['if'] = require('./if')\ndirs.repeat = require('./repeat');\ndirs.attr = require('./attr');\ndirs.model = require('./model');\ndirs.style = require('./style');\ndirs.on = require('./on');\ndirs.component = dirs.tag = require('./component');\ndirs.content = require('./content')\ndirs.ref = require('./ref')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\n\nmodule.exports = {\n  teminal: true\n, priority: -2\n, link: function() {\n    var keyPath = this.path;\n    var vm = this.vm;\n\n    if(!keyPath) { return false; }\n\n    var comp = this.el\n      , ev = 'change'\n      , attr\n      , value = attr = 'value'\n      , isSetDefaut = utils.isUndefined(vm.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n\n        //更新组件\n      , update = function(val) {\n          var newVal = (val || '') + ''\n            , val = comp[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ comp[attr] = newVal; }\n        }\n\n        //更新 viewModel\n      , handler = function() {\n          var val = comp[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          vm.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    if(comp.bee) {\n      // 组件的双向绑定\n      comp = comp.bee;\n      value = comp.$valuekey;\n      if(value) {\n        update = function(val) {\n          comp.$replace(value, val)\n        };\n        handler = function() {\n          vm.$replace(keyPath, comp.$get(value))\n        }\n        comp.$watch(value, function(val, oldValue) {\n          val !== oldValue && handler()\n        }, true)\n      }\n    }else{\n      //HTML 原生控件的双向绑定\n      switch(comp.tagName) {\n        default:\n          value = attr = 'innerHTML';\n          //ev += ' blur';\n        case 'INPUT':\n        case 'TEXTAREA':\n          switch(comp.type) {\n            case 'checkbox':\n              value = attr = 'checked';\n              //IE6, IE7 下监听 propertychange 会挂?\n              if(ie) { ev += ' click'; }\n            break;\n            case 'radio':\n              attr = 'checked';\n              if(ie) { ev += ' click'; }\n              update = function(val) {\n                comp.checked = comp.value === val + '';\n              };\n              isSetDefaut = comp.checked;\n            break;\n            default:\n              if(!vm.$lazy){\n                if('oninput' in comp){\n                  ev += ' input';\n                }\n                //IE 下的 input 事件替代\n                if(ie) {\n                  ev += ' keyup propertychange cut';\n                }\n              }\n            break;\n          }\n        break;\n        case 'SELECT':\n          if(comp.multiple){\n            handler = function() {\n              var vals = [];\n              for(var i = 0, l = comp.options.length; i < l; i++){\n                if(comp.options[i].selected){ vals.push(comp.options[i].value) }\n              }\n              vm.$replace(keyPath, vals);\n            };\n            update = function(vals){\n              if(vals && vals.length){\n                for(var i = 0, l = comp.options.length; i < l; i++){\n                  comp.options[i].selected = vals.indexOf(comp.options[i].value) !== -1;\n                }\n              }\n            };\n          }\n          isSetDefaut = isSetDefaut && !hasToken(comp[value]);\n        break;\n      }\n\n      ev.split(/\\s+/g).forEach(function(e){\n        events.removeEvent(comp, e, callHandler);\n        events.addEvent(comp, e, callHandler);\n      });\n      //根据表单元素的初始化默认值设置对应 model 的值\n      if(comp[value] && isSetDefaut){\n         handler();\n      }\n    }\n\n    this.update = update;\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, sub: true\n, priority: -3 //事件应该在 b-model 之后监听. 防止普通事件调用过快\n, immediate: false // watch 和 immediate 同时为 false 时, 指令的 update 方法将不会自动被外部调用\n, link: function() {\n    var dir = this;\n    if(this.subType){\n      // be-on-click 等\n      eventBind.addEvent(this.el, this.subType, function() {\n        dir.vm.$get(dir.path)\n      })\n    }else{\n      //link 方法的调用在 watcher 检测 immediate 之前,\n      //所以可以在这里将 immediate 置为 true 以便自动调用 update 方法\n      this.immediate = true;\n      //this.update(this.vm.$get(this.path))\n    }\n  }\n, update: function (events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\n//要求 IE8+\n//请注意这里的 event.currentTarget 和 event.delegateTarget 同 jQuery 的刚好相反\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, priority: -2 // ref 应该在 component 之后\n, unLink: function() {\n    if(utils.isArray(this.ref)) {\n      this.ref.splice(this.vm.$index, 1)\n    }else{\n      this.vm.$refs[this.path] = null;\n    }\n  }\n, link: function() {\n    var vm = this.vm\n    //在 `repeat` 元素上的 `ref` 会指向匿名 `viewmodel`\n    if(vm.__repeat){\n      if(!vm.$index) {\n        vm.$parent.$refs[this.path] = [];\n      }\n      this.ref = vm.$parent.$refs[this.path]\n      this.ref[vm.$index] = vm;\n    }else{\n      vm.$refs[this.path] = this.el.bee || this.el;\n    }\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , scope = require('../scope')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, unLink: function(){\n    this.vmList.forEach(function(vm){\n      vm.$destroy()\n    })\n  }\n, link: function() {\n    var cstr = this.cstr = this.vm.constructor;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    this.trackId = this.el.getAttribute('track-by')\n    this.el.removeAttribute('track-by')\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    //默认数据不应继承\n    this.cstr.defaults = {};\n\n    this.curArr = [];\n    this.vmList = [];//子 VM list\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.isRange = true\n    }else{\n      this.frag = this.el;\n    }\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, vmList = this.vmList;\n    var trackId = this.trackId;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中相关变量\n      this.listPath = this.summary.paths.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items, trackId).forEach(function(item) {\n        var pos = indexByTrackId(item, curArr, trackId)\n        curArr.splice(pos, 1)\n\n        if(that.isRange) {\n          getNodesByIndex(that, pos).forEach(function(node) {\n            parentNode.removeChild(node)\n          })\n        }else{\n          parentNode.removeChild(vmList[pos].$el)\n        }\n        vmList[pos].$destroy()\n        vmList.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = indexByTrackId(item, items, trackId, i)\n          , oldPos = indexByTrackId(item, curArr, trackId, i)\n          , vm, el, anchor\n          ;\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.frag.cloneNode(true)\n\n          if(this.isRange) {\n            anchor = doc.createComment('')\n            el.childNodes.length ? el.insertBefore(anchor, el.childNodes[0]) : el.appendChild(anchor)\n          }\n\n          vm = new this.cstr(el, {\n            $data: item,\n            _assignments: this.summary.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true,\n            __anchor__: anchor\n          });\n\n          parentNode.insertBefore(vm.$el, getAnchor(that, pos))\n          vmList.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n\n            parentNode.insertBefore(getElByIndex(that, oldPos), getAnchor(that, pos))\n            parentNode.insertBefore(getElByIndex(that, pos), getAnchor(that, oldPos + 1))\n\n            vmList[oldPos] = [vmList[pos], vmList[pos] = vmList[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            vmList[pos].$index = pos\n            vmList[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      vmList.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      this.summary.paths.forEach(function(localKey) {\n        var local = that.vm.$get(localKey);\n        var dirs = local.__dirs__;\n        if(utils.isArray(local)) {\n          if(!dirs){\n            //数组操作方法\n            utils.extend(local, {\n              $set: function(i, item) {\n                local.splice(i, 1, utils.isObject(item) ? utils.extend({}, local[i], item) : item)\n              },\n              $replace: function(i, item) {\n                local.splice(i, 1, item)\n              },\n              $remove: function(i) {\n                local.splice(i, 1);\n              }\n            });\n            arrayMethods.forEach(function(method) {\n              local[method] = utils.afterFn(local[method], function() {\n                dirs.forEach(function(dir) {\n                  dir.listPath.forEach(function(path) {\n                    var reformed = scope.reformScope(dir.vm, path)\n                    reformed.vm.$update(reformed.path)\n                  })\n                })\n              })\n            });\n            dirs = local.__dirs__  = [];\n          }\n          //一个数组多处使用\n          //TODO 移除时的情况\n          if(dirs.indexOf(that) === -1) {\n            dirs.push(that)\n          }\n        }\n      })\n\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\nfunction getAnchor(dir, index) {\n  var vm = dir.vmList[index]\n  return vm ? ( dir.isRange ? vm.__anchor__ : vm.$el ) : dir.anchors.end\n}\n\n//根据索引获取该次迭代中的所有元素\nfunction getNodesByIndex(dir, index) {\n  var vmList = dir.vmList\n    , anchor = vmList[index].__anchor__\n    , next = vmList[index + 1]\n    ;\n  return [anchor].concat(dir.getNodes(anchor, next && next.__anchor__))\n}\n\nfunction getElByIndex (dir, index) {\n  var frag = doc.createDocumentFragment()\n  if(dir.isRange) {\n    getNodesByIndex(dir, index).forEach(function(node) {\n      frag.appendChild(node)\n    })\n  }else{\n    frag.appendChild(dir.vmList[index].$el)\n  }\n  return frag\n}\n\nfunction arrDiff(arr1, arr2, trackId) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = indexByTrackId(el, arr2Copy, trackId)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n\nfunction indexByTrackId(item, list, trackId, startIndex) {\n  startIndex = startIndex || 0;\n  var index = list.indexOf(item, startIndex);\n  if(index === -1 && trackId){\n    for(var i = startIndex, item1; item1 = list[i]; i++) {\n      if(item[trackId] ===  item1[trackId] && !utils.isUndefined(item[trackId])){\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\n","\"use strict\";\n\n//样式指令\nvar utils = require('../utils')\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',\n  'top', 'left', 'right', 'bottom'\n]\n\n//对于 IE6, IE7 浏览器需要使用 `el.style.getAttribute('cssText')` 与 `el.style.setAttribute('cssText')` 来读写 style 字符属性\n\nmodule.exports = {\n  link: function() {\n    this.initStyle = this.el.style.getAttribute ? this.el.style.getAttribute('cssText') : this.el.getAttribute('style')\n  },\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = this.initStyle ? this.initStyle.replace(/;?$/, ';') : '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr += styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top. 驼峰转连接符式\n        dashKey = key.replace(camelReg, function (upperChar) {\n          return '-' + upperChar.toLowerCase();\n        });\n\n        if (pixelAttrs.indexOf(dashKey) >= 0 && utils.isNumeric(val)) {\n          val += 'px';\n        }\n        if(!utils.isUndefined(val)){\n          styleStr += dashKey + ': ' + val + '; ';\n        }\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};\n","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\n//处理 $target,  $content, $tpl\n//target: el 替换的目标\nfunction tplParse(tpl, target, content) {\n  var el;\n  if(utils.isObject(target) && target.childNodes) {\n    content = createContent(target.childNodes);\n  }else{\n    if(content) {\n      content = createContent(content)\n    }\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    el = tpl;\n    tpl = el.outerHTML;\n  }else{\n    //字符串\n    el = createContent(tpl).childNodes[0];\n  }\n\n  if(target){\n    target.parentNode && target.parentNode.replaceChild(el, target);\n  }\n\n  return {el: el, tpl: tpl, content: content};\n}\n\n//将模板/元素/nodelist 包裹在 fragment 中\nfunction createContent(tpl) {\n  var content = doc.createDocumentFragment();\n  var wraper;\n  var nodes = [];\n  if(utils.isObject(tpl)) {\n    if(tpl.nodeName && tpl.nodeType) {\n      //dom 元素\n      content.appendChild(tpl);\n    }else if('length' in tpl){\n      //nodelist\n      nodes = tpl;\n    }\n  }else {\n    wraper = doc.createElement('div')\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\n    wraper.innerHTML = (tpl + '').trim();\n    nodes = wraper.childNodes;\n  }\n  while(nodes[0]) {\n    content.appendChild(nodes[0])\n  }\n  return content;\n}\n\n\n\nmodule.exports = {\n  tplParse: tplParse,\n  createContent: createContent,\n\n  //获取元素属性\n  getAttrs: function(el) {\n    var attributes = el.attributes;\n    var attrs = {};\n\n    for(var i = attributes.length - 1; i >= 0; i--) {\n      //连接符转驼峰写法\n      attrs[utils.hyphenToCamel(attributes[i].nodeName)] = attributes[i].value;\n    }\n\n    return attrs;\n  },\n\n  hasAttr: function(el, attrName) {\n    return el.hasAttribute ? el.hasAttribute(attrName) : !utils.isUndefined(el[attrName]);\n  }\n};\n","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","/**\n * 表达式执行\n */\n\n\"use strict\";\n\nvar scope = require('./scope')\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n    //TODO 模板中方法的 this 应该指向 root\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n    //filter. name|filter\n  , '|': function(l, r){ return callFilter(l, r, []) }\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.repeat) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  , 'catchby': function(l, r) {\n      if(l['catch']) {\n        return l['catch'](r.bind(root))\n      }else{\n        summaryCall || console.error('catchby expect a promise')\n        return l;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n    //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\n  }\n};\n\nfunction callFilter(arg, filter, args) {\n  if(arg && arg.then) {\n    return arg.then(function(data) {\n      return filter.apply(root, [data].concat(args))\n    });\n  }else{\n    return filter.apply(root, [arg].concat(args))\n  }\n}\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  , root\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        //summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'repeat':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    root = scope.$root;\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.constructor.filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function(key, vm) {\n  var reformed = scope.reformScope(vm, key)\n  return reformed.vm[reformed.path]\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  //infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(10));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n  infix('catchby', 10);\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var ass, curVm = cur;\n\n  while(cur) {\n    curVm = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { vm: curVm, path: paths.join('.') }\n};\n\n\nexports.reformScope = reformScope;\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @returns {Object} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\n//html 中属性名不区分大小写, 并且会全部转成小写.\n//这里会将连字符写法转成驼峰式\n//attr-name --> attrName\n//attr--name --> attr-name\nvar hyphensReg = /-(-?)([a-z])/ig;\nvar hyphenToCamel = function(attrName) {\n  return attrName.replace(hyphensReg, function(s, dash, char) {\n    return dash ? dash + char : char.toUpperCase();\n  })\n}\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n, isNumeric: function(val) {\n    return !utils.isArray(val) && val - parseFloat(val) + 1 >= 0;\n  }\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  },\n  hyphenToCamel: hyphenToCamel\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nvar summaryCache = {};\n\n/**\n * 每个 directive 对应一个 watcher\n * @param {Bee} vm  directive 所处的环境\n * @param {Directive} dir\n */\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n  var summary = summaryCache[dir.path]\n\n  dir.watcher = this;\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n\n  if(!summary || summary._type !== dir.type){\n    summary = evaluate.summary(dir.ast);\n    summary._type = dir.type;\n    summaryCache[dir.path] = summary;\n  }\n  dir.summary = summary\n\n  //将该 watcher 与每一个属性建立引用关系\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    //将每个 key 对应的 watchers 都塞进来\n    this.watchers.push( watchers );\n  }\n\n  //是否在初始化时更新\n  dir.immediate !== false && this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers[i].unwatch()\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\n//获取某 keyPath 子路径的 watchers\nWatcher.getWatchers = function getWatchers(vm, keyPath) {\n  var _watchers = vm._watchers, watchers = [];\n  var point;\n  for(var key in _watchers) {\n    point = key.charAt(keyPath.length);\n    if(key.indexOf(keyPath) === 0 && (point === '.')) {\n      watchers = watchers.concat(_watchers[key])\n    }\n  }\n  return watchers\n}\n\nfunction watcherUpdate (val) {\n  var oldValue;\n  try{\n    oldValue = this.val;\n    this.val = val;\n    this.dir.update(val, oldValue);\n  }catch(e){\n    console.error(e);\n  }\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行并更新 view\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    if(this._hide) {\n      this._needUpdate = true;\n      return;\n    }\n    newVal = this.dir.getValue(this.vm);\n\n    //简单过滤重复更新\n    if(newVal !== this.val || utils.isObject(newVal)){\n      if(newVal && newVal.then) {\n        //a promise\n        newVal.then(function(val) {\n          watcherUpdate.call(that, val);\n        });\n      }else{\n        watcherUpdate.call(this, newVal);\n      }\n    }\n  },\n  //移除\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}