{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/event.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$filters","$watchers","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","__links","_isRendered","propKey","mergeProps","isObject","extend","domUtils","tplParse","appendChild","content","bee","checkBinding","walk","concat","key","$watch","$replace","$init","update","keyPath","data","keyPaths","arguments","Object","keys","path","$update","doc","document","utils","Event","Class","Dir","Com","Watcher","dirs","scope","isUndefined","parseKeyPath","deepSet","create","$filter","afterFn","noop","sub","directives","components","mount","id","instance","nodeType","getElementById","Comp","tagName","toLowerCase","dir","directive","prototype","$get","watch","parse","getValue","$set","val","add","reformed","reKey","hasKey","reVm","reformScope","vm","forEach","bind","isBubble","attrs","watchers","replace","join","pop","push","isArray","attr","callback","_originFn","addWatcher","$unwatch","unwatch","__destroy","wacher","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./event.js","./scope","./utils.js","./watcher.js",2,3,"dirResult","NODETYPE","FRAGMENT","childNodes","ELEMENT","COMMENT","TEXT","checkText","nodeName","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","constructor","getDir","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","parentNode","text","tn","createTextNode","insertBefore","removeChild","escape","html","watcher","isFunction","replaceChild","link","unBinding","ATTR","createElement","./token.js","./utils","./watcher",4,"protoProps","staticProps","hasOwnProperty","sup","apply","Fn","__super__",5,"tag","Component","statics","tags","component",6,"opts","Directive","type","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","evaluate","unLink","tearDown","getNodes","nodes","ast","message","console","error","forgive","eval","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","newAttrs","position","../utils.js",8,"comp","comName","filter","curPath","comPath","__ref","warn",9,"createContent","../check-binding","../dom-utils",10,"innerHTML","frag","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./content.js","./model.js","./on.js","./repeat.js","./style.js",11,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",12,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","shift","../utils",13,"arrDiff","arr1","arr2","arr2Copy","index","splice","arrayMethods","curArr","list","items","that","listPath","summary","locals","item","pos","oldPos","cloneNode","assignments","$index","__repeat","__dirs__","$remove","method",14,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",15,"outerHTML","wraper","trim",16,"root","jsdom",17,"getOperator","arity","operators","reset","summaryCall","context","filters","paths","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","assignment","ternary","?","argName","tree","arg","res","args","Array",18,"event","addEventListener","attachEvent","removeEventListener","detachEvent",19,"$on","ctx","_handlers","$one","one","$off","handlers","$trigger",20,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",21,"ass","local","curVm",22,"tokenReg","lastIndex","exec",23,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","arrLike","arr",24,"NaN","exp","watcherUpdate","then"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\nvar mergeProps = {\n  $data: 1, $filter: 1, $watchers: 1\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: this.$data || {}\n  , $filters: this.$filters || {}\n  , $watchers: this.$watchers || {}\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: null\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  //保持对传入属性的引用\n  for(var propKey in props) {\n    if((propKey in mergeProps) && isObject(props[propKey])) {\n      //mergeProps 中的属性会被默认值扩展\n      extend(defaults[propKey], props[propKey])\n      defaults[propKey] = extend(props[propKey], defaults[propKey]);\n    }else{\n      defaults[propKey] = props[propKey];\n    }\n  }\n\n  //合并所有到当前空间下\n  extend(this, defaults);\n  isObject(this.$data) && extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = domUtils.tplParse(tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$content = el.content;\n\n  this.$el.bee = this;\n\n  if(this.$content){\n    this.__links = checkBinding.walk.call(this.$root, this.$content);\n  }\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this.$replace(this.$data);\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives 和 components 引用\n  sub.directives = create(this.directives);\n  sub.components = create(this.components);\n})}, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, Event, {\n  $init: utils.noop\n  /**\n   * 获取属性/方法--\n   * @param {String} keyPath 路径/表达式\n   * @return {*}\n   */\n, $get: function(keyPath) {\n    var dir = new Dir('$get', {\n      path: keyPath\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(true, this.$data, key);\n        extend(true, this, key);\n      }else{\n        this.$data = key;\n      }\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n      add = deepSet(reKey, val, {});\n      if(keys[0] === '$data') {\n        add = add.$data\n      }\n      extend(true, reVm.$data, add);\n      extend(true, reVm, add);\n    }\n    hasKey ? update.call(reVm, reKey, val) : update.call(reVm, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        Object.keys(this.$data).forEach(function(key) {\n          delete this[key];\n        }.bind(this))\n        extend(this, key);\n      }\n      this.$data = key;\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n      if(keys[0] !== '$data') {\n        deepSet(reKey, val, reVm.$data);\n      }\n      deepSet(reKey, val, reVm);\n    }\n    hasKey ? update.call(reVm, reKey, val) : update.call(reVm, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs) && !utils.isArray(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      Watcher.addWatcher.call(this, new Dir('$watch', {path: keyPath, update: update}))\n    }\n    return this;\n  }\n, $unwatch: function (keyPath, callback) {\n    Watcher.unwatch(this, keyPath, callback)\n    return this;\n  }\n, __destroy: function() {\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    this.__links = [];\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\n\nBee.version = '0.2.0';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\r\n\r\nvar Watcher = require('./watcher')\r\n  , token = require('./token.js')\r\n  , utils = require('./utils')\r\n  , doc = require('./env.js').document\r\n  ;\r\n\r\nvar NODETYPE = {\r\n    ELEMENT: 1\r\n  , ATTR: 2\r\n  , TEXT: 3\r\n  , COMMENT: 8\r\n  , FRAGMENT: 11\r\n};\r\n\r\ndoc.createElement('template')\r\n\r\n//遍历 dom 树\r\nfunction walk(el) {\r\n  var watchers = [], dirResult;\r\n  if(el.nodeType === NODETYPE.FRAGMENT) {\r\n    el = el.childNodes;\r\n  }\r\n\r\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\r\n    //node list\r\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\r\n    for(var i = 0; i < el.length; i++) {\r\n      watchers = watchers.concat( walk.call(this, el[i]) );\r\n    }\r\n    return watchers;\r\n  }\r\n\r\n  switch (el.nodeType) {\r\n    case NODETYPE.ELEMENT:\r\n      break;\r\n    case NODETYPE.COMMENT:\r\n      //注释节点\r\n      return watchers;\r\n      break;\r\n    case NODETYPE.TEXT:\r\n      //文本节点\r\n      watchers = watchers.concat( checkText.call(this, el) );\r\n      return watchers;\r\n  }\r\n\r\n  if(el.nodeName.toLowerCase() === 'template') {\r\n    //template shim\r\n    if(!el.content) {\r\n      el.content = doc.createDocumentFragment();\r\n      while(el.childNodes[0]) {\r\n        el.content.appendChild(el.childNodes[0])\r\n      }\r\n    }\r\n  }\r\n\r\n  dirResult = checkAttr.call(this, el);\r\n  watchers = watchers.concat(dirResult.watchers)\r\n  if(dirResult.terminal){\r\n    return watchers;\r\n  }\r\n\r\n  if(el.nodeName.toLowerCase() === 'template') {\r\n    watchers = watchers.concat( walk.call(this, el.content) )\r\n  }\r\n\r\n  for(var child = el.firstChild, next; child; ){\r\n    next = child.nextSibling;\r\n    watchers = watchers.concat( walk.call(this, child) );\r\n    child = next;\r\n  }\r\n\r\n  return watchers\r\n}\r\n\r\n//遍历属性\r\nfunction checkAttr(el) {\r\n  var cstr = this.constructor\r\n    , prefix = cstr.prefix\r\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\r\n    , dir\r\n    , terminalPriority, watchers = []\r\n    , result = {};\r\n  ;\r\n\r\n  for (var i = 0, l = dirs.length; i < l; i++) {\r\n    dir = dirs[i];\r\n    dir.dirs = dirs;\r\n\r\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\r\n    if(terminalPriority > dir.priority) {\r\n      break;\r\n    }\r\n\r\n    el.removeAttribute(dir.nodeName);\r\n\r\n    watchers = watchers.concat( setBinding.call(this, dir) );\r\n\r\n    if(dir.terminal) {\r\n      result.terminal = true;\r\n      terminalPriority = dir.priority;\r\n    }\r\n  }\r\n\r\n  result.watchers = watchers\r\n\r\n  return result\r\n}\r\n\r\n//处理文本节点中的绑定占位符({{...}})\r\nfunction checkText(node) {\r\n  var watchers = [];\r\n  if(token.hasToken(node.nodeValue)) {\r\n    var tokens = token.parseToken(node.nodeValue)\r\n      , textMap = tokens.textMap\r\n      , el = node.parentNode\r\n      , dirs = this.constructor.directives\r\n      , t, dir\r\n      ;\r\n\r\n    //将{{key}}分割成单独的文本节点\r\n    if(textMap.length > 1) {\r\n      textMap.forEach(function(text) {\r\n        var tn = doc.createTextNode(text);\r\n        el.insertBefore(tn, node);\r\n        watchers = watchers.concat(checkText.call(this, tn));\r\n      }.bind(this));\r\n      el.removeChild(node);\r\n    }else{\r\n      t = tokens[0];\r\n      //内置各占位符处理.\r\n      dir = utils.create(t.escape ? dirs.text : dirs.html);\r\n      watchers = setBinding.call(this, utils.extend(dir, t, {\r\n        el: node\r\n      }));\r\n    }\r\n  }\r\n  return watchers\r\n}\r\n\r\nfunction setBinding(dir) {\r\n  var watcher\r\n  if(dir.replace) {\r\n    var el = dir.el;\r\n    if(utils.isFunction(dir.replace)) {\r\n      dir.node = dir.replace();\r\n    }else if(dir.replace){\r\n      dir.node = doc.createTextNode('');\r\n    }\r\n\r\n    dir.el = dir.el.parentNode;\r\n    dir.el.replaceChild(dir.node, el);\r\n  }\r\n\r\n  dir.link(this);\r\n\r\n  watcher = Watcher.addWatcher.call(this, dir)\r\n  return watcher ? [watcher] : []\r\n}\r\n\r\nfunction unBinding(watchers) {\r\n  watchers.forEach(function(watcher) {\r\n    watcher.unwatch()\r\n  })\r\n}\r\n\r\nmodule.exports = {\r\n  walk: walk,\r\n  unBinding: unBinding\r\n};\r\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, unLink: function() {\n    this.component && this.component.__destroy()\n  }\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      //TODO\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with' || dir.dirName === 'attr') {\n          //这里 attr 及 with 指令效果一样\n          comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comp.$set(comPath, val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      this.component = comp = new Comp({\n        $target: el,\n        //$root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.__ref = comp;\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\r\n\r\nvar domUtils = require('../dom-utils')\r\n  , checkBinding = require('../check-binding')\r\n  ;\r\n\r\nmodule.exports = {\r\n  replace: true\r\n, anchor: true\r\n, link: function(vm) {\r\n    this.vm = vm;\r\n  }\r\n, update: function(tpl) {\r\n    var nodes = this.getNodes()\r\n    var parent = this.anchors.end.parentNode\r\n    var content = domUtils.createContent(tpl)\r\n\r\n    checkBinding.walk.call(this.vm, content)\r\n    //TODO 移除对应的 watcher\r\n    nodes.forEach(function(node) {\r\n      parent.removeChild(node);\r\n    })\r\n    parent.insertBefore(content, this.anchors.end)\r\n  }\r\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\ndirs.content = require('./content.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n\n    if(!keyPath) { return false; }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\n//TODO 移除时的情况\nmodule.exports = {\n  watch: false\n, link: function(vm) {\n    //this.events = {};\n    this.vm = vm;\n  }\n, update: function(events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    this.curArr = [];\n    this.list = [];//子 VM list\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中\n      this.listPath = this.summary.locals.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      //TODO 删除引用父级的 watchers\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].$el)\n        list[pos].__destroy()\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        //pos < 0 && (pos = items.lastIndexOf(item, i));\n        //oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.summary.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].$el || this.anchors.end)\n          list.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].$el, list[pos] && list[pos].$el || that.anchor.end)\n            parentNode.insertBefore(list[pos].$el, list[oldPos + 1] && list[oldPos + 1].$el || that.anchor.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].$index = pos\n            list[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      if(!items.__dirs__){\n        //数组操作方法\n        utils.extend(items, {\n          $set: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].$set(item);\n            })\n          },\n          $replace: function(i, item) {\n            items.__dirs__.forEach(function(dir) {\n              dir.list[i].$replace(item)\n            })\n          },\n          $remove: function(i) {\n            items.splice(i, 1);\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function (path) {\n                dir.vm.$update(path)\n              });\n            })\n          }\n        });\n        arrayMethods.forEach(function(method) {\n          items[method] = utils.afterFn(items[method], function() {\n            items.__dirs__.forEach(function(dir) {\n              dir.listPath.forEach(function(path) {\n                dir.vm.$update(path)\n              })\n            })\n          })\n        });\n        items.__dirs__  = [];\n      }\n      //一个数组多处使用\n      //TODO 移除时的情况\n      if(items.__dirs__.indexOf(that) === -1) {\n        items.__dirs__.push(that)\n      }\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = arr2Copy.indexOf(el)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\n//TODO 待完善\nvar pixelAttrs = [\n  'width','height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    for(var key in styles) {\n      val = styles[key];\n\n      dashKey = key.replace(camelReg, function (upperChar) {\n        return '-' + upperChar.toLowerCase();\n      });\n\n      if(!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n        val += 'px';\n      }\n      styleStr += dashKey + ': ' + val + '; ';\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","\"use strict\";\r\n\r\nvar doc = require('./env.js').document\r\nvar utils = require('./utils')\r\n\r\n//处理 $target,  $content, $tpl\r\n//target: el 替换的目标\r\nfunction tplParse(tpl, target, content) {\r\n  var el;\r\n  if(utils.isObject(target) && target.childNodes) {\r\n    content = createContent(target.childNodes);\r\n  }else{\r\n    if(content) {\r\n      content = createContent(content)\r\n    }\r\n  }\r\n\r\n  if(utils.isObject(tpl)){\r\n    //DOM 元素\r\n    el = tpl;\r\n    tpl = el.outerHTML;\r\n  }else{\r\n    //字符串\r\n    el = createContent(tpl).childNodes[0];\r\n  }\r\n\r\n  if(target){\r\n    target.parentNode && target.parentNode.replaceChild(el, target);\r\n  }\r\n\r\n  return {el: el, tpl: tpl, content: content};\r\n}\r\n\r\n//将模板/元素/nodelist 包裹在 fragment 中\r\nfunction createContent(tpl) {\r\n  var content = doc.createDocumentFragment();\r\n  var wraper;\r\n  var nodes = [];\r\n  if(utils.isObject(tpl)) {\r\n    if(tpl.nodeName && tpl.nodeType) {\r\n      //dom 元素\r\n      content.appendChild(tpl);\r\n    }else if('length' in tpl){\r\n      //nodelist\r\n      nodes = tpl;\r\n    }\r\n  }else {\r\n    wraper = doc.createElement('div')\r\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\r\n    wraper.innerHTML = (tpl + '').trim();\r\n    nodes = wraper.childNodes;\r\n  }\r\n  while(nodes[0]) {\r\n    content.appendChild(nodes[0])\r\n  }\r\n  return content;\r\n}\r\n\r\nmodule.exports = {\r\n  tplParse: tplParse,\r\n  createContent: createContent\r\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n  , '|': function(l, r){ return r.call(context.locals, l) }//filter. name|filter\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.assignment) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n  //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return s.apply(context.locals, [f].concat(t)); }\n  }\n};\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'assignment':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = require('./scope').getValue\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","var utils = require('./utils.js');\n\nvar Event = {\n  //监听自定义事件.\n  $on: function(name, handler, context) {\n    var ctx = context || this\n      ;\n\n    ctx._handlers = ctx._handlers || {};\n    ctx._handlers[name] = ctx._handlers[name] || [];\n\n    ctx._handlers[name].push({handler: handler, context: context, ctx: ctx});\n    return this;\n  },\n  $one: function (name, handler, context) {\n    if(handler){\n      handler.one = true;\n    }\n    return this.on(name, handler, context);\n  },\n  //移除监听事件.\n  $off: function(name, handler, context) {\n    var ctx = context || this\n      , handlers = ctx._handlers\n      ;\n\n    if(name && handlers[name]){\n      if(utils.isFunction(handler)){\n        for(var i = handlers[name].length - 1; i >=0; i--) {\n          if(handlers[name][i].handler === handler){\n            handlers[name].splice(i, 1);\n          }\n        }\n      }else{\n        handlers[name] = [];\n      }\n    }\n    return this;\n  },\n  //触发自定义事件.\n  //该方法没有提供静态化的 context 参数. 如要静态化使用, 应该: `Event.trigger.call(context, name, data)`\n  $trigger: function(name, data) {\n    var args = [].slice.call(arguments, 1)\n      , handlers = this._handlers && this._handlers[name]\n      ;\n\n    if(handlers){\n      for(var i = 0, item; item = handlers[i]; i++) {\n        item.handler.apply(this, args);\n        if(item.handler.one) {\n          handlers.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nmodule.exports = Event;\n","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'assignment';\n\t\t\tthis.assignment = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\r\n\r\nvar utils = require('./utils');\r\n\r\n//根据变量及 vm 确定变量所属的真正 vm\r\nvar reformScope = function (vm, path) {\r\n  var paths = utils.parseKeyPath(path);\r\n  var cur = vm, local = paths[0];\r\n  var scope = cur, ass, curVm = cur;\r\n\r\n  while(cur) {\r\n    curVm = scope = cur;\r\n    ass = cur._assignments;\r\n    if( cur.__repeat) {\r\n      if (ass && ass.length) {\r\n        // 具名 repeat 不会直接查找自身作用域\r\n        if (local === '$index' || local === '$parent') {\r\n          break;\r\n        } else if (local === ass[0]) {\r\n          scope = {}\r\n          scope[path] = cur.$data\r\n          //修正key\r\n          if (paths.length === 1) {\r\n            local = '$data';\r\n          } else {\r\n            paths.shift()\r\n          }\r\n          break;\r\n        }\r\n      } else {\r\n        //匿名 repeat\r\n        if (path in cur) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    cur = cur.$parent;\r\n  }\r\n\r\n  return { scope: scope, vm:curVm, path: paths.join('.') }\r\n};\r\n\r\n//根据 vm 及 key 求值\r\n//求值的结果在 js 及模板中保持一致\r\nvar getValue = function(key, scope) {\r\n  var reformed = reformScope(scope, key)\r\n\r\n  return reformed.scope[reformed.path]\r\n};\r\n\r\nexports.reformScope = reformScope;\r\nexports.getValue = getValue;\r\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n  dir.summary = evaluate.summary(dir.ast);\n\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    this.watchers.push( watchers );\n  }\n\n  this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n  },\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}