{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/if.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/ref.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","defaults","$data","extend","constructor","$refs","$mixins","$el","$content","$isReplace","$parent","$root","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","lifeCycles","utils","afterFn","bind","resolveTpl","$beforeInit","bee","checkBinding","walk","$afterInit","update","keyPath","data","keyPaths","$beforeUpdate","arguments","Object","keys","path","$update","$afterUpdate","tplEl","el","content","childNodes","domUtils","createContent","outerHTML","parentNode","replaceChild","appendChild","doc","document","Class","directive","Com","Watcher","dirs","scope","Dir","Directive","parseKeyPath","deepSet","create","noop","$beforeDestroy","$afterDestroy","sub","directives","components","filters","json","obj","replacer","space","JSON","stringify","filter","filterName","mount","id","instance","Comp","dir","nodeType","getElementById","getDirs","type","getComponent","getAttrs","__mountcall","prototype","$get","expression","watch","parse","getValue","$set","key","val","reVm","$replace","last","reformed","reKey","hasKey","reformScope","vm","k","shift","join","isBubble","watchers","replace","pop","push","getWatchers","watcher","$watch","callback","immediate","_originFn","addWatcher","$unwatch","unwatch","$destroy","removeEl","wacher","removeChild","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",2,3,"dirResult","NODETYPE","FRAGMENT","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","text","tn","createTextNode","insertBefore","partialReg","test","dirName","anchors","setAnchors","escape","html","isFunction","link","unBinding","ATTR","createElement","./directive","./token.js","./utils","./watcher",4,"protoProps","staticProps","sup","apply","Fn","supRef","__super__",5,"tag","tagName","Component","statics","tags","componentName","paths","CurCstr","comName","component",6,"opts","attr","attrName","proto","setAttribute","attributes","slice","value","indexOf","getDir","origin","attrPostReg","conditional","anchor","sort","d0","d1","subType","parent","start","createComment","end","evaluate","astCache","unLink","tearDown","getNodes","nodes","cache","_type","ast","message","console","error","forgive","eval","./dom-utils","./eval.js","./parse.js",7,"setAttr","style","className","removeAttr","attrs","newAttrs","position","../utils.js",8,"comp","curPath","comPath","hyphenToCamel","warn","../check-binding","../dom-utils",9,10,"frag","remove","state","add","walked","_hide","_needUpdate","../env",11,"innerHTML","template","src","repeat","model","on","ref","../env.js","./attr","./component","./content","./if","./model","./on","./ref","./repeat","./style",12,"events","teminal","ev","isSetDefaut","crlf","newVal","handler","callHandler","propertyName","ie","$valuekey","oldValue","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js","../token.js",13,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",14,"isArray","splice","$index","__repeat",15,"getAnchor","index","vmList","isRange","__anchor__","getNodesByIndex","getElByIndex","arrDiff","arr1","arr2","trackId","arr2Copy","indexByTrackId","item","list","startIndex","item1","arrayMethods","getAttribute","curArr","items","that","listPath","summary","pos","oldPos","cloneNode","assignments","localKey","local","__dirs__","$remove","method","../scope",16,"camelReg","pixelAttrs","initStyle","styles","dashKey","styleStr","upperChar","isNumeric",17,"wraper","trim","hasAttr","hasAttribute",18,"root","jsdom",19,"callFilter","arg","args","then","getOperator","arity","operators","reset","summaryCall","context","locals","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","(","|","Date","Function","in","catchby","ternary","?","argName","tree","res","Array",20,"event","addEventListener","attachEvent","removeEventListener","detachEvent",21,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",22,"ass","curVm",23,"tokenReg","lastIndex","exec",24,"bra","keyPathReg","copy","copyIsArray","clone","deep","hyphensReg","dash","char","toUpperCase","parseFloat","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","chain","arrLike","arr",25,"summaryCache","NaN","exp","watcherUpdate","point"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , directive = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n\n  , Dir = directive.Directive\n  ;\n\n\nvar isObject = utils.isObject\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n//TODO 清理这个\nvar mergeProps = {\n  $data: 1\n};\n\nvar lifeCycles = {\n  $beforeInit: utils.noop\n, $afterInit: utils.noop\n, $beforeUpdate: utils.noop\n, $afterUpdate: utils.noop\n, $beforeDestroy: utils.noop\n, $afterDestroy: utils.noop\n};\n\n/**\n * 构造函数\n * @constructor\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n */\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n  }else{\n    props = props || {};\n    if(tpl) {\n      props.$tpl = tpl;\n    }\n  }\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: extend(true, {}, this.constructor.defaults)\n  , $refs: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: this.$content || null\n\n  , $isReplace: false\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var mixins = [defaults].concat(this.$mixins).concat(props.$mixins).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  extend(this, this.$data);\n\n  resolveTpl.call(this);\n\n  this.$beforeInit()\n  this.$el.bee = this;\n\n  //__links 包含了 $el 下所有的绑定引用\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  this._isRendered = true;\n  this.$afterInit();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub) {\n  //每个构造函数都有自己的 directives ,components, filters 引用\n  sub.directives = extend(create(this.directives), sub.directives);\n  sub.components = extend(create(this.components), sub.components);\n  sub.filters = extend(create(this.filters), sub.filters);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, directive: directive.directive\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, defaults: {}\n, filters: {\n    //build in filter\n    json: function(obj, replacer, space) {\n      return JSON.stringify(obj, replacer, space) }\n  }\n, filter: function(filterName, filter) {\n    this.filters[filterName] = filter;\n  }\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var instance;\n    var dirs = directive.getDirs(el, this);\n    var Comp, dir;\n\n    dir = dirs.filter(function(dir) {\n      return  dir.type === 'tag' || dir.type === 'component'\n    })[0];\n\n    if(dir) {\n      Comp = this.getComponent(dir.path)\n    }\n\n    props = props || {};\n    if(Comp) {\n      props.$data = extend(domUtils.getAttrs(el), props.$data)\n      instance = new Comp(extend({$el: el, $isReplace: true, __mountcall: true}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, lifeCycles, {\n  /**\n   * 获取属性/方法\n   * @param {String} expression 路径/表达式\n   * @returns {*}\n   */\n  $get: function(expression) {\n    var dir = new Dir('$get', {\n      path: expression\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(this.$data, key);\n        extend(this, key);\n      }else{\n        this.$data = key;\n      }\n      update.call(reVm, key);\n    }else{\n      this.$replace(key, val);\n    }\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, last, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      val = key;\n      reKey = '$data';\n      keys = [reKey];\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n    }\n\n    last = reVm.$get(reKey);\n\n    if (keys[0] === '$data') {\n      if(reKey === '$data') {\n        if(isObject(this.$data)) {\n          Object.keys(this.$data).forEach(function (k) {\n            delete this[k];\n          }.bind(this))\n        }\n        extend(reVm, val);\n      }else {\n        deepSet(keys.shift().join('.'), val, reVm)\n      }\n    } else {\n      deepSet(reKey, val, reVm.$data);\n    }\n    deepSet(reKey, val, reVm)\n\n    hasKey ? update.call(reVm, reKey, extend({}, last, val)) : update.call(reVm, extend({}, last, val));\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    //同时更新子路径\n    Watcher.getWatchers(this, keyPath).forEach(function(watcher) {\n      watcher.update();\n    }.bind(this))\n\n    //数组冒泡的情况\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n  }\n, $watch: function (expression, callback, immediate) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      return Watcher.addWatcher.call(this, new Dir('$watch', {path: expression, update: update, immediate : !!immediate}))\n    }\n  }\n, $unwatch: function (expression, callback) {\n    Watcher.unwatch(this, expression, callback)\n  }\n  //销毁当前实例\n, $destroy: function(removeEl) {\n    this.$beforeDestroy()\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    removeEl && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)\n    this.__links = [];\n    this.$afterDestroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n  this.$beforeUpdate(this.$data)\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n  this.$afterUpdate(this.$data)\n}\n\n//处理 $el,  $content, $tpl\nfunction resolveTpl() {\n  var el = this.$el\n    , content = this.$content\n    , tpl = this.$tpl\n    , tplEl\n    ;\n\n  content = el && el.childNodes ? el.childNodes : content\n\n  if(el) {\n    //传入 $el 元素的子元素都存放到 $conten 中\n    content = el.childNodes;\n  }\n\n  if(content) {\n    //创建 $content documentFragment\n    this.$content = domUtils.createContent(content)\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    tplEl = tpl;\n    tpl = tplEl.outerHTML;\n  }else{\n    //字符串\n    tplEl = domUtils.createContent(tpl).childNodes[0];\n  }\n\n  if(el) {\n    if(this.$isReplace) {\n      el.parentNode && el.parentNode.replaceChild(tplEl, el)\n      el = tplEl;\n    }else{\n      el.appendChild(tplEl)\n    }\n  }else{\n    el = tplEl;\n  }\n\n  this.$el = el;\n}\n\nBee.version = '0.5.0';\n\nmodule.exports = Bee;\n",null,"\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  , directive = require('./directive')\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template');\n\n/**\n * 遍历 dom 树\n * @private\n * @param {Element|NodeList} el\n * @returns {Array} 节点下所有的绑定\n */\n\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , dirs = directive.getDirs(el, cstr)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\nvar partialReg = /^>\\s*/;\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      if(partialReg.test(t.path)) {\n        t.path = t.path.replace(partialReg, '');\n        dir = utils.create(dirs.content)\n        dir.dirName = dir.type\n        dir.anchors = directive.setAnchors(node, dir.type)\n      }else{\n        dir = utils.create(t.escape ? dirs.text : dirs.html)\n      }\n\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else{\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.vm = this;\n  dir.link();\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /**\n   * 构造函数继承.\n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @returns {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ?\n          protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    var supRef = {__super__: sup.prototype};\n\n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, supRef, protoProps);\n    extend(constructor, sup, supRef, staticProps);\n\n    return constructor;\n  }\n};\n\nmodule.exports = Class;\n","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\n/**\n * 查询某构造函数下的注册组件\n * @parm {String} componentName\n */\nfunction getComponent(componentName) {\n  var paths = utils.parseKeyPath(componentName);\n  var CurCstr = this;\n  paths.forEach(function(comName) {\n    CurCstr = CurCstr && CurCstr.components[comName];\n  });\n  return CurCstr || null;\n}\n\nexports.tag = exports.component = tag;\nexports.getComponent = getComponent;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n  , domUtils = require('./dom-utils')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nvar astCache = {};\n\nDirective.prototype = {\n  priority: 0//权重\n, type: '' //指令类型\n, subType: '' //子类型. 比如 `b-on-click` 的 type 为 `on`, subType 为 `click`\n, sub: false //是否允许子类型指令\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化. 如果为 false 的话, update 方法默认只会在初始化后调用一次\n, immediate: true //是否在 dir 初始化时立即执行 update 方法\n\n, anchor: false\n, anchors: null\n\n  //获取两个锚点之间的所有节点.\n, getNodes: function(start, end) {\n    start = start || this.anchors.start;\n    end = end || this.anchors.end;\n\n    var nodes = [], node = start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    var cache = astCache[this.path]\n    if(cache && cache._type === this.type){\n      this.ast = cache\n    }else {\n      try {\n        this.ast = parse(this.path, this.type);\n        this.ast._type = this.type;\n        astCache[this.path] = this.ast;\n      } catch (e) {\n        this.ast = {};\n        e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n        console.error(e);\n      }\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n/**\n * 获取一个元素上所有用 HTML 属性定义的指令\n * @param  {Element} el   指令所在元素\n * @param  {Bee} cstr 组件构造函数\n * @return {directeve[]}      `el` 上所有的指令\n */\nfunction getDirs(el, cstr){\n  var attr, attrName, dirName, proto\n    , dirs = [], dir\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    , directives = cstr.directives\n    , prefix = cstr.prefix\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(cstr.getComponent(nodeName)) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dir = getDir(dirName, directives))) {\n      //指令\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor) {\n        dir.anchors = setAnchors(el, dir.dirName);\n      }\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nfunction getDir(dirName, dirs) {\n  var dir, subType;\n  for(var key in dirs) {\n    if(dirName === key){\n      dir = dirs[key]\n      break\n    }else if(dirName.indexOf(key + '-') === 0){\n      dir = dirs[key]\n      if(!dir.sub){\n        dir = null\n      }else{\n        subType = dirName.slice(key.length + 1)\n      }\n      break;\n    }\n  }\n  if(dir) {\n    dir = create(dir);\n    dir.subType = subType;\n  }\n  return dir;\n}\n\nfunction setAnchors(node, dirName) {\n  var parent = node.parentNode\n    , anchors = {}\n    ;\n\n    anchors.start = doc.createComment(dirName + ' start');\n    parent.insertBefore(anchors.start, node);\n\n    anchors.end = doc.createComment(dirName + ' end');\n    if(node.nextSibling) {\n      parent.insertBefore(anchors.end, node.nextSibling);\n    }else{\n      parent.appendChild(anchors.end);\n    }\n    return anchors\n}\n\nmodule.exports = {\n  Directive: Directive,\n  directive: directive,\n  getDirs: getDirs,\n  setAnchors: setAnchors\n};\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n}","//component as directive\nvar utils = require('../utils.js');\nvar domUtils = require('../dom-utils')\nvar checkBinding = require('../check-binding')\n\nmodule.exports = {\n  priority: -1\n, watch: false\n, unLink: function() {\n    this.component && this.component.$destroy()\n  }\n, link: function() {\n    var vm = this.vm;\n    var el = this.el;\n    var cstr = vm.constructor;\n    var comp, content;\n    //var refName;\n    var dirs = [], $data = {};\n    var Comp = cstr.getComponent(this.path)\n\n    if(Comp) {\n\n      if(Comp === cstr && vm.__mountcall) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        // if(dir.type === 'ref') {\n        //   refName = dir.path;\n        // }\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with') {\n          //comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = utils.hyphenToCamel(dir.dirName);\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comPath ? comp.$set(comPath, val) : comp.$set(val);\n          }\n        })\n      });\n\n      content = domUtils.createContent(el.childNodes);\n\n      //组件内容属于其容器\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, content));\n\n      el.appendChild(content)\n\n      this.component = comp = new Comp({\n        $el: el,\n        $isReplace: true,\n        $data: utils.extend({}, Comp.prototype.$data, $data, domUtils.getAttrs(el))\n      });\n      el.bee = comp;\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      // if(vm.$el === el) {\n      //   vm.__ref = comp;\n      //   vm.$el = comp.$el;\n      // }\n      return comp;\n    }else{\n      console.warn('Component: ' + this.path + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function() {\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}\n","\"use strict\";\n\nvar checkBinding = require('../check-binding')\n  , domUtils = require('../dom-utils')\n  , doc = require('../env').document\n\nmodule.exports = {\n  anchor: true\n, priority: 900\n, terminal: true\n, link: function() {\n    this.watchers = [];\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n    }\n    this.remove();\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.add() }\n    }else{\n      if(this.state) { this.remove(); }\n    }\n    this.state = val;\n  }\n\n, add: function() {\n    var anchor = this.anchors.end;\n    if(!this.walked) {\n      this.walked = true;\n      this.watchers = checkBinding.walk.call(this.vm, this.frag);\n    }\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = false;\n      if(watcher._needUpdate) {\n        watcher.update()\n        watcher._needUpdate = false;\n      }\n    })\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, remove: function() {\n    var nodes = this.getNodes();\n\n    for(var i = 0, l = nodes.length; i < l; i++) {\n      this.frag.appendChild(nodes[i]);\n    }\n\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = true;\n    })\n  }\n};\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , checkBinding = require('../check-binding')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, watch: false\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载 URL 中带有大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs['if'] = require('./if')\ndirs.repeat = require('./repeat');\ndirs.attr = require('./attr');\ndirs.model = require('./model');\ndirs.style = require('./style');\ndirs.on = require('./on');\ndirs.component = dirs.tag = require('./component');\ndirs.content = require('./content')\ndirs.ref = require('./ref')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\n\nmodule.exports = {\n  teminal: true\n, priority: -2\n, link: function() {\n    var keyPath = this.path;\n    var vm = this.vm;\n\n    if(!keyPath) { return false; }\n\n    var comp = this.el\n      , ev = 'change'\n      , attr\n      , value = attr = 'value'\n      , isSetDefaut = utils.isUndefined(vm.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n\n        //更新组件\n      , update = function(val) {\n          if(val === 0) { val = '0' }\n          var newVal = (val || '') + ''\n            , val = comp[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ comp[attr] = newVal; }\n        }\n\n        //更新 viewModel\n      , handler = function() {\n          var val = comp[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          vm.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    if(comp.bee) {\n      // 组件的双向绑定\n      comp = comp.bee;\n      value = comp.$valuekey;\n      if(value) {\n        update = function(val) {\n          comp.$replace(value, val)\n        };\n        handler = function() {\n          vm.$replace(keyPath, comp.$get(value))\n        }\n        comp.$watch(value, function(val, oldValue) {\n          val !== oldValue && handler()\n        }, true)\n      }\n    }else{\n      //HTML 原生控件的双向绑定\n      switch(comp.tagName) {\n        default:\n          value = attr = 'innerHTML';\n          //ev += ' blur';\n        case 'INPUT':\n        case 'TEXTAREA':\n          switch(comp.type) {\n            case 'checkbox':\n              value = attr = 'checked';\n              //IE6, IE7 下监听 propertychange 会挂?\n              if(ie) { ev += ' click'; }\n            break;\n            case 'radio':\n              attr = 'checked';\n              if(ie) { ev += ' click'; }\n              update = function(val) {\n                comp.checked = comp.value === val + '';\n              };\n              isSetDefaut = comp.checked;\n            break;\n            default:\n              if(!vm.$lazy){\n                if('oninput' in comp){\n                  ev += ' input';\n                }\n                //IE 下的 input 事件替代\n                if(ie) {\n                  ev += ' keyup propertychange cut';\n                }\n              }\n            break;\n          }\n        break;\n        case 'SELECT':\n          if(comp.multiple){\n            handler = function() {\n              var vals = [];\n              for(var i = 0, l = comp.options.length; i < l; i++){\n                if(comp.options[i].selected){ vals.push(comp.options[i].value) }\n              }\n              vm.$replace(keyPath, vals);\n            };\n            update = function(vals){\n              if(vals && vals.length){\n                for(var i = 0, l = comp.options.length; i < l; i++){\n                  comp.options[i].selected = vals.indexOf(comp.options[i].value) !== -1;\n                }\n              }\n            };\n          }\n          isSetDefaut = isSetDefaut && !hasToken(comp[value]);\n        break;\n      }\n\n      ev.split(/\\s+/g).forEach(function(e){\n        events.removeEvent(comp, e, callHandler);\n        events.addEvent(comp, e, callHandler);\n      });\n      //根据表单元素的初始化默认值设置对应 model 的值\n      if(comp[value] && isSetDefaut){\n         handler();\n      }\n    }\n\n    this.update = update;\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, sub: true\n, priority: -3 //事件应该在 b-model 之后监听. 防止普通事件调用过快\n, immediate: false // watch 和 immediate 同时为 false 时, 指令的 update 方法将不会自动被外部调用\n, link: function() {\n    var dir = this;\n    if(this.subType){\n      // be-on-click 等\n      eventBind.addEvent(this.el, this.subType, function() {\n        dir.vm.$get(dir.path)\n      })\n    }else{\n      //link 方法的调用在 watcher 检测 immediate 之前,\n      //所以可以在这里将 immediate 置为 true 以便自动调用 update 方法\n      this.immediate = true;\n      //this.update(this.vm.$get(this.path))\n    }\n  }\n, update: function (events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\n//要求 IE8+\n//请注意这里的 event.currentTarget 和 event.delegateTarget 同 jQuery 的刚好相反\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, priority: -2 // ref 应该在 component 之后\n, unLink: function() {\n    if(utils.isArray(this.ref)) {\n      this.ref.splice(this.vm.$index, 1)\n    }else{\n      this.vm.$refs[this.path] = null;\n    }\n  }\n, link: function() {\n    var vm = this.vm\n    //在 `repeat` 元素上的 `ref` 会指向匿名 `viewmodel`\n    if(vm.__repeat){\n      if(!vm.$index) {\n        vm.$parent.$refs[this.path] = [];\n      }\n      this.ref = vm.$parent.$refs[this.path]\n      this.ref[vm.$index] = vm;\n    }else{\n      vm.$refs[this.path] = this.el.bee || this.el;\n    }\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , scope = require('../scope')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, unLink: function(){\n    this.vmList.forEach(function(vm){\n      vm.$destroy()\n    })\n  }\n, link: function() {\n    var cstr = this.cstr = this.vm.constructor;\n\n    while(cstr.__super__){\n      cstr = cstr.__super__.constructor;\n    }\n\n    this.trackId = this.el.getAttribute('track-by')\n    this.el.removeAttribute('track-by')\n\n    //只继承静态的默认参数\n    this.cstr = cstr.extend({}, this.cstr)\n\n    //默认数据不应继承\n    this.cstr.defaults = {};\n\n    this.curArr = [];\n    this.vmList = [];//子 VM list\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.isRange = true\n    }else{\n      this.frag = this.el;\n    }\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, vmList = this.vmList;\n    var trackId = this.trackId;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中相关变量\n      this.listPath = this.summary.paths.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items, trackId).forEach(function(item) {\n        var pos = indexByTrackId(item, curArr, trackId)\n        curArr.splice(pos, 1)\n\n        if(that.isRange) {\n          getNodesByIndex(that, pos).forEach(function(node) {\n            parentNode.removeChild(node)\n          })\n        }else{\n          parentNode.removeChild(vmList[pos].$el)\n        }\n        vmList[pos].$destroy()\n        vmList.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = indexByTrackId(item, items, trackId, i)\n          , oldPos = indexByTrackId(item, curArr, trackId, i)\n          , vm, el, anchor\n          ;\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.frag.cloneNode(true)\n\n          if(this.isRange) {\n            anchor = doc.createComment('')\n            el.childNodes.length ? el.insertBefore(anchor, el.childNodes[0]) : el.appendChild(anchor)\n          }\n\n          vm = new this.cstr(el, {\n            $data: item,\n            _assignments: this.summary.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true,\n            __anchor__: anchor\n          });\n\n          parentNode.insertBefore(vm.$el, getAnchor(that, pos))\n          vmList.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n\n            parentNode.insertBefore(getElByIndex(that, oldPos), getAnchor(that, pos))\n            parentNode.insertBefore(getElByIndex(that, pos), getAnchor(that, oldPos + 1))\n\n            vmList[oldPos] = [vmList[pos], vmList[pos] = vmList[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            vmList[pos].$index = pos\n            vmList[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      vmList.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      this.summary.paths.forEach(function(localKey) {\n        var local = that.vm.$get(localKey);\n        var dirs = local.__dirs__;\n        if(utils.isArray(local)) {\n          if(!dirs){\n            //数组操作方法\n            utils.extend(local, {\n              $set: function(i, item) {\n                local.splice(i, 1, utils.isObject(item) ? utils.extend({}, local[i], item) : item)\n              },\n              $replace: function(i, item) {\n                local.splice(i, 1, item)\n              },\n              $remove: function(i) {\n                local.splice(i, 1);\n              }\n            });\n            arrayMethods.forEach(function(method) {\n              local[method] = utils.afterFn(local[method], function() {\n                dirs.forEach(function(dir) {\n                  dir.listPath.forEach(function(path) {\n                    var reformed = scope.reformScope(dir.vm, path)\n                    reformed.vm.$update(reformed.path)\n                  })\n                })\n              })\n            });\n            dirs = local.__dirs__  = [];\n          }\n          //一个数组多处使用\n          //TODO 移除时的情况\n          if(dirs.indexOf(that) === -1) {\n            dirs.push(that)\n          }\n        }\n      })\n\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\nfunction getAnchor(dir, index) {\n  var vm = dir.vmList[index]\n  return vm ? ( dir.isRange ? vm.__anchor__ : vm.$el ) : dir.anchors.end\n}\n\n//根据索引获取该次迭代中的所有元素\nfunction getNodesByIndex(dir, index) {\n  var vmList = dir.vmList\n    , anchor = vmList[index].__anchor__\n    , next = vmList[index + 1]\n    ;\n  return [anchor].concat(dir.getNodes(anchor, next && next.__anchor__))\n}\n\nfunction getElByIndex (dir, index) {\n  var frag = doc.createDocumentFragment()\n  if(dir.isRange) {\n    getNodesByIndex(dir, index).forEach(function(node) {\n      frag.appendChild(node)\n    })\n  }else{\n    frag.appendChild(dir.vmList[index].$el)\n  }\n  return frag\n}\n\nfunction arrDiff(arr1, arr2, trackId) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = indexByTrackId(el, arr2Copy, trackId)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n\nfunction indexByTrackId(item, list, trackId, startIndex) {\n  startIndex = startIndex || 0;\n  var index = list.indexOf(item, startIndex);\n  if(index === -1 && trackId){\n    for(var i = startIndex, item1; item1 = list[i]; i++) {\n      if(item[trackId] ===  item1[trackId] && !utils.isUndefined(item[trackId])){\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\n","\"use strict\";\n\n//样式指令\nvar utils = require('../utils')\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',\n  'top', 'left', 'right', 'bottom'\n]\n\n//对于 IE6, IE7 浏览器需要使用 `el.style.getAttribute('cssText')` 与 `el.style.setAttribute('cssText')` 来读写 style 字符属性\n\nmodule.exports = {\n  link: function() {\n    this.initStyle = this.el.style.getAttribute ? this.el.style.getAttribute('cssText') : this.el.getAttribute('style')\n  },\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = this.initStyle ? this.initStyle.replace(/;?$/, ';') : '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr += styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top. 驼峰转连接符式\n        dashKey = key.replace(camelReg, function (upperChar) {\n          return '-' + upperChar.toLowerCase();\n        });\n\n        if (pixelAttrs.indexOf(dashKey) >= 0 && utils.isNumeric(val)) {\n          val += 'px';\n        }\n        if(!utils.isUndefined(val)){\n          styleStr += dashKey + ': ' + val + '; ';\n        }\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};\n","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\nmodule.exports = {\n  //将模板/元素/nodelist 包裹在 fragment 中\n  createContent: function createContent(tpl) {\n    var content = doc.createDocumentFragment();\n    var wraper;\n    var nodes = [];\n    if(utils.isObject(tpl)) {\n      if(tpl.nodeName && tpl.nodeType) {\n        //dom 元素\n        content.appendChild(tpl);\n      }else if('length' in tpl){\n        //nodelist\n        nodes = tpl;\n      }\n    }else {\n      wraper = doc.createElement('div')\n      //自定义标签在 IE8 下无效. 使用 component 指令替代\n      wraper.innerHTML = (tpl + '').trim();\n      nodes = wraper.childNodes;\n    }\n    while(nodes[0]) {\n      content.appendChild(nodes[0])\n    }\n    return content;\n  },\n\n  //获取元素属性\n  getAttrs: function(el) {\n    var attributes = el.attributes;\n    var attrs = {};\n\n    for(var i = attributes.length - 1; i >= 0; i--) {\n      //连接符转驼峰写法\n      attrs[utils.hyphenToCamel(attributes[i].nodeName)] = attributes[i].value;\n    }\n\n    return attrs;\n  },\n\n  hasAttr: function(el, attrName) {\n    return el.hasAttribute ? el.hasAttribute(attrName) : !utils.isUndefined(el[attrName]);\n  }\n};\n","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","/**\n * 表达式执行\n */\n\n\"use strict\";\n\nvar scope = require('./scope')\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n    //TODO 模板中方法的 this 应该指向 root\n  , '(': function(l, r){ return l.apply(root, r) }\n    //filter. name|filter\n  , '|': function(l, r){ return callFilter(l, r, []) }\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.repeat) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  , 'catchby': function(l, r) {\n      if(l['catch']) {\n        return l['catch'](r.bind(root))\n      }else{\n        summaryCall || console.error('catchby expect a promise')\n        return l;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n    //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\n  }\n};\n\nfunction callFilter(arg, filter, args) {\n  if(arg && arg.then) {\n    return arg.then(function(data) {\n      return filter.apply(root, [data].concat(args))\n    });\n  }else{\n    return filter.apply(root, [arg].concat(args))\n  }\n}\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  , root\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        //summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'repeat':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    root = scope.$root;\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.constructor.filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function(key, vm) {\n  var reformed = scope.reformScope(vm, key)\n  return reformed.vm[reformed.path]\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  //infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(10));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n  infix('catchby', 10);\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var ass, curVm = cur;\n\n  while(cur) {\n    curVm = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { vm: curVm, path: paths.join('.') }\n};\n\n\nexports.reformScope = reformScope;\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @returns {Object} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\n//html 中属性名不区分大小写, 并且会全部转成小写.\n//这里会将连字符写法转成驼峰式\n//attr-name --> attrName\n//attr--name --> attr-name\nvar hyphensReg = /-(-?)([a-z])/ig;\nvar hyphenToCamel = function(attrName) {\n  return attrName.replace(hyphensReg, function(s, dash, char) {\n    return dash ? dash + char : char.toUpperCase();\n  })\n}\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n, isNumeric: function(val) {\n    return !utils.isArray(val) && val - parseFloat(val) + 1 >= 0;\n  }\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  },\n  hyphenToCamel: hyphenToCamel\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nvar summaryCache = {};\n\n/**\n * 每个 directive 对应一个 watcher\n * @param {Bee} vm  directive 所处的环境\n * @param {Directive} dir\n */\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n  var summary = summaryCache[dir.path]\n\n  dir.watcher = this;\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n\n  if(!summary || summary._type !== dir.type){\n    summary = evaluate.summary(dir.ast);\n    summary._type = dir.type;\n    summaryCache[dir.path] = summary;\n  }\n  dir.summary = summary\n\n  //将该 watcher 与每一个属性建立引用关系\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    //将每个 key 对应的 watchers 都塞进来\n    this.watchers.push( watchers );\n  }\n\n  //是否在初始化时更新\n  dir.immediate !== false && this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers[i].unwatch()\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\n//获取某 keyPath 子路径的 watchers\nWatcher.getWatchers = function getWatchers(vm, keyPath) {\n  var _watchers = vm._watchers, watchers = [];\n  var point;\n  for(var key in _watchers) {\n    point = key.charAt(keyPath.length);\n    if(key.indexOf(keyPath) === 0 && (point === '.')) {\n      watchers = watchers.concat(_watchers[key])\n    }\n  }\n  return watchers\n}\n\nfunction watcherUpdate (val) {\n  var oldValue;\n  try{\n    oldValue = this.val;\n    this.val = val;\n    this.dir.update(val, oldValue);\n  }catch(e){\n    console.error(e);\n  }\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行并更新 view\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    if(this._hide) {\n      this._needUpdate = true;\n      return;\n    }\n    newVal = this.dir.getValue(this.vm);\n\n    //简单过滤重复更新\n    if(newVal !== this.val || utils.isObject(newVal)){\n      if(newVal && newVal.then) {\n        //a promise\n        newVal.then(function(val) {\n          watcherUpdate.call(that, val);\n        });\n      }else{\n        watcherUpdate.call(this, newVal);\n      }\n    }\n  },\n  //移除\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}