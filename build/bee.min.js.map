{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","bee.js","src/bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/class.js","src/directives/component.js","src/directives/content.js","src/directives/if.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/ref.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,2,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","defaults","$data","extend","constructor","$refs","$mixins","$el","$content","$isReplace","$parent","$root","$context","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","lifeCycles","utils","afterFn","bind","resolveTpl","$beforeInit","bee","checkBinding","walk","$afterInit","update","keyPath","data","keyPaths","$beforeUpdate","arguments","Object","keys","path","$update","$afterUpdate","tplEl","el","content","childNodes","domUtils","createContent","outerHTML","parentNode","replaceChild","appendChild","doc","document","Class","directive","Com","Watcher","dirs","scope","Dir","Directive","parseKeyPath","deepSet","create","noop","$beforeDestroy","$afterDestroy","sub","args","staticProps","directives","components","filters","json","obj","replacer","space","JSON","stringify","filter","filterName","mount","id","instance","Comp","dir","nodeType","getElementById","getDirs","type","getComponent","getAttrs","__mountcall","prototype","$get","expression","watch","parse","getValue","$set","key","val","reVm","$replace","last","reformed","reKey","hasKey","reformScope","vm","k","shift","join","isBubble","watchers","replace","pop","push","getWatchers","watcher","$watch","callback","immediate","_originFn","addWatcher","$unwatch","unwatch","$destroy","removeEl","wacher","removeChild","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",3,"dirResult","NODETYPE","FRAGMENT","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","text","tn","createTextNode","insertBefore","partialReg","test","dirName","anchors","setAnchors","escape","html","isFunction","link","unBinding","ATTR","createElement","./directive","./token.js","./utils","./watcher",4,"protoProps","sup","apply","Fn","supRef","__super__",5,"tag","tagName","Component","statics","tags","componentName","context","paths","CurCstr","comName","component",6,"opts","attr","attrName","proto","setAttribute","attributes","slice","value","indexOf","getDir","origin","attrPostReg","conditional","anchor","sort","d0","d1","subType","parent","start","createComment","end","evaluate","astCache","unLink","tearDown","getNodes","nodes","cache","_type","ast","message","console","error","forgive","eval","./dom-utils","./eval.js","./parse.js",7,"setProperty","isComponent","hyphenToCamel","setAttr","removeProperty","undef","style","className","__repeat","attrs","newAttrs","position","../utils.js",8,"initClass","classes","classStr",9,"getProperty","comp","curPath","comPath","_dir","camelToHyphen","../check-binding","../dom-utils",10,11,"frag","remove","state","add","walked","_hide","_needUpdate","../env",12,"innerHTML","template","src","repeat","model","on","ref","../env.js","./attr","./component","./content","./if","./model","./on","./ref","./repeat","./style",13,"events","teminal","compVal","ev","isSetDefaut","crlf","newVal","handler","callHandler","propertyName","ie","$valuekey","oldValue","checked","$lazy","multiple","vals","options","selected","hasAttribute","split","removeEvent","addEvent","../event-bind.js","../token.js",14,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",15,"isArray","$index","__vmList",16,"getAnchor","index","vmList","isRange","__anchor","getNodesByIndex","getElByIndex","arrDiff","arr1","arr2","trackId","arr2Copy","indexByTrackId","splice","item","list","startIndex","item1","arrayMethods","getAttribute","curArr","items","that","arrs","listPath","summary","pos","oldPos","cloneNode","assignments","localKey","local","__dirs__","$remove","method","../bee","../scope",17,"pixelAttrs","initStyle","styles","dashKey","styleStr","isNumeric",18,"wraper","trim","hasAttr",19,"root","jsdom",20,"callFilter","arg","then","getOperator","arity","operators","reset","summaryCall","locals","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","prev","first","(","|","Date","Function","in","catchby","ternary","?","argName","tree","res","Array",21,"event","addEventListener","attachEvent","removeEventListener","detachEvent",22,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","rbp","left","original_symbol","symbol","bp","constant","x","infix","second","infixr","Math","third","_source","_context",23,"ass","curVm",24,"tokenReg","lastIndex","exec",25,"bra","keyPathReg","copy","copyIsArray","clone","deep","hyphensReg","dash","char","toUpperCase","camelReg","upperChar","div","all","getElementsByTagName","parseFloat","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","chain","arrLike","arr",26,"summaryCache","NaN","exp","watcherUpdate","point"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , directive = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n\n  , Dir = directive.Directive\n  ;\n\n\nvar isObject = utils.isObject\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n//TODO 清理这个\nvar mergeProps = {\n  $data: 1\n};\n\nvar lifeCycles = {\n  $beforeInit: utils.noop\n, $afterInit: utils.noop\n, $beforeUpdate: utils.noop\n, $afterUpdate: utils.noop\n, $beforeDestroy: utils.noop\n, $afterDestroy: utils.noop\n};\n\n/**\n * 构造函数\n * @constructor\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n */\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n  }else{\n    props = props || {};\n    if(tpl) {\n      props.$tpl = tpl;\n    }\n  }\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: extend(true, {}, this.constructor.defaults)\n  , $refs: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $tpl: this.$tpl || '<div>{{> $content }}</div>'\n  , $content: this.$content || null\n\n  , $isReplace: false\n  , $parent: null\n  , $root: this\n  , $context: null\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var mixins = [defaults].concat(this.$mixins).concat(props.$mixins).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  extend(this, this.$data);\n\n  resolveTpl.call(this);\n\n  this.$beforeInit()\n  this.$el.bee = this;\n\n  //__links 包含了 $el 下所有的绑定引用\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  this._isRendered = true;\n  this.$afterInit();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub, args) {\n  var staticProps = args[1] || {};\n  //每个构造函数都有自己的 directives ,components, filters 引用, 继承自父构造函数\n  //默认情况下, 更新父构造函数 directive, components, filters 会同步更新子构造函数. 反之不行\n  sub.directives = extend(create(this.directives), staticProps.directives);\n  sub.components = extend(create(this.components), staticProps.components);\n  sub.filters = extend(create(this.filters), staticProps.filters);\n\n  sub.defaults = extend(true, {}, this.defaults, staticProps.defaults);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, directive: directive.directive\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, defaults: {}\n, filters: {\n    //build in filter\n    json: function(obj, replacer, space) {\n      return JSON.stringify(obj, replacer, space) }\n  }\n, filter: function(filterName, filter) {\n    this.filters[filterName] = filter;\n  }\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var instance;\n    var dirs = directive.getDirs(el, this);\n    var Comp, dir;\n\n    dir = dirs.filter(function(dir) {\n      return  dir.type === 'tag' || dir.type === 'component'\n    })[0];\n\n    if(dir) {\n      Comp = this.getComponent(dir.path)\n    }\n\n    props = props || {};\n    if(Comp) {\n      props.$data = extend(domUtils.getAttrs(el), props.$data)\n      instance = new Comp(extend({$el: el, $isReplace: true, __mountcall: true}, props))\n    }else{\n      instance = new this(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, lifeCycles, {\n  /**\n   * 获取属性/方法\n   * @param {String} expression 路径/表达式\n   * @returns {*}\n   */\n  $get: function(expression) {\n    var dir = new Dir('$get', {\n      path: expression\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(this.$data, key);\n        extend(this, key);\n      }else{\n        this.$data = key;\n      }\n      update.call(reVm, key);\n    }else{\n      this.$replace(key, val);\n    }\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, last, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      val = key;\n      reKey = '$data';\n      keys = [reKey];\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n    }\n\n    last = reVm.$get(reKey);\n\n    if (keys[0] === '$data') {\n      if(reKey === '$data') {\n        if(isObject(this.$data)) {\n          Object.keys(this.$data).forEach(function (k) {\n            delete this[k];\n          }.bind(this))\n        }\n        extend(reVm, val);\n      }else {\n        deepSet(keys.shift().join('.'), val, reVm)\n      }\n    } else {\n      deepSet(reKey, val, reVm.$data);\n    }\n    deepSet(reKey, val, reVm)\n\n    hasKey ? update.call(reVm, reKey, extend({}, last, val)) : update.call(reVm, extend({}, last, val));\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i] && watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    //同时更新子路径\n    Watcher.getWatchers(this, keyPath).forEach(function(watcher) {\n      watcher.update();\n    }.bind(this))\n\n    //数组冒泡的情况\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n  }\n, $watch: function (expression, callback, immediate) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      return Watcher.addWatcher.call(this, new Dir('$watch', {path: expression, update: update, immediate : !!immediate}))\n    }\n  }\n, $unwatch: function (expression, callback) {\n    Watcher.unwatch(this, expression, callback)\n  }\n  //销毁当前实例\n  //removeEl 为 false 时不移除元素\n, $destroy: function(removeEl) {\n    this.$beforeDestroy()\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    removeEl !== false && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)\n    this.__links = [];\n    this.$afterDestroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n  this.$beforeUpdate(this.$data)\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n  this.$afterUpdate(this.$data)\n}\n\n//处理 $el,  $content, $tpl\nfunction resolveTpl() {\n  var el = this.$el\n    , content = this.$content\n    , tpl = this.$tpl\n    , tplEl\n    ;\n\n  content = el && el.childNodes ? el.childNodes : content\n\n  if(el) {\n    //传入 $el 元素的子元素都存放到 $conten 中\n    content = el.childNodes;\n  }\n\n  if(content) {\n    //创建 $content documentFragment\n    this.$content = domUtils.createContent(content)\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    tplEl = tpl;\n    tpl = tplEl.outerHTML;\n  }else{\n    //字符串\n    tplEl = domUtils.createContent(tpl).childNodes[0];\n  }\n\n  if(el) {\n    if(this.$isReplace) {\n      el.parentNode && el.parentNode.replaceChild(tplEl, el)\n      el = tplEl;\n    }else{\n      el.appendChild(tplEl)\n    }\n  }else{\n    el = tplEl;\n  }\n\n  this.$el = el;\n}\n\nBee.version = '0.5.3';\n\nmodule.exports = Bee;\n","\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  , directive = require('./directive')\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template');\n\n/**\n * 遍历 dom 树\n * @private\n * @param {Element|NodeList} el\n * @returns {Array} 节点下所有的绑定\n */\n\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , dirs = directive.getDirs(el, cstr, this.$context)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\nvar partialReg = /^>\\s*/;\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      if(partialReg.test(t.path)) {\n        t.path = t.path.replace(partialReg, '');\n        dir = utils.create(dirs.content)\n        dir.dirName = dir.type\n        dir.anchors = directive.setAnchors(node, dir.type)\n      }else{\n        dir = utils.create(t.escape ? dirs.text : dirs.html)\n      }\n\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else{\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.vm = this;\n  dir.link();\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /**\n   * 构造函数继承.\n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @returns {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ?\n          protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    var supRef = {__super__: sup.prototype};\n\n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, supRef, protoProps);\n    extend(constructor, sup, supRef, staticProps);\n\n    return constructor;\n  }\n};\n\nmodule.exports = Class;\n","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\n/**\n * 查询某构造函数下的注册组件\n * @param {String} componentName 组件标签名\n * @param {Bee} context 组件出现的环境实例\n */\nfunction getComponent(componentName, context) {\n  var paths = utils.parseKeyPath(componentName);\n  var CurCstr = this;\n  paths.forEach(function(comName) {\n    CurCstr = CurCstr && CurCstr.components[comName];\n  });\n\n  if(context && context.constructor && !CurCstr) {\n    CurCstr = context.constructor.getComponent(componentName, context.$context);\n  }\n  return CurCstr || null;\n}\n\nexports.tag = exports.component = tag;\nexports.getComponent = getComponent;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n  , domUtils = require('./dom-utils')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nvar astCache = {};\n\nDirective.prototype = {\n  priority: 0//权重\n, type: '' //指令类型\n, subType: '' //子类型. 比如 `b-on-click` 的 type 为 `on`, subType 为 `click`\n, sub: false //是否允许子类型指令\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化. 如果为 false 的话, update 方法默认只会在初始化后调用一次\n, immediate: true //是否在 dir 初始化时立即执行 update 方法\n\n, anchor: false\n, anchors: null\n\n  //获取两个锚点之间的所有节点.\n, getNodes: function(start, end) {\n    start = start || this.anchors.start;\n    end = end || this.anchors.end;\n\n    var nodes = [], node = start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    var cache = astCache[this.path]\n    if(cache && cache._type === this.type){\n      this.ast = cache\n    }else {\n      if(this.type == 'attr' && this.escape === false) {\n        this.path = '{' + this.path + '}'\n      }\n      try {\n        this.ast = parse(this.path, this.type);\n        this.ast._type = this.type;\n        astCache[this.path] = this.ast;\n      } catch (e) {\n        this.ast = {};\n        e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n        console.error(e);\n      }\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n/**\n * 获取一个元素上所有用 HTML 属性定义的指令\n * @param  {Element} el   指令所在元素\n * @param  {Function} cstr 组件构造函数\n * @param  {Bee} context 当前实例的上下文实例\n * @return {directeve[]}      `el` 上所有的指令\n */\nfunction getDirs(el, cstr, context){\n  var attr, attrName, dirName, proto\n    , dirs = [], dir\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    , directives = cstr.directives\n    , prefix = cstr.prefix\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(cstr.getComponent(nodeName, context)) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dir = getDir(dirName, directives))) {\n      //指令\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor) {\n        dir.anchors = setAnchors(el, dir.dirName);\n      }\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nfunction getDir(dirName, dirs) {\n  var dir, subType;\n  for(var key in dirs) {\n    if(dirName === key){\n      dir = dirs[key]\n      break\n    }else if(dirName.indexOf(key + '-') === 0){\n      dir = dirs[key]\n      if(!dir.sub){\n        dir = null\n      }else{\n        subType = dirName.slice(key.length + 1)\n      }\n      break;\n    }\n  }\n  if(dir) {\n    dir = create(dir);\n    dir.subType = subType;\n  }\n  return dir;\n}\n\nfunction setAnchors(node, dirName) {\n  var parent = node.parentNode\n    , anchors = {}\n    ;\n\n    anchors.start = doc.createComment(dirName + ' start');\n    parent.insertBefore(anchors.start, node);\n\n    anchors.end = doc.createComment(dirName + ' end');\n    if(node.nextSibling) {\n      parent.insertBefore(anchors.end, node.nextSibling);\n    }else{\n      parent.appendChild(anchors.end);\n    }\n    return anchors\n}\n\nmodule.exports = {\n  Directive: Directive,\n  directive: directive,\n  getDirs: getDirs,\n  setAnchors: setAnchors\n};\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type && this.nodeName !== this.dirName) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    var textMap = this.textMap\n\n    //b-attr\n    if(this.attrs) {\n      for(var attr in val) {\n        setProperty.call(this, el, attr, val[attr]);\n\n        delete this.attrs[attr];\n\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeProperty.call(this, el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setProperty.call(this, el, this.dirName, val) : removeProperty.call(this, el, this.dirName);\n      }else{\n        textMap[this.position] = val;\n        setProperty.call(this, el, this.dirName, textMap.length > 1 ? textMap.join('') : textMap[0]);\n      }\n    }\n  }\n};\n\nfunction setProperty(el, key, val) {\n  if(isComponent(this)) {\n    el.bee.$set(utils.hyphenToCamel(key), val)\n  }else{\n    setAttr(el, key, val)\n  }\n}\n\nfunction removeProperty(el, key, undef) {\n  if(isComponent(this)) {\n    el.bee.$set(utils.hyphenToCamel(key), undef)\n  }else{\n    el.removeAttribute(key);\n  }\n}\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效.\n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction isComponent (dir) {\n  var component = dir.el.bee;\n  return component && !component.__repeat && component != dir.vm;\n}\n","\"use strict\";\n\nmodule.exports = {\n  link: function() {\n    this.initClass = this.el.className || ''\n    this.keys = {};\n  },\n  update: function(classes) {\n    var classStr = this.initClass\n      , watcher = this.watcher\n      , key\n      ;\n\n    //class 指令支持 className 字符串或对象 {className: 'key'} 两种形式\n    if(typeof classes === 'string') {\n      if(classes) {\n        classStr += ' ' + classes;\n      }\n    }else{\n      for(var className in classes) {\n        key = classes[className]\n\n        if(!this.keys[key]) {//缓存对象中出现的 key\n          this.keys[key] = true;\n          //对象的键值默认不在监听范围之内, 这里手动监听\n          this.vm.$watch(key, function() {\n            watcher.update()\n          })\n        }\n        if(this.vm.$get(key)) {\n          classStr += ' ' + className\n        }\n      }\n    }\n    this.el.className = classStr;\n  }\n};\n","//component as directive\r\nvar utils = require('../utils.js');\r\nvar domUtils = require('../dom-utils')\r\nvar checkBinding = require('../check-binding')\r\n\r\nmodule.exports = {\r\n  priority: -1\r\n, watch: false\r\n, unLink: function() {\r\n    this.component && this.component.$destroy()\r\n  }\r\n, link: function() {\r\n    var vm = this.vm;\r\n    var el = this.el;\r\n    var cstr = vm.constructor;\r\n    var comp;\r\n    var dirs, $data = {};\r\n    var Comp = cstr.getComponent(this.path, vm.$context)\r\n    var statics = {};\r\n\r\n    if(Comp) {\r\n\r\n      //直接 `Bee.mount` 一个组件\r\n      if(Comp === cstr && vm.__mountcall || el.bee && el.bee === vm) {\r\n        return;\r\n      }\r\n\r\n      dirs = this.dirs.filter(function (dir) {\r\n        return dir.type == 'attr' || dir.type == 'with';\r\n      });\r\n\r\n      dirs.forEach(function (dir) {\r\n        var curPath, comPath;\r\n\r\n        curPath = dir.path;\r\n        if(dir.type === 'with') {\r\n          //comPath = '$data'\r\n          utils.extend(true, $data, vm.$get(curPath))\r\n\r\n          //监听父组件更新, 同步数据\r\n          //TODO 移到 b-with 指令中完成\r\n          vm.$watch(curPath, function (val) {\r\n            comp && comp.$set(utils.extend({}, vm.$get(curPath)));\r\n          })\r\n        }else{\r\n          comPath = utils.hyphenToCamel(dir.dirName);\r\n          $data[comPath] = getProperty(dir)\r\n          dir.el.removeAttribute(dir.dirName)\r\n        }\r\n      });\r\n\r\n      //组件内容属于其容器\r\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, el.childNodes));\r\n\r\n      statics = domUtils.getAttrs(el)\r\n\r\n      //排除指令属性\r\n      var _dir;\r\n      for(var attr in statics) {\r\n        _dir = utils.camelToHyphen(attr);\r\n        _dir = _dir.slice(vm.constructor.prefix.length)\r\n\r\n        if(_dir in vm.constructor.directives) {\r\n          delete statics[attr]\r\n        }\r\n      }\r\n\r\n      this.component = comp = new Comp({\r\n        $el: el,\r\n        $isReplace: true,\r\n        $context: vm,\r\n\r\n        $data: utils.extend(true, {}, $data, statics)\r\n      });\r\n      el.bee = comp;\r\n\r\n      return comp;\r\n    }else{\r\n      console.error('Component: ' + this.path + ' not defined!');\r\n    }\r\n  }\r\n};\r\n\r\n//如果组件的属性只有一个表达式, 则保持该表达式的数据类型\r\nfunction getProperty(dir) {\r\n  var textMap = dir.textMap, val\r\n  val = textMap && textMap.length > 1 ? textMap.join('') : textMap[0]\r\n\r\n  return utils.isPlainObject(val) ? utils.extend(true, {}, val) : val;\r\n}\r\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function() {\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}\n","\"use strict\";\n\nvar checkBinding = require('../check-binding')\n  , domUtils = require('../dom-utils')\n  , doc = require('../env').document\n\nmodule.exports = {\n  anchor: true\n, priority: 900\n, terminal: true\n, link: function() {\n    this.watchers = [];\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n    }\n    this.remove();\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.add() }\n    }else{\n      if(this.state) { this.remove(); }\n    }\n    this.state = val;\n  }\n\n, add: function() {\n    var anchor = this.anchors.end;\n    if(!this.walked) {\n      this.walked = true;\n      this.watchers = checkBinding.walk.call(this.vm, this.frag);\n    }\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = false;\n      if(watcher._needUpdate) {\n        watcher.update()\n        watcher._needUpdate = false;\n      }\n    })\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, remove: function() {\n    var nodes = this.getNodes();\n\n    for(var i = 0, l = nodes.length; i < l; i++) {\n      this.frag.appendChild(nodes[i]);\n    }\n\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = true;\n    })\n  }\n};\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , checkBinding = require('../check-binding')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, watch: false\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载 URL 中带有大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs['if'] = require('./if')\ndirs.repeat = require('./repeat');\ndirs.attr = require('./attr');\ndirs.model = require('./model');\ndirs.style = require('./style');\ndirs.on = require('./on');\ndirs.component = dirs.tag = require('./component');\ndirs.content = require('./content')\ndirs.ref = require('./ref')\ndirs['class'] = require('./class.js')\n\nmodule.exports = dirs;\n","\"use strict\";\r\n\r\nvar utils = require('../utils.js')\r\n  , hasToken = require('../token.js').hasToken\r\n  , events = require('../event-bind.js')\r\n  , checkBinding = require('../check-binding')\r\n  ;\r\n\r\n\r\nmodule.exports = {\r\n  teminal: true\r\n, priority: -2\r\n, link: function() {\r\n    var keyPath = this.path;\r\n    var vm = this.vm;\r\n\r\n    if(!keyPath) { return false; }\r\n\r\n    var comp = this.el\r\n      , ev = 'change'\r\n      , attr, compVal\r\n      , value = attr = 'value'\r\n      , isSetDefaut = utils.isUndefined(vm.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\r\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\r\n\r\n        //更新组件\r\n      , update = function(val) {\r\n          if(val === 0 && comp.type !== 'checkbox') { val = '0' }\r\n          var newVal = (val || '') + ''\r\n            , val = comp[attr]\r\n            ;\r\n          val && val.replace && (val = val.replace(crlf, '\\n'));\r\n          if(newVal !== val){ comp[attr] = newVal; }\r\n        }\r\n\r\n        //更新 viewModel\r\n      , handler = function() {\r\n          var val = comp[value];\r\n\r\n          val.replace && (val = val.replace(crlf, '\\n'));\r\n          vm.$set(keyPath, val);\r\n        }\r\n      , callHandler = function(e) {\r\n          if(e && e.propertyName && e.propertyName !== attr) {\r\n            return;\r\n          }\r\n          handler.apply(this, arguments)\r\n        }\r\n      , ie = utils.ie\r\n      ;\r\n\r\n    if(comp.bee) {\r\n      // 组件的双向绑定\r\n      comp = comp.bee;\r\n      value = comp.$valuekey;\r\n      if(value) {\r\n        update = function(val) {\r\n          comp.$replace(value, val)\r\n        };\r\n        handler = function() {\r\n          vm.$replace(keyPath, comp.$get(value))\r\n        }\r\n        comp.$watch(value, function(val, oldValue) {\r\n          val !== oldValue && handler()\r\n        })\r\n        compVal = vm.$get(keyPath)\r\n\r\n        //默认使用父组件的对应值同步自组件, 如果父组件对应 key 的值是 `undefined` 则反向同步\r\n        if(utils.isUndefined(compVal)) {\r\n          handler()\r\n        }else{\r\n          update(compVal)\r\n        }\r\n      }\r\n    }else{\r\n      //优先解析内部内容\r\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, comp.childNodes));\r\n\r\n      //HTML 原生控件的双向绑定\r\n      switch(comp.tagName) {\r\n        default:\r\n          value = attr = 'innerHTML';\r\n          //ev += ' blur';\r\n        case 'INPUT':\r\n        case 'TEXTAREA':\r\n          switch(comp.type) {\r\n            case 'checkbox':\r\n              value = attr = 'checked';\r\n              //IE6, IE7 下监听 propertychange 会挂?\r\n              if(ie) { ev += ' click'; }\r\n            break;\r\n            case 'radio':\r\n              attr = 'checked';\r\n              if(ie) { ev += ' click'; }\r\n              update = function(val) {\r\n                comp.checked = comp.value === val + '';\r\n              };\r\n              isSetDefaut = comp.checked;\r\n            break;\r\n            default:\r\n              if(!vm.$lazy){\r\n                if('oninput' in comp){\r\n                  ev += ' input';\r\n                }\r\n                //IE 下的 input 事件替代\r\n                if(ie) {\r\n                  ev += ' keyup propertychange cut';\r\n                }\r\n              }\r\n            break;\r\n          }\r\n        break;\r\n        case 'SELECT':\r\n          if(comp.multiple){\r\n            handler = function() {\r\n              var vals = [];\r\n              for(var i = 0, l = comp.options.length; i < l; i++){\r\n                if(comp.options[i].selected){ vals.push(comp.options[i].value) }\r\n              }\r\n              vm.$replace(keyPath, vals);\r\n            };\r\n            update = function(vals){\r\n              if(vals && vals.length){\r\n                for(var i = 0, l = comp.options.length; i < l; i++){\r\n                  comp.options[i].selected = vals.indexOf(comp.options[i].value) !== -1;\r\n                }\r\n              }\r\n            };\r\n          }else{\r\n            if(comp.hasAttribute && comp.hasAttribute('data-forcesync') || ('data-forcesync' in comp)) {\r\n              update = function(val) {\r\n                if(val === 0 && comp.type !== 'checkbox') { val = '0' }\r\n                var newVal = (val || '') + ''\r\n                  , val = comp[attr]\r\n                  ;\r\n                val && val.replace && (val = val.replace(crlf, '\\n'));\r\n                if(newVal !== val){\r\n                  for(var i = 0, l = comp.options.length; i < l; i++){\r\n                    if(comp.options[i].value === newVal + '') {\r\n                      comp.options[i].selected = true;\r\n                      comp[attr] = newVal;\r\n                      break;\r\n                    }\r\n                  }\r\n                  if(i == l) {\r\n                    handler()\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          isSetDefaut = isSetDefaut && !hasToken(comp[value]);\r\n        break;\r\n      }\r\n\r\n      ev.split(/\\s+/g).forEach(function(e){\r\n        events.removeEvent(comp, e, callHandler);\r\n        events.addEvent(comp, e, callHandler);\r\n      });\r\n      //用组件内部初始化值更新对应 model 的值\r\n      if(comp[value] && isSetDefaut){\r\n         handler();\r\n      }\r\n    }\r\n\r\n    this.update = update;\r\n  }\r\n};\r\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, sub: true\n, priority: -3 //事件应该在 b-model 之后监听. 防止普通事件调用过快\n, immediate: false // watch 和 immediate 同时为 false 时, 指令的 update 方法将不会自动被外部调用\n, link: function() {\n    var dir = this;\n    if(this.subType){\n      // be-on-click 等\n      eventBind.addEvent(this.el, this.subType, function() {\n        dir.vm.$get(dir.path)\n      })\n    }else{\n      //link 方法的调用在 watcher 检测 immediate 之前,\n      //所以可以在这里将 immediate 置为 true 以便自动调用 update 方法\n      this.immediate = true;\n      //this.update(this.vm.$get(this.path))\n    }\n  }\n, update: function (events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\n//要求 IE8+\n//请注意这里的 event.currentTarget 和 event.delegateTarget 同 jQuery 的刚好相反\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, priority: -2 // ref 应该在 component 之后\n, unLink: function() {\n    if(!utils.isArray(this.ref)) {\n      this.vm.$refs[this.path] = null;\n    }\n  }\n, link: function() {\n    var vm = this.vm\n    //在 `repeat` 元素上的 `ref` 会指向匿名 `viewmodel`\n    //ref 在  repeat 节点上时 vm 和 this.el.bee 都指向 repeat 所创建的匿名 vm\n    if(vm.__repeat && vm == this.el.bee){\n      if(!vm.$index) {\n        vm.$parent.$refs[this.path] = vm.__vmList;\n      }\n    }else{\n      vm.$refs[this.path] = this.el.bee || this.el;\n    }\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , scope = require('../scope')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, unLink: function(){\n    this.vmList.forEach(function(vm){\n      vm.$destroy()\n    })\n  }\n, link: function() {\n    var Bee = require('../bee')\n\n    this.trackId = this.el.getAttribute('track-by')\n    this.el.removeAttribute('track-by')\n\n    //创建 repeat 的匿名构造函数\n    //继承父构造函数的 `directives, components, filters` 属性\n    this.cstr = Bee.extend({}, this.vm.constructor)\n\n    //默认数据不应继承\n    this.cstr.defaults = {};\n\n    this.curArr = [];\n    this.vmList = [];//子 VM list\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.isRange = true\n    }else{\n      this.frag = this.el;\n    }\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, vmList = this.vmList;\n    var trackId = this.trackId;\n\n    //TODO 将数组修饰移至所有表达式中\n    var arrs = []; //repeat 表达式中出现的数组\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中相关变量\n      this.listPath = this.summary.paths.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items, trackId).forEach(function(item) {\n        var pos = indexByTrackId(item, curArr, trackId)\n        curArr.splice(pos, 1)\n\n        if(that.isRange) {\n          getNodesByIndex(that, pos).forEach(function(node) {\n            parentNode.removeChild(node)\n          })\n        }else{\n          parentNode.removeChild(vmList[pos].$el)\n        }\n        vmList[pos].$destroy()\n        vmList.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = indexByTrackId(item, items, trackId, i)\n          , oldPos = indexByTrackId(item, curArr, trackId, i)\n          , vm, el, anchor\n          ;\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.frag.cloneNode(true)\n\n          if(this.isRange) {\n            anchor = doc.createComment('')\n            el.childNodes.length ? el.insertBefore(anchor, el.childNodes[0]) : el.appendChild(anchor)\n          }\n\n          vm = new this.cstr(el, {\n            $data: item,\n            $index: pos,\n            $root: this.vm.$root,\n            $parent: this.vm,\n            $context: this.vm.$context,\n            _assignments: this.summary.assignments,\n            __repeat: true,\n            __anchor: anchor,\n            __vmList: this.vmList\n          });\n\n          parentNode.insertBefore(vm.$el, getAnchor(that, pos))\n          vmList.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n\n            parentNode.insertBefore(getElByIndex(that, oldPos), getAnchor(that, pos))\n            parentNode.insertBefore(getElByIndex(that, pos), getAnchor(that, oldPos + 1))\n\n            vmList[oldPos] = [vmList[pos], vmList[pos] = vmList[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            vmList[pos].$index = pos\n            vmList[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      vmList.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      this.listPath.forEach(function(localKey) {\n        var local = that.vm.$get(localKey)\n        utils.isArray(local) && arrs.push(local)\n      })\n      arrs.push(items)\n      arrs.forEach(function(local) {\n        var dirs = local.__dirs__;\n\n        if(!dirs){\n          //数组操作方法\n          utils.extend(local, {\n            $set: function(i, item) {\n              local.splice(i, 1, utils.isObject(item) ? utils.extend({}, local[i], item) : item)\n            },\n            $replace: function(i, item) {\n              local.splice(i, 1, item)\n            },\n            $remove: function(i) {\n              local.splice(i, 1);\n            }\n          });\n          arrayMethods.forEach(function(method) {\n            local[method] = utils.afterFn(local[method], function() {\n              dirs.forEach(function(dir) {\n                dir.listPath.forEach(function(path) {\n                  var reformed = scope.reformScope(dir.vm, path)\n                  reformed.vm.$update(reformed.path)\n                })\n              })\n            })\n          });\n          dirs = local.__dirs__  = [];\n        }\n        //一个数组多处使用\n        //TODO 移除时的情况\n        if(dirs.indexOf(that) === -1) {\n          dirs.push(that)\n        }\n      })\n\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\nfunction getAnchor(dir, index) {\n  var vm = dir.vmList[index]\n  return vm ? ( dir.isRange ? vm.__anchor : vm.$el ) : dir.anchors.end\n}\n\n//根据索引获取该次迭代中的所有元素\nfunction getNodesByIndex(dir, index) {\n  var vmList = dir.vmList\n    , anchor = vmList[index].__anchor\n    , next = vmList[index + 1]\n    ;\n  return [anchor].concat(dir.getNodes(anchor, next && next.__anchor))\n}\n\nfunction getElByIndex (dir, index) {\n  var frag = doc.createDocumentFragment()\n  if(dir.isRange) {\n    getNodesByIndex(dir, index).forEach(function(node) {\n      frag.appendChild(node)\n    })\n  }else{\n    frag.appendChild(dir.vmList[index].$el)\n  }\n  return frag\n}\n\nfunction arrDiff(arr1, arr2, trackId) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = indexByTrackId(el, arr2Copy, trackId)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n\nfunction indexByTrackId(item, list, trackId, startIndex) {\n  startIndex = startIndex || 0;\n  var index = list.indexOf(item, startIndex);\n  if(index === -1 && trackId){\n    for(var i = startIndex, item1; item1 = list[i]; i++) {\n      if(item[trackId] ===  item1[trackId] && !utils.isUndefined(item[trackId])){\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\n","\"use strict\";\n\n//样式指令\nvar utils = require('../utils')\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',\n  'top', 'left', 'right', 'bottom'\n]\n\n//对于 IE6, IE7 浏览器需要使用 `el.style.getAttribute('cssText')` 与 `el.style.setAttribute('cssText')` 来读写 style 字符属性\n\nmodule.exports = {\n  link: function() {\n    this.initStyle = this.el.style.getAttribute ? this.el.style.getAttribute('cssText') : this.el.getAttribute('style')\n  },\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = this.initStyle ? this.initStyle.replace(/;?$/, ';') : '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr += styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top. 驼峰转连接符式\n        dashKey = utils.camelToHyphen(key);\n\n        if (pixelAttrs.indexOf(dashKey) >= 0 && utils.isNumeric(val)) {\n          val += 'px';\n        }\n        if(!utils.isUndefined(val)){\n          styleStr += dashKey + ': ' + val + '; ';\n        }\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};\n","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\nmodule.exports = {\n  //将模板/元素/nodelist 包裹在 fragment 中\n  createContent: function createContent(tpl) {\n    var content = doc.createDocumentFragment();\n    var wraper;\n    var nodes = [];\n    if(utils.isObject(tpl)) {\n      if(tpl.nodeName && tpl.nodeType) {\n        //dom 元素\n        content.appendChild(tpl);\n      }else if('length' in tpl){\n        //nodelist\n        nodes = tpl;\n      }\n    }else {\n      wraper = doc.createElement('div')\n      //自定义标签在 IE8 下无效. 使用 component 指令替代\n      wraper.innerHTML = (tpl + '').trim();\n      nodes = wraper.childNodes;\n    }\n    while(nodes[0]) {\n      content.appendChild(nodes[0])\n    }\n    return content;\n  },\n\n  //获取元素属性\n  getAttrs: function(el) {\n    var attributes = el.attributes;\n    var attrs = {};\n\n    for(var i = attributes.length - 1; i >= 0; i--) {\n      //连接符转驼峰写法\n      attrs[utils.hyphenToCamel(attributes[i].nodeName)] = attributes[i].value;\n    }\n\n    return attrs;\n  },\n\n  hasAttr: function(el, attrName) {\n    return el.hasAttribute ? el.hasAttribute(attrName) : !utils.isUndefined(el[attrName]);\n  }\n};\n","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","/**\r\n * 表达式执行\r\n */\r\n\r\n\"use strict\";\r\n\r\nvar scope = require('./scope')\r\n\r\nvar operators = {\r\n  'unary': {\r\n    '+': function(v) { return +v; }\r\n  , '-': function(v) { return -v; }\r\n  , '!': function(v) { return !v; }\r\n\r\n  , '[': function(v){ return v; }\r\n  , '{': function(v){\r\n      var r = {};\r\n      for(var i = 0, l = v.length; i < l; i++) {\r\n        r[v[i][0]] = v[i][1];\r\n      }\r\n      return r;\r\n    }\r\n  , 'typeof': function(v){ return typeof v; }\r\n  , 'new': function(v){ return new v }\r\n  }\r\n\r\n, 'binary': {\r\n    '+': function(l, r) { return l + r; }\r\n  , '-': function(l, r) { return l - r; }\r\n  , '*': function(l, r) { return l * r; }\r\n  , '/': function(l, r) { return l / r; }\r\n  , '%': function(l, r) { return l % r; }\r\n  , '<': function(l, r) { return l < r; }\r\n  , '>': function(l, r) { return l > r; }\r\n  , '<=': function(l, r) { return l <= r; }\r\n  , '>=': function(l, r) { return l >= r; }\r\n  , '==': function(l, r) { return l == r; }\r\n  , '!=': function(l, r) { return l != r; }\r\n  , '===': function(l, r) { return l === r; }\r\n  , '!==': function(l, r) { return l !== r; }\r\n  , '&&': function(l, r) { return l && r; }\r\n  , '||': function(l, r) { return l || r; }\r\n  , ',': function(l, r) { return l, r; }\r\n\r\n  , '.': function(l, r) {\r\n      var prev = this.first;\r\n      //排除 a[b].c 这种情况\r\n      if(r && path && !(prev.arity === 'binary' && prev.value === '[')){\r\n        path = path + '.' + r;\r\n      }\r\n      return l[r];\r\n    }\r\n  , '[': function(l, r) {\r\n      if(typeof r !== 'undefined' && path){\r\n        path = path + '.' + r;\r\n      }\r\n      return l[r];\r\n    }\r\n\r\n    //TODO 模板中方法的 this 应该指向 root\r\n  , '(': function(l, r){ return l.apply(root, r) }\r\n    //filter. name|filter\r\n  , '|': function(l, r){ return callFilter(l, r, []) }\r\n  , 'new': function(l, r){\r\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, [null].concat(r)));\r\n    }\r\n\r\n  , 'in': function(l, r){\r\n      if(this.repeat) {\r\n        //repeat\r\n        return r;\r\n      }else{\r\n        return l in r;\r\n      }\r\n    }\r\n  , 'catchby': function(l, r) {\r\n      if(l['catch']) {\r\n        return l['catch'](r.bind(root))\r\n      }else{\r\n        summaryCall || console.error('catchby expect a promise')\r\n        return l;\r\n      }\r\n    }\r\n  }\r\n\r\n, 'ternary': {\r\n    '?': function(f, s, t) { return f ? s : t; }\r\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\r\n\r\n    //filter. name | filter : arg2 : arg3\r\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\r\n  }\r\n};\r\n\r\nfunction callFilter(arg, filter, args) {\r\n  if(arg && arg.then) {\r\n    return arg.then(function(data) {\r\n      return filter.apply(root, [data].concat(args))\r\n    });\r\n  }else{\r\n    return filter.apply(root, [arg].concat(args))\r\n  }\r\n}\r\n\r\nvar argName = ['first', 'second', 'third']\r\n  , context, summary, summaryCall\r\n  , path\r\n  , self\r\n  , root\r\n  ;\r\n\r\n//遍历 ast\r\nvar evaluate = function(tree) {\r\n  var arity = tree.arity\r\n    , value = tree.value\r\n    , args = []\r\n    , n = 0\r\n    , arg\r\n    , res\r\n    ;\r\n\r\n  //操作符最多只有三元\r\n  for(; n < 3; n++){\r\n    arg = tree[argName[n]];\r\n    if(arg){\r\n      if(Array.isArray(arg)){\r\n        args[n] = [];\r\n        for(var i = 0, l = arg.length; i < l; i++){\r\n          args[n].push(typeof arg[i].key === 'undefined' ?\r\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\r\n        }\r\n      }else{\r\n        args[n] = evaluate(arg);\r\n      }\r\n    }\r\n  }\r\n\r\n  if(arity !== 'literal') {\r\n    if(path && value !== '.' && value !== '[') {\r\n      summary.paths[path] = true;\r\n    }\r\n    if(arity === 'name') {\r\n      path = value;\r\n    }\r\n  }\r\n\r\n  switch(arity){\r\n    case 'unary':\r\n    case 'binary':\r\n    case 'ternary':\r\n      try{\r\n        res = getOperator(arity, value).apply(tree, args);\r\n      }catch(e){\r\n        !summaryCall && value == '(' && console.error(e);\r\n      }\r\n    break;\r\n    case 'literal':\r\n      res = value;\r\n    break;\r\n    case 'repeat':\r\n      summary.assignments[value] = true;\r\n    break;\r\n    case 'name':\r\n      res = getValue(value, context.locals);\r\n    break;\r\n    case 'filter':\r\n      summary.filters[value] = true;\r\n      res = context.filters[value];\r\n    break;\r\n    case 'this':\r\n      res = context.locals;\r\n    break;\r\n  }\r\n  return res;\r\n};\r\n\r\nfunction getOperator(arity, value){\r\n  return operators[arity][value] || function() { return; }\r\n}\r\n\r\nfunction reset(scope, that) {\r\n  summaryCall = true;\r\n  if(scope) {\r\n    root = scope.$root;\r\n    summaryCall = false;\r\n    context = {locals: scope || {}, filters: scope.constructor.filters || {}};\r\n  }else{\r\n    context = {filters: {}, locals: {}};\r\n  }\r\n  if(that){\r\n    self = that;\r\n  }\r\n\r\n  summary = {filters: {}, paths: {}, assignments: {}};\r\n  path = '';\r\n}\r\n\r\n//在作用域中查找值\r\nvar getValue = function(key, vm) {\r\n  var reformed = scope.reformScope(vm, key)\r\n  return reformed.vm[reformed.path]\r\n}\r\n\r\n//表达式求值\r\n//tree: parser 生成的 ast\r\n//scope 执行环境\r\nexports.eval = function(tree, scope, that) {\r\n  reset(scope || {}, that);\r\n\r\n  return evaluate(tree);\r\n};\r\n\r\n//表达式摘要\r\n//return: {filters:[], paths: [], assignments: []}\r\nexports.summary = function(tree) {\r\n  reset();\r\n\r\n  evaluate(tree);\r\n\r\n  if(path) {\r\n    summary.paths[path] = true;\r\n  }\r\n  for(var key in summary) {\r\n    summary[key] = Object.keys(summary[key]);\r\n  }\r\n  return summary;\r\n};\r\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  //infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 75, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 60, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(10));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n  infix('catchby', 10);\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var ass, curVm = cur;\n\n  while(cur) {\n    curVm = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { vm: curVm, path: paths.join('.') }\n};\n\n\nexports.reformScope = reformScope;\n","var tokenReg = /{{({(.+?)}|.+?)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n\n  tokenReg.lastIndex = 0;\n\n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n\n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n\n    tokens.push(token);\n\n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n\n    start = tokenReg.lastIndex;\n  }\n\n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n\n  tokens.textMap = textMap;\n\n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;\n","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @returns {Object} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false, isArray\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      isArray = utils.isArray(options)\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(name !== 'prototype' && !(isArray && !(name >= 0))){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\n//html 中属性名不区分大小写, 并且会全部转成小写.\n//这里会将连字符写法转成驼峰式\n//attr-name --> attrName\n//attr--name --> attr-name\nvar hyphensReg = /-(-?)([a-z])/ig;\nvar hyphenToCamel = function(attrName) {\n  return attrName.replace(hyphensReg, function(s, dash, char) {\n    return dash ? dash + char : char.toUpperCase();\n  })\n}\n\n//驼峰转连接符\nvar camelReg = /([A-Z])/g;\nvar camelToHyphen = function(key) {\n  return key.replace(camelReg, function (upperChar) {\n    return '-' + upperChar.toLowerCase();\n  })\n}\n\nvar utils = {\n  noop: function (){}\n, ie: (function(){\n    var undef,\n        v = 3,\n        div = doc.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while (\n      div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n      all[0]\n    );\n\n    return v > 4 ? v : undef;\n\n  }())\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n, isNumeric: function(val) {\n    return !utils.isArray(val) && val - parseFloat(val) + 1 >= 0;\n  }\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret, arguments)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret, arguments)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n, hyphenToCamel: hyphenToCamel\n, camelToHyphen: camelToHyphen\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nvar summaryCache = {};\n\n/**\n * 每个 directive 对应一个 watcher\n * @param {Bee} vm  directive 所处的环境\n * @param {Directive} dir\n */\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n  var summary = summaryCache[dir.path]\n\n  dir.watcher = this;\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n\n  if(!summary || summary._type !== dir.type){\n    summary = evaluate.summary(dir.ast);\n    summary._type = dir.type;\n    summaryCache[dir.path] = summary;\n  }\n  dir.summary = summary\n\n  //将该 watcher 与每一个属性建立引用关系\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    //将每个 key 对应的 watchers 都塞进来\n    this.watchers.push( watchers );\n  }\n\n  //是否在初始化时更新\n  dir.immediate !== false && this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers[i].unwatch()\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\n//获取某 keyPath 子路径的 watchers\nWatcher.getWatchers = function getWatchers(vm, keyPath) {\n  var _watchers = vm._watchers, watchers = [];\n  var point;\n  for(var key in _watchers) {\n    point = key.charAt(keyPath.length);\n    if(key.indexOf(keyPath) === 0 && (point === '.')) {\n      watchers = watchers.concat(_watchers[key])\n    }\n  }\n  return watchers\n}\n\nfunction watcherUpdate (val) {\n  var oldValue = this.val;\n  this.val = val;\n  this.dir.update(val, oldValue);\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行并更新 view\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    if(this._hide) {\n      this._needUpdate = true;\n      return;\n    }\n    newVal = this.dir.getValue(this.vm);\n\n    //简单过滤重复更新\n    if(newVal !== this.val || utils.isObject(newVal)){\n      if(newVal && newVal.then) {\n        //a promise\n        newVal.then(function(val) {\n          watcherUpdate.call(that, val);\n        });\n      }else{\n        watcherUpdate.call(this, newVal);\n      }\n    }\n  },\n  //移除\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}