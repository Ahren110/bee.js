{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/bee.js","bee.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/component.js","src/directives/content.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/event.js","src/parse.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","el","defaults","$data","$filters","$watchers","$el","$target","$content","$parent","$root","_watchers","_assignments","_relativePath","_isRendered","propKey","mergeProps","isObject","extend","domUtils","tplParse","appendChild","content","bee","walk","key","$watch","$replace","$init","update","keyPath","data","keyPaths","arguments","Object","keys","path","$update","nodeType","NODETYPE","FRAGMENT","childNodes","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","doc","createDocumentFragment","checkAttr","next","child","firstChild","nextSibling","dir","terminalPriority","terminal","cstr","constructor","dirs","directive","getDir","directives","components","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","parentNode","forEach","text","tn","createTextNode","insertBefore","bind","removeChild","create","escape","html","replace","isFunction","replaceChild","link","addWatcher","watch","Watcher","env","document","utils","Event","Class","Dir","Com","parseKeyPath","deepSet","deepGet","ATTR","$filter","mount","id","instance","getElementById","Comp","tagName","prototype","noop","$get","strict","paths","headPath","scope","__repeat","$set","val","add","hasKey","isBubble","attrs","watchers","join","pop","push","attr","isArray","callback","_originFn","$unwatch","unwatch","createElement","version","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./event.js","./token.js","./utils.js","./watcher.js",2,3,"protoProps","staticProps","hasOwnProperty","sup","apply","Fn","__super__",4,"tag","Component","statics","tags","component",5,"opts","Directive","type","attrName","dirName","proto","anchors","parent","setAttribute","attributes","slice","value","indexOf","origin","attrPostReg","test","conditional","anchor","start","createComment","end","sort","d0","d1","parse","evaluate","tearDown","getNodes","nodes","ast","message","console","error","getValue","eval","./eval.js","./parse.js",6,"setAttr","style","className","removeAttr","newAttrs","position","../utils.js",7,"vm","comp","comName","filter","curPath","comPath","warn",8,"contents","createNodes","../dom-utils",9,"innerHTML","frag","hide","state","show","template","src","repeat","model","on","../env.js","../token.js","./attr.js","./content.js","./model.js","./on.js","./repeat.js","./style.js",10,"events","teminal","ev","ant","isSetDefaut","crlf","newVal","handler","isInit","callHandler","propertyName","ie","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js",11,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",12,"arrDiff","arr1","arr2","arr2Copy","index","splice","arrayMethods","curArr","list","items","that","listPath","locals","item","pos","oldPos","cloneNode","assignments","$index","__bee__","$remove","method","afterFn",13,"camelReg","pixelAttrs","styles","dashKey","styleStr","upperChar","isNaN",14,"outerHTML","wraper","trim","./utils",15,"root","jsdom",16,"getOperator","arity","operators","reset","summaryCall","context","filters","summary","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",".","(","|","Date","Function","in","assignment","ternary","?","concat","argName","tree","arg","res","args","Array",17,"event","addEventListener","attachEvent","removeEventListener","detachEvent",18,"$on","ctx","_handlers","$one","one","$off","handlers","$trigger",19,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","expression","rbp","left","original_symbol","symbol","bp","constant","x","infix","first","second","infixr","Math","third","_source","_context",20,"tokenReg","lastIndex","exec",21,"bra","keyPathReg","copy","copyIsArray","clone","deep","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","obj","chain","arrLike","arr",22,"exParse","curVm","localKey","ass","NaN","STATE_READY","shift","watcherUpdate","STATE_CALLED","then"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\nvar env = require('./env.js')\n  , doc = env.document\n  , utils = require('./utils.js')\n  , Event = require('./event.js')\n  , Class = require('./class.js')\n  , Dir = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , token = require('./token.js')\n  , domUtils = require('./dom-utils.js')\n  ;\n\n\nvar isObject = utils.isObject\n  , isUndefined = utils.isUndefined\n  , isFunction = utils.isFunction\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , deepGet = utils.deepGet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\nvar mergeProps = {\n  $data: 1, $filter: 1, $watchers: 1\n};\n\n/**\n * 构造函数\n * ---\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n **/\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n    tpl = props.$tpl;\n  }\n  props = props || {};\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: this.$data || {}\n  , $filters: this.$filters || {}\n  , $watchers: this.$watchers || {}\n\n  , $el: this.$el || null\n  , $target: this.$target || null\n  , $tpl: this.$tpl || '<div></div>'\n  , $content: null\n  , $parent: null\n  , $root: this\n\n    //私有属性/方法\n  , _watchers: this._watchers || {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , _isRendered: false\n  };\n\n  var el;\n\n  //保持对传入属性的引用\n  for(var propKey in props) {\n    if((propKey in mergeProps) && isObject(props[propKey])) {\n      //mergeProps 中的属性会被默认值扩展\n      extend(defaults[propKey], props[propKey])\n      defaults[propKey] = extend(props[propKey], defaults[propKey]);\n    }else{\n      defaults[propKey] = props[propKey];\n    }\n  }\n\n  //合并所有到当前空间下\n  extend(this, defaults);\n  extend(this, this.$data);\n\n  tpl = tpl || this.$tpl;\n  el = domUtils.tplParse(tpl, this.$target, this.$content);\n\n  if(this.$el){\n    this.$el.appendChild(el.el);\n  }else{\n    this.$el = el.el;\n  }\n  this.$tpl = el.tpl;\n  this.$content = el.content;\n\n  this.$el.bee = this;\n\n  this.$content && walk.call(this.$root, this.$content);\n  walk.call(this, this.$el);\n\n  for(var key in this.$watchers) {\n    this.$watch(key, this.$watchers[key])\n  }\n\n  this.$replace(this.$data);\n  this._isRendered = true;\n  this.$init();\n}\n\n//静态属性\nextend(Bee, Class, Dir, Com, {\n  setPrefix: setPrefix\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var Comp = this.components[el.tagName.toLowerCase()];\n    var instance\n    if(Comp) {\n      instance = new Comp(extend({$target: el}, props))\n    }else{\n      instance = new Bee(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, Event, {\n  $init: utils.noop\n  /**\n   * 获取属性/方法\n   * @param {String} keyPath 路径\n   * @param {Boolean} [strict=false] 是否严格在自身中查找.\n   * @return {*}\n   */\n, $get: function(keyPath, strict) {\n    strict = strict === true;\n\n    var scope = this\n      , path = keyPath\n      , paths, headPath\n      ;\n\n    if(!strict) {\n      if(this.__repeat) {\n        paths = parseKeyPath(path);\n        headPath = paths[0]\n        if(scope._assignments && scope._assignments.length) {\n          if(headPath === this._assignments[0]) {\n            // 具名 repeat 不会直接查找自身作用域\n            scope = {};\n            scope[headPath] = this.$data;\n          }else if(headPath === '$index') {\n            scope = this;\n          }else{\n            return this.$parent.$get(keyPath, strict)\n          }\n        }else{\n          //匿名 repeat\n          return (headPath in this) ? this.$get(keyPath) : this.$parent.$get(keyPath, strict)\n        }\n      }\n    }\n\n    return deepGet(path, scope);\n  }\n\n  /**\n   * ### bee.$set\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(true, this.$data, key);\n        extend(true, this, key);\n      }else{\n        this.$data = key;\n      }\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      add = deepSet(key, val, {});\n      if(keys[0] === '$data') {\n        add = add.$data\n      }\n      extend(true, this.$data, add);\n      extend(true, this, add);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, hasKey = false;\n\n    if(isUndefined(key)){ return this; }\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        Object.keys(this.$data).forEach(function(key) {\n          delete this[key];\n        }.bind(this))\n        extend(this, key);\n      }\n      this.$data = key;\n    }else{\n      hasKey = true;\n      keys = parseKeyPath(key);\n      if(keys[0] !== '$data') {\n        deepSet(key, null, this.$data);\n        deepSet(key, val, this.$data);\n      }\n      deepSet(key, null, this);\n      deepSet(key, val, this);\n    }\n    hasKey ? update.call(this, key, val) : update.call(this, key);\n    return this;\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key, attrs;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key];\n\n      if (watchers) {\n        for (var i = 0, l = watchers.length; i < l; i++) {\n          watchers[i].update();\n        }\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n    attrs = this.$get(keyPath);\n\n    //同时更新子路径\n    if(isObject(attrs)) {\n      Object.keys(attrs).forEach(function(attr) {\n        this.$update(keyPath + '.' + attr, false);\n      }.bind(this))\n    }\n\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n\n    //更新数组长度\n    if(utils.isArray(attrs)) {\n      this.$update(keyPath + '.length', false);\n    }\n\n    return this;\n  }\n, $watch: function (keyPath, callback) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      addWatcher.call(this, new Dir('watcher', {path: keyPath, update: update}))\n    }\n  }\n  //TODO 支持 表达式 keyPath ?\n, $unwatch: function (keyPath, callback) {\n    Watcher.unwatch(this, keyPath, callback)\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n\n}\ndoc.createElement('template')\n//遍历 dom 树\nfunction walk(el) {\n\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      walk.call(this, el[i]);\n    }\n    return;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n        break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return;\n        break;\n    case NODETYPE.TEXT:\n      //文本节点\n      checkText.call(this, el);\n      return;\n        break;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  if(checkAttr.call(this, el)){\n    return;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    walk.call(this, el.content)\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    walk.call(this, child);\n    child = next;\n  }\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , prefix = cstr.prefix\n    , dirs = cstr.directive.getDir(el, cstr.directives, cstr.components, prefix)\n    , dir\n    , terminalPriority, terminal\n    , result = {};\n    ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    setBinding.call(this, dir);\n\n    if(dir.terminal) {\n      terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.dirs = dirs;\n\n  return terminal\n}\n\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        checkText.call(this, tn);\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      dir = create(t.escape ? dirs.text : dirs.html);\n      setBinding.call(this, extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n}\n\nfunction setBinding(dir) {\n  if(dir.replace) {\n    var el = dir.el;\n    if(isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else if(dir.replace){\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.link(this);\n\n  addWatcher.call(this, dir)\n}\n\nfunction addWatcher(dir) {\n  if(dir.path && dir.watch) {\n    return new Watcher(this, dir);\n  }\n}\n\nBee.version = '0.2.0';\n\nmodule.exports = Bee;\n",null,"var extend = require('./utils.js').extend;\n\nvar Class = {\n  /** \n   * 构造函数继承. \n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @return {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    \n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, protoProps);\n    extend(constructor, sup, staticProps, {__super__: sup.prototype});\n    \n    return constructor;\n  }\n};\n\nmodule.exports = Class;","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\nexports.tag = exports.component = tag;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nDirective.prototype = {\n  priority: 0//权重\n, link: utils.noop//初始化方法\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化\n\n, anchor: false\n, anchors: null\n\n  //当 anchor 为 true 时, 获取两个锚点之间的所有节点.\n, getNodes: function() {\n    var nodes = [], node = this.anchors.start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== this.anchors.end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }else{\n      return null;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    try{\n      this.ast = parse(this.path, this.type);\n    }catch(e) {\n      this.ast = {};\n      e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n      console.error(e);\n    }\n  }\n  //表达式求值\n, getValue: function(scope) {\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(utils.isUndefined(val) || val === null) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n//获取一个元素上所有用 HTML 属性定义的指令\nfunction getDir(el, directives, components, prefix) {\n  prefix = prefix || '';\n  directives = directives || {};\n\n  var attr, attrName, dirName, proto\n    , dirs = [], dir, anchors = {}\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(nodeName in components) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dirName in directives)) {\n      //指令\n      dir = create(directives[dirName]);\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName.indexOf(prefix) === 0 ? dirName : attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor && !anchors.start) {\n        //同一个元素上的 directive 共享同一对锚点\n        anchors.start = doc.createComment(dir.dirName + ' start');\n        parent.insertBefore(anchors.start, el);\n\n        anchors.end = doc.createComment(dir.dirName + ' end');\n        if(el.nextSibling) {\n          parent.insertBefore(anchors.end, el.nextSibling);\n        }else{\n          parent.appendChild(anchors.end);\n        }\n      }\n      dir.anchors = dir.anchor ? anchors : null;\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nDirective.directive = directive;\ndirective.getDir = getDir;\n\nmodule.exports = Directive;\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    if(this.dirName === this.type) {\n      for(var attr in val) {\n        setAttr(el, attr, val[attr]);\n        //if(val[attr]) {\n          delete this.attrs[attr];\n        //}\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeAttr(el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setAttr(el, this.dirName, val) : removeAttr(el, this.dirName);\n      }else{\n        this.textMap[this.position] = val && (val + '');\n        setAttr(el, this.dirName, this.textMap.join(''));\n      }\n    }\n  }\n};\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效. \n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction removeAttr(el, attr) {\n  el.removeAttribute(attr);\n  delete el[attr];\n}","//component as directive\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  priority: -10\n, watch: false\n, link: function(vm) {\n    var el = this.el;\n    var comName = this.path;\n    var components = vm.constructor.components;\n    var Comp, comp;\n    var dirs = [], $data = {};\n    var attrs;\n\n    if(comName in components) {\n      Comp = components[comName];\n\n      //TODO\n      if(Comp === vm.constructor) {\n        return;\n      }\n\n      dirs = this.dirs;\n\n      dirs = dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with' || dir.dirName === 'attr') {\n          //这里 attr 及 with 指令效果一样\n          comPath = '$data'\n          utils.extend($data, vm.$get(curPath))\n        }else{\n          comPath = dir.dirName;\n          $data[comPath] = vm.$get(curPath);\n        }\n\n        //监听父组件更新, 同步数据\n        vm.$watch(curPath, function (val) {\n          if(comp){\n            val = dir.textMap ? dir.textMap.join('') : val;\n            comp.$set(comPath, val);\n          }\n        })\n      });\n\n      attrs = el.attributes;\n      //普通属性\n      for(var i = attrs.length - 1; i >= 0; i--) {\n        $data[attrs[0].nodeName] = attrs[0].value;\n      }\n\n      comp = new Comp({\n        $target: el,\n        //$root: vm.$root,\n        $data: utils.extend({}, Comp.prototype.$data, $data)\n      });\n\n      //直接将component 作为根元素时, 同步跟新容器 .$el 引用\n      if(vm.$el === el) {\n        vm.$el = comp.$el;\n      }\n      return true;\n    }else{\n      console.warn('Component: ' + comName + ' not defined! Ignore');\n    }\n  }\n};\n","\"use strict\";\r\n\r\nvar domUtils = require('../dom-utils')\r\n\r\nmodule.exports = {\r\n  replace: true\r\n, anchor: true\r\n, update: function(content) {\r\n    var nodes = this.getNodes()\r\n    var parent = this.anchors.end.parentNode;\r\n    var contents = domUtils.createNodes(content)\r\n    nodes.forEach(function(node) {\r\n      parent.removeChild(node);\r\n    })\r\n    contents.forEach(function(node) {\r\n      parent.insertBefore(node, this.anchors.end)\r\n    }.bind(this))\r\n  }\r\n}","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , token = require('../token.js')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\n\ndirs['if'] = {\n  anchor: true\n, link: function() {\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n      this.hide();\n    }\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.show() }\n    }else{\n      if(this.state) { this.hide(); }\n    }\n    this.state = val;\n  }\n\n, show: function() {\n    var anchor = this.anchors.end;\n\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, hide: function() {\n    var nodes = this.getNodes();\n\n    if(nodes) {\n      for(var i = 0, l = nodes.length; i < l; i++) {\n        this.frag.appendChild(nodes[i]);\n      }\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\n//dirs.partial = require('./partial.js');\ndirs.repeat = require('./repeat.js');\ndirs.attr = require('./attr.js');\ndirs.model = require('./model.js');\ndirs.style = require('./style.js');\ndirs.on = require('./on.js');\ndirs.component = require('./component.js');\ndirs.content = require('./content.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  ;\n\nmodule.exports = {\n  teminal: true\n, priority: 1\n, link: function(vm) {\n    var keyPath = this.path;\n    var paths = utils.parseKeyPath(keyPath);\n    var headPath = paths[0];\n\n    if(!keyPath) { return false; }\n\n    //TODO 实现类似 .$get 的 .$set\n    if(vm.$parent) {\n      if (vm._assignments && vm._assignments[0] === headPath) {\n        keyPath = paths.slice(1).join('.') || '$data';\n      }else{\n        vm = vm.$parent;\n      }\n    }\n\n    var el = this.el\n      , ev = 'change'\n      , attr, value = attr = 'value'\n      , ant = vm\n      , isSetDefaut = utils.isUndefined(ant.$get(keyPath, false))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n      , callback = function(val) {\n          var newVal = (val || '') + ''\n            , val = el[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ el[attr] = newVal; }\n        }\n      , handler = function(isInit) {\n          var val = el[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          ant.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    switch(el.tagName) {\n      default:\n        value = attr = 'innerHTML';\n        //ev += ' blur';\n      case 'INPUT':\n      case 'TEXTAREA':\n        switch(el.type) {\n          case 'checkbox':\n            value = attr = 'checked';\n            //IE6, IE7 下监听 propertychange 会挂?\n            if(ie) { ev += ' click'; }\n          break;\n          case 'radio':\n            attr = 'checked';\n            if(ie) { ev += ' click'; }\n            callback = function(val) {\n              el.checked = el.value === val + '';\n            };\n            isSetDefaut = el.checked;\n          break;\n          default:\n            if(!ant.$lazy){\n              if('oninput' in el){\n                ev += ' input';\n              }\n              //IE 下的 input 事件替代\n              if(ie) {\n                ev += ' keyup propertychange cut';\n              }\n            }\n          break;\n        }\n      break;\n      case 'SELECT':\n        if(el.multiple){\n          handler = function(isInit) {\n            var vals = [];\n            for(var i = 0, l = el.options.length; i < l; i++){\n              if(el.options[i].selected){ vals.push(el.options[i].value) }\n            }\n            ant.$set(keyPath, vals);\n          };\n          callback = function(vals){\n            if(vals && vals.length){\n              for(var i = 0, l = el.options.length; i < l; i++){\n                el.options[i].selected = vals.indexOf(el.options[i].value) !== -1;\n              }\n            }\n          };\n        }\n        isSetDefaut = isSetDefaut && !hasToken(el[value]);\n      break;\n    }\n\n    this.update = callback;\n\n    ev.split(/\\s+/g).forEach(function(e){\n      events.removeEvent(el, e, callHandler);\n      events.addEvent(el, e, callHandler);\n    });\n\n    //根据表单元素的初始化默认值设置对应 model 的值\n    if(el[value] && isSetDefaut){\n       handler(true);\n    }\n\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\n//TODO 移除时的情况\nmodule.exports = {\n  link: function(vm) {\n    //this.events = {};\n    this.vm = vm;\n  }\n, update: function(events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector[0];\n      selector = selector[1];\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, link: function(vm) {\n    var cstr = this.cstr = vm.constructor;\n    this.vm = vm;\n\n    while(cstr.__super__){\n      cstr = this.cstr = cstr.__super__.constructor;\n    }\n\n\n    this.curArr = [];\n    this.list = [];//[{el:el, vm: vm}]\n\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, list = this.list;\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中\n      this.listPath = this.locals.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items).forEach(function(item) {\n        var pos = curArr.indexOf(item)\n        curArr.splice(pos, 1)\n        parentNode.removeChild(list[pos].el)\n        list.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = items.indexOf(item, i)\n          , oldPos = curArr.indexOf(item, i)\n          , vm, el\n          ;\n\n        //pos < 0 && (pos = items.lastIndexOf(item, i));\n        //oldPos < 0 && (oldPos = curArr.lastIndexOf(item, i));\n\n        //新增元素\n        if(oldPos < 0) {\n\n\n          el = this.el.cloneNode(true)\n\n          vm = new this.cstr(el, {\n            $data: item, _assignments: this.assignments, $index: pos,\n            $root: this.vm.$root, $parent: this.vm,\n            __repeat: true\n          });\n          parentNode.insertBefore(vm.$el, list[pos] && list[pos].el || this.anchors.end)\n          list.splice(pos, 0, {el: el, vm: vm});\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n            parentNode.insertBefore(list[oldPos].el, list[pos] && list[pos].el || that.anchor.end)\n            parentNode.insertBefore(list[pos].el, list[oldPos + 1] && list[oldPos + 1].el || that.anchor.end)\n            list[oldPos] = [list[pos], list[pos] = list[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            list[pos].vm.$index = pos\n            list[pos].vm.$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      this.list.forEach(function(item, i) {\n        item.vm.$index = i\n        item.el.$index = i\n        item.vm.$update('$index', false)\n      });\n\n      if(!items.__bee__){\n        //数组操作方法\n        utils.extend(items, {\n          $set: function(i, item) {\n            that.list[i].vm.$set(item);\n          },\n          $replace: function(i, item) {\n            that.list[i].vm.$replace(item)\n          },\n          $remove: function(i) {\n            items.splice(i, 1);\n            that.listPath.forEach(function(path) {\n              that.vm.$update(path)\n            });\n          }\n        });\n        arrayMethods.forEach(function(method) {\n          items[method] = utils.afterFn(items[method], function() {\n            that.listPath.forEach(function(path) {\n              that.vm.$update(path)\n            })\n          })\n        });\n        items.__bee__  = true;\n      }\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\n\nfunction arrDiff(arr1, arr2) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = arr2Copy.indexOf(el)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n","\"use strict\";\n\n//样式指令\n\nvar camelReg = /([A-Z])/g;\n\n//默认单位为 px 的属性\n//TODO 待完善\nvar pixelAttrs = [\n  'width','height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left'\n]\n\nmodule.exports = {\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = '';\n    var dashKey, val;\n\n    for(var key in styles) {\n      val = styles[key];\n\n      dashKey = key.replace(camelReg, function (upperChar) {\n        return '-' + upperChar.toLowerCase();\n      });\n\n      if(!isNaN(val) && pixelAttrs.indexOf(dashKey) >= 0) {\n        val += 'px';\n      }\n      styleStr += dashKey + ': ' + val + '; ';\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};","\"use strict\";\r\n\r\nvar doc = require('./env.js').document\r\nvar utils = require('./utils')\r\n\r\n//处理 $target,  $content, $tpl\r\n//target: el 替换的目标\r\nfunction tplParse(tpl, target, content) {\r\n  var el, contents\r\n    , frag = doc.createDocumentFragment();\r\n  if(utils.isObject(target) && target.childNodes) {\r\n    content = frag;\r\n    contents = createNodes(target.childNodes);\r\n  }else{\r\n    if(content) {\r\n      contents = createNodes(content)\r\n      content = frag;\r\n    }\r\n  }\r\n  if(contents) {\r\n    for (var i = 0, l = contents.length; i < l; i++) {\r\n      content.appendChild(contents[i]);\r\n    }\r\n  }\r\n\r\n  el = createNodes(tpl)[0];\r\n\r\n  if(utils.isObject(tpl)){\r\n    tpl = el.outerHTML;\r\n  }\r\n\r\n  if(target){\r\n    target.parentNode && target.parentNode.replaceChild(el, target);\r\n  }\r\n\r\n  return {el: el, tpl: tpl, content: content};\r\n}\r\n\r\n//将模板/元素/nodelist 同一转成 nodes array\r\nfunction createNodes(tpl) {\r\n  var wraper;\r\n  var nodes = [];\r\n  if(utils.isObject(tpl)) {\r\n    if(tpl.nodeName && tpl.nodeType) {\r\n      //dom 元素\r\n      nodes = [tpl];\r\n    }else if('length' in tpl){\r\n      //nodelist\r\n      nodes = tpl;\r\n    }\r\n  }else {\r\n    wraper = doc.createElement('div')\r\n    //自定义标签在 IE8 下无效. 使用 component 指令替代\r\n    wraper.innerHTML = (tpl + '').trim();\r\n    nodes = wraper.childNodes;\r\n  }\r\n  return utils.toArray(nodes);\r\n}\r\n\r\nmodule.exports = {\r\n  tplParse: tplParse,\r\n  createNodes: createNodes\r\n};","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","\"use strict\";\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n\n  , '.': function(l, r) {\n      if(r){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined'){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n  , '(': function(l, r){ return l.apply(context.locals, r) }\n  , '|': function(l, r){ return r.call(context.locals, l) }//filter. name|filter\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, r));\n    }\n\n  , 'in': function(l, r){\n      if(this.assignment) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n  //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return s.apply(context.locals, [f].concat(t)); }\n  }\n};\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'assignment':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      summary.locals[value] = true;\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;//TODO this 指向 vm 还是 dir?\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.$filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, locals: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function (key, scope) {\n  if(scope.$get) {\n    return scope.$get(key, false)\n  }else{\n    return scope[key]\n  }\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], locals:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","var utils = require('./utils.js');\n\nvar Event = {\n  //监听自定义事件.\n  $on: function(name, handler, context) {\n    var ctx = context || this\n      ;\n\n    ctx._handlers = ctx._handlers || {};\n    ctx._handlers[name] = ctx._handlers[name] || [];\n\n    ctx._handlers[name].push({handler: handler, context: context, ctx: ctx});\n    return this;\n  },\n  $one: function (name, handler, context) {\n    if(handler){\n      handler.one = true;\n    }\n    return this.on(name, handler, context);\n  },\n  //移除监听事件.\n  $off: function(name, handler, context) {\n    var ctx = context || this\n      , handlers = ctx._handlers\n      ;\n\n    if(name && handlers[name]){\n      if(utils.isFunction(handler)){\n        for(var i = handlers[name].length - 1; i >=0; i--) {\n          if(handlers[name][i].handler === handler){\n            handlers[name].splice(i, 1);\n          }\n        }\n      }else{\n        handlers[name] = [];\n      }\n    }\n    return this;\n  },\n  //触发自定义事件.\n  //该方法没有提供静态化的 context 参数. 如要静态化使用, 应该: `Event.trigger.call(context, name, data)`\n  $trigger: function(name, data) {\n    var args = [].slice.call(arguments, 1)\n      , handlers = this._handlers && this._handlers[name]\n      ;\n\n    if(handlers){\n      for(var i = 0, item; item = handlers[i]; i++) {\n        item.handler.apply(this, args);\n        if(item.handler.one) {\n          handlers.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nmodule.exports = Event;\n","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\tvar f; //The regexp flag.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// regexp\n\t\t}else if(c === '/' && false){\n\t\t\ti += 1;\n\t\t\tstr = '';\n\t\t\tf = '';\n\t\t\tfor(; ; ) {\n\t\t\t\tc = code.charAt(i);\n\n\t\t\t\t// Look for close slash\n\n\t\t\t\tif(c === '/') {\n\t\t\t\t\tfor(; ; ) {\n\t\t\t\t\t\tc = code.charAt(i + 1);\n\t\t\t\t\t\tif((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') {\n\t\t\t\t\t\t\tf += c;\n\t\t\t\t\t\t\ti += 1;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif(c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated regexp\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tc = '\\\\' + c;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('regexp', new RegExp(str, f)));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'assignment';\n\t\t\tthis.assignment = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 70, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 80, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(0);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(0));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n  //prefix('/', function() {\n  //  var a = [], n, v;\n  //  if(token.id !== '/') {\n  //    while(true) {\n  //      n = token;\n  //      advance();\n  //    }\n  //  }\n  //  advance('/');\n  //  this.first = a;\n  //  return this;\n  //})\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","var tokenReg = /{{({([^}\\n]+)}|[^}\\n]+)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n  \n  tokenReg.lastIndex = 0;\n  \n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n    \n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n    \n    tokens.push(token);\n    \n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n    \n    start = tokenReg.lastIndex;\n  }\n  \n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n  \n  tokens.textMap = textMap;\n  \n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @return {Function} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  if(utils.isFunction(arguments[length - 1])) {\n    length--;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(options.hasOwnProperty(name) && name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) ) {\n            try {\n              //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n              target[name] = copy;\n            }catch (e) {}\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\n\nvar utils = {\n  noop: function (){}\n, ie: !!doc.attachEvent\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, deepGet: function (keyStr, obj) {\n    var chain, cur = obj, key;\n    if(keyStr){\n      chain = parseKeyPath(keyStr);\n      for(var i = 0, l = chain.length; i < l; i++) {\n        key = chain[i];\n        if(cur){\n          cur = cur[key];\n        }else{\n          return;\n        }\n      }\n    }\n    return cur;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , parse = require('./parse.js').parse\n  ;\n\nvar extend = utils.extend;\n\n//表达式解析\nfunction exParse() {\n  var summary\n    , dir = this.dir\n    ;\n\n  dir.parse();\n\n  summary = evaluate.summary(dir.ast);\n  extend(dir, summary);\n  extend(this, summary);\n};\n\nfunction Watcher(vm, dir) {\n  var path, scope = vm, curVm, localKey, willUpdate, ass, paths;\n\n  this.dir = dir;\n  this.vm = vm;\n\n  this.val = NaN;\n\n  this.state = Watcher.STATE_READY;\n\n  exParse.call(this, dir.path);\n\n  for(var i = 0, l = this.paths.length; i < l; i++) {\n    paths = utils.parseKeyPath(this.paths[i]);\n    localKey = paths[0];\n\n    while(scope) {\n      curVm = scope;\n      ass = scope._assignments;\n\n      if(ass && ass.length) {\n        //具名 repeat\n        if(ass[0] === localKey) {\n          if(paths.length == 1) {\n            paths[0] = '$data';\n          }else{\n            paths.shift();\n          }\n          break;\n        }else if(localKey === '$index') {\n          break;\n        }\n      }else if(localKey in scope){\n        break;\n      }\n\n      //向上查找\n      scope = scope.$parent;\n    }\n    path = paths.join('.');\n    curVm._watchers[path] = curVm._watchers[path] || [];\n    curVm._watchers[path].push(this);\n  }\n\n  //没有变量 / 变量不在当前作用域的表达式立即求值\n  //for(var i = 0, l = this.locals.length; i < l; i++) {\n  //  if(utils.isObject(this.vm.$data) && (this.locals[i] in this.vm.$data)) {\n  //    break;\n  //  }\n  //}\n  //if(i == l) {\n  //  willUpdate = true;\n  //}\n\n  //if(willUpdate || this.vm._isRendered) {\n    this.update();\n  //}\n}\n\nWatcher.unwatch = function(vm, key, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(key))\n  }catch (e){\n\n  }\n  summary.paths.forEach(function(path) {\n\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers.splice(i, 1);\n      }\n    }\n  })\n}\n\n//TODO\nextend(Watcher, {\n  STATE_READY: 0\n, STATE_CALLED: 1\n}, Class);\n\nfunction watcherUpdate (val) {\n  try{\n    this.dir.update(val, this.val);\n    this.val = val;\n  }catch(e){\n    console.error(e);\n  }\n}\n\nextend(Watcher.prototype, {\n  //表达式执行\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    newVal = this.dir.getValue(this.vm);\n\n    if(newVal && newVal.then) {\n      //a promise\n      newVal.then(function(val) {\n        watcherUpdate.call(that, val);\n      });\n    }else{\n      watcherUpdate.call(this, newVal);\n    }\n\n    this.state = Watcher.STATE_CALLED;\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}