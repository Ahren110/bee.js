{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","bee.js","src/bee.js","src/check-binding.js","src/class.js","src/component.js","src/directive.js","src/directives/attr.js","src/directives/class.js","src/directives/component.js","src/directives/content.js","src/directives/if.js","src/directives/index.js","src/directives/model.js","src/directives/on.js","src/directives/ref.js","src/directives/repeat.js","src/directives/style.js","src/dom-utils.js","src/env.js","src/eval.js","src/event-bind.js","src/parse.js","src/scope.js","src/token.js","src/utils.js","src/watcher.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Bee","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,2,"setPrefix","newPrefix","prefix","tpl","props","isPlainObject","$tpl","defaults","$data","extend","constructor","$refs","$mixins","$el","$content","$isReplace","$parent","$root","$context","_watchers","_assignments","_relativePath","__links","_isRendered","mixins","concat","forEach","mixin","prop","propKey","hasOwnProperty","mergeProps","isObject","lifeCycles","utils","afterFn","bind","resolveTpl","$beforeInit","bee","checkBinding","walk","$afterInit","update","keyPath","data","keyPaths","$beforeUpdate","arguments","Object","keys","path","$update","$afterUpdate","tplEl","el","content","childNodes","domUtils","createContent","outerHTML","parentNode","replaceChild","appendChild","doc","document","Class","directive","Com","Watcher","dirs","scope","Dir","Directive","parseKeyPath","deepSet","create","noop","$beforeDestroy","$afterDestroy","sub","args","staticProps","directives","components","filters","json","obj","replacer","space","JSON","stringify","filter","filterName","mount","id","instance","Comp","dir","nodeType","getElementById","getDirs","type","getComponent","getAttrs","__mountcall","prototype","$get","expression","watch","parse","getValue","$set","key","val","reVm","$replace","last","reformed","reKey","hasKey","reformScope","vm","k","shift","join","isBubble","watchers","replace","pop","push","getWatchers","watcher","$watch","callback","immediate","_originFn","addWatcher","$unwatch","unwatch","$destroy","removeEl","wacher","removeChild","version","./check-binding.js","./class.js","./component.js","./directive.js","./directives","./dom-utils.js","./env.js","./scope","./utils.js","./watcher.js",3,"dirResult","NODETYPE","FRAGMENT","isUndefined","ELEMENT","COMMENT","TEXT","checkText","nodeName","toLowerCase","createDocumentFragment","checkAttr","terminal","next","child","firstChild","nextSibling","terminalPriority","cstr","result","priority","removeAttribute","setBinding","node","token","hasToken","nodeValue","tokens","parseToken","textMap","text","tn","createTextNode","insertBefore","partialReg","test","dirName","anchors","setAnchors","escape","html","isFunction","link","unBinding","ATTR","createElement","./directive","./token.js","./utils","./watcher",4,"protoProps","sup","apply","Fn","supRef","__super__",5,"tag","tagName","Component","statics","tags","componentName","Context","paths","CurCstr","comName","component",6,"opts","context","attr","attrName","proto","setAttribute","attributes","slice","value","indexOf","getDir","origin","attrPostReg","conditional","anchor","sort","d0","d1","subType","parent","start","createComment","end","evaluate","astCache","unLink","tearDown","getNodes","nodes","cache","_type","ast","message","console","error","forgive","eval","./dom-utils","./eval.js","./parse.js",7,"setProperty","isComponent","hyphenToCamel","setAttr","removeProperty","undef","style","className","__repeat","attrs","newAttrs","position","../utils.js",8,"initClass","classes","classStr",9,"getProperty","comp","curPath","comPath","_dir","camelToHyphen","../check-binding","../dom-utils",10,11,"frag","remove","state","add","walked","_hide","_needUpdate","../env",12,"innerHTML","template","src","repeat","model","on","ref","../env.js","./attr","./component","./content","./if","./model","./on","./ref","./repeat","./style",13,"events","teminal","ev","isSetDefaut","crlf","newVal","handler","callHandler","propertyName","ie","$valuekey","oldValue","checked","$lazy","multiple","vals","options","selected","split","removeEvent","addEvent","../event-bind.js","../token.js",14,"selector","cur","target","srcElement","els","toArray","querySelectorAll","delegateTarget","eventBind","eventType","name","../utils",15,"isArray","$index","__vmList",16,"getAnchor","index","vmList","isRange","__anchor","getNodesByIndex","getElByIndex","arrDiff","arr1","arr2","trackId","arr2Copy","indexByTrackId","splice","item","list","startIndex","item1","arrayMethods","getAttribute","curArr","items","that","arrs","listPath","summary","pos","oldPos","cloneNode","assignments","localKey","local","__dirs__","$remove","method","../bee","../scope",17,"pixelAttrs","initStyle","styles","dashKey","styleStr","isNumeric",18,"wraper","trim","hasAttr","hasAttribute",19,"root","jsdom",20,"callFilter","arg","then","getOperator","arity","operators","reset","summaryCall","locals","unary","+","v","-","!","[","{","typeof","new","binary","*","/","%","<",">","<=",">=","==","!=","===","!==","&&","||",",",".","prev","first","(","|","Date","Function","in","catchby","ternary","?","argName","tree","res","Array","warn",21,"event","addEventListener","attachEvent","removeEventListener","detachEvent",22,"source","F","msg","from","tokenize","suffix","c","q","str","make","to","charAt","isFinite","parseInt","substr","String","fromCharCode","make_parse","vars","token_nr","symbol_table","itself","find","nud","led","std","lbp","advance","rbp","left","original_symbol","symbol","bp","constant","x","infix","second","infixr","Math","third","_source","_context",23,"ass","curVm",24,"tokenReg","lastIndex","exec",25,"bra","keyPathReg","copy","copyIsArray","clone","deep","hyphensReg","dash","char","toUpperCase","camelReg","upperChar","div","all","getElementsByTagName","parseFloat","toString","beforeFn","oriFn","fn","breakCheck","ret","keyStr","chain","arrLike","arr",26,"summaryCache","NaN","exp","watcherUpdate","point"],"mappings":"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","file":"bee.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"\"use strict\";\n\nvar doc = require('./env.js').document\n  , utils = require('./utils.js')\n  , Class = require('./class.js')\n  , directive = require('./directive.js')\n  , Com = require('./component.js')\n  , Watcher = require('./watcher.js')\n\n  , dirs = require('./directives')\n  , domUtils = require('./dom-utils.js')\n  , checkBinding = require('./check-binding.js')\n  , scope = require('./scope')\n\n  , Dir = directive.Directive\n  ;\n\n\nvar isObject = utils.isObject\n  , isPlainObject = utils.isPlainObject\n  , parseKeyPath = utils.parseKeyPath\n  , deepSet = utils.deepSet\n  , extend = utils.extend\n  , create = utils.create\n  ;\n\n//设置 directive 前缀\nfunction setPrefix(newPrefix) {\n  if(newPrefix){\n    this.prefix = newPrefix;\n  }\n}\n\n//TODO 清理这个\nvar mergeProps = {\n  $data: 1\n};\n\nvar lifeCycles = {\n  $beforeInit: utils.noop\n, $afterInit: utils.noop\n, $beforeUpdate: utils.noop\n, $afterUpdate: utils.noop\n, $beforeDestroy: utils.noop\n, $afterDestroy: utils.noop\n};\n\n/**\n * 构造函数\n * @constructor\n * @param {String|Element} [tpl] 模板. 等同于 props.$tpl\n * @param {Object} [props] 属性/方法\n */\nfunction Bee(tpl, props) {\n  if(isPlainObject(tpl)) {\n    props = tpl;\n  }else{\n    props = props || {};\n    if(tpl) {\n      props.$tpl = tpl;\n    }\n  }\n\n  var defaults = {\n    //$ 开头的是共有属性/方法\n    $data: extend(true, {}, this.constructor.defaults)\n  , $refs: {}\n  , $mixins: []\n\n  , $el: this.$el || null\n  , $tpl: this.$tpl || '<div>{{> $content }}</div>'\n  , $content: this.$content || null\n\n  , $isReplace: false\n  , $parent: null\n  , $root: this\n  , $context: null\n\n    //私有属性/方法\n  , _watchers: {}\n  , _assignments: null//当前 vm 的别名\n  , _relativePath: []\n  , __links: []\n  , _isRendered: false\n  };\n\n  var mixins = [defaults].concat(this.$mixins).concat(props.$mixins).concat([props])\n\n  mixins.forEach(function(mixin) {\n    var prop;\n    for(var propKey in mixin) {\n      if(mixin.hasOwnProperty(propKey)) {\n        if ((propKey in mergeProps) && isObject(mixin[propKey])) {\n          //保持对传入属性的引用\n          //mergeProps 中的属性会被默认值扩展\n          prop = extend({}, this[propKey], mixin[propKey])\n          this[propKey] = extend(mixin[propKey], prop)\n        } else if (propKey in lifeCycles) {\n          this[propKey] = utils.afterFn(this[propKey], mixin[propKey])\n        } else {\n          this[propKey] = mixin[propKey];\n        }\n      }\n    }\n  }.bind(this))\n\n  extend(this, this.$data);\n\n  resolveTpl.call(this);\n\n  this.$beforeInit()\n  this.$el.bee = this;\n\n  //__links 包含了 $el 下所有的绑定引用\n  this.__links = this.__links.concat( checkBinding.walk.call(this, this.$el) );\n\n  this._isRendered = true;\n  this.$afterInit();\n}\n\n//静态属性\nextend(Bee, {extend: utils.afterFn(Class.extend, utils.noop, function(sub, args) {\n  var staticProps = args[1] || {};\n  //每个构造函数都有自己的 directives ,components, filters 引用, 继承自父构造函数\n  //默认情况下, 更新父构造函数 directive, components, filters 会同步更新子构造函数. 反之不行\n  sub.directives = extend(create(this.directives), staticProps.directives);\n  sub.components = extend(create(this.components), staticProps.components);\n  sub.filters = extend(create(this.filters), staticProps.filters);\n\n  sub.defaults = extend(true, {}, this.defaults, staticProps.defaults);\n}), utils: utils}, Dir, Com, {\n  setPrefix: setPrefix\n, directive: directive.directive\n, prefix: ''\n, doc: doc\n, directives: {}\n, components: {}\n, defaults: {}\n, filters: {\n    //build in filter\n    json: function(obj, replacer, space) {\n      return JSON.stringify(obj, replacer, space) }\n  }\n, filter: function(filterName, filter) {\n    this.filters[filterName] = filter;\n  }\n, mount: function(id, props) {\n    var el = id.nodeType ? id : doc.getElementById(id);\n    var instance;\n    var dirs = directive.getDirs(el, this);\n    var Comp, dir;\n\n    dir = dirs.filter(function(dir) {\n      return  dir.type === 'tag' || dir.type === 'component'\n    })[0];\n\n    if(dir) {\n      Comp = this.getComponent(dir.path)\n    }\n\n    props = props || {};\n    if(Comp) {\n      props.$data = extend(domUtils.getAttrs(el), props.$data)\n      instance = new Comp(extend({$el: el, $isReplace: true, __mountcall: true}, props))\n    }else{\n      instance = new this(el, props);\n    }\n    return instance\n  }\n});\n\n\nBee.setPrefix('b-');\n\n//内置 directive\nfor(var dir in dirs) {\n  Bee.directive(dir, dirs[dir]);\n}\n\n//实例方法\n//----\nextend(Bee.prototype, lifeCycles, {\n  /**\n   * 获取属性/方法\n   * @param {String} expression 路径/表达式\n   * @returns {*}\n   */\n  $get: function(expression) {\n    var dir = new Dir('$get', {\n      path: expression\n    , watch: false\n    });\n    dir.parse();\n    return dir.getValue(this, false)\n  }\n\n  /**\n   * 更新合并 `.data` 中的数据. 如果只有一个参数, 那么这个参数将并入 .$data\n   * @param {String} [key] 数据路径.\n   * @param {AnyType|Object} val 数据内容.\n   */\n, $set: function(key, val) {\n    var add, keys, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      if(isObject(key)) {\n        extend(this.$data, key);\n        extend(this, key);\n      }else{\n        this.$data = key;\n      }\n      update.call(reVm, key);\n    }else{\n      this.$replace(key, val);\n    }\n  }\n  /**\n   * 数据替换\n   */\n, $replace: function (key, val) {\n    var keys, last, hasKey = false;\n    var reformed, reKey, reVm = this;\n\n    if(arguments.length === 1){\n      val = key;\n      reKey = '$data';\n      keys = [reKey];\n    }else{\n      hasKey = true;\n      reformed = scope.reformScope(this, key)\n      reKey = reformed.path;\n      reVm = reformed.vm;\n      keys = parseKeyPath(reKey);\n    }\n\n    last = reVm.$get(reKey);\n\n    if (keys[0] === '$data') {\n      if(reKey === '$data') {\n        if(isObject(this.$data)) {\n          Object.keys(this.$data).forEach(function (k) {\n            delete this[k];\n          }.bind(this))\n        }\n        extend(reVm, val);\n      }else {\n        deepSet(keys.shift().join('.'), val, reVm)\n      }\n    } else {\n      deepSet(reKey, val, reVm.$data);\n    }\n    deepSet(reKey, val, reVm)\n\n    hasKey ? update.call(reVm, reKey, extend({}, last, val)) : update.call(reVm, extend({}, last, val));\n  }\n  /**\n   * 手动更新某部分数据\n   * @param {String} keyPath 指定更新数据的 keyPath\n   * @param {Boolean} [isBubble=true] 是否更新 keyPath 的父级\n   */\n, $update: function (keyPath, isBubble) {\n    isBubble = isBubble !== false;\n\n    var keys = parseKeyPath(keyPath.replace(/^\\$data\\./, '')), key;\n    var watchers;\n\n    while(key = keys.join('.')) {\n      watchers = this._watchers[key] || [];\n\n      for (var i = 0, l = watchers.length; i < l; i++) {\n        watchers[i] && watchers[i].update();\n      }\n\n      if(isBubble) {\n        keys.pop();\n        //最终都冒泡到 $data\n        if(!keys.length && key !== '$data'){\n          keys.push('$data');\n        }\n      }else{\n        break;\n      }\n    }\n\n    //同时更新子路径\n    Watcher.getWatchers(this, keyPath).forEach(function(watcher) {\n      watcher.update();\n    }.bind(this))\n\n    //数组冒泡的情况\n    if(isBubble) {\n      if(this.$parent) {\n        //同步更新父 vm 对应部分\n        this._relativePath.forEach(function (path) {\n          this.$parent.$update(path);\n        }.bind(this))\n      }\n    }\n  }\n, $watch: function (expression, callback, immediate) {\n    if(callback) {\n      var update = callback.bind(this);\n      update._originFn = callback;\n      return Watcher.addWatcher.call(this, new Dir('$watch', {path: expression, update: update, immediate : !!immediate}))\n    }\n  }\n, $unwatch: function (expression, callback) {\n    Watcher.unwatch(this, expression, callback)\n  }\n  //销毁当前实例\n  //removeEl 为 false 时不移除元素\n, $destroy: function(removeEl) {\n    this.$beforeDestroy()\n    this.__links.forEach(function(wacher) {\n      wacher.unwatch()\n    })\n    removeEl !== false && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)\n    this.__links = [];\n    this.$afterDestroy()\n  }\n});\n\nfunction update (keyPath, data) {\n  var keyPaths;\n  this.$beforeUpdate(this.$data)\n  if(arguments.length === 1) {\n    data = keyPath;\n  }else{\n    keyPaths = [keyPath];\n  }\n\n  if(!keyPaths) {\n    if(isObject(data)) {\n      keyPaths = Object.keys(data);\n    }else{\n      //.$data 有可能是基本类型数据\n      keyPaths = ['$data'];\n    }\n  }\n\n  for(var i = 0, path; path = keyPaths[i]; i++){\n    this.$update(path, true);\n  }\n  this.$afterUpdate(this.$data)\n}\n\n//处理 $el,  $content, $tpl\nfunction resolveTpl() {\n  var el = this.$el\n    , content = this.$content\n    , tpl = this.$tpl\n    , tplEl\n    ;\n\n  content = el && el.childNodes ? el.childNodes : content\n\n  if(el) {\n    //传入 $el 元素的子元素都存放到 $conten 中\n    content = el.childNodes;\n  }\n\n  if(content) {\n    //创建 $content documentFragment\n    this.$content = domUtils.createContent(content)\n  }\n\n  if(utils.isObject(tpl)){\n    //DOM 元素\n    tplEl = tpl;\n    tpl = tplEl.outerHTML;\n  }else{\n    //字符串\n    tplEl = domUtils.createContent(tpl).childNodes[0];\n  }\n\n  if(el) {\n    if(this.$isReplace) {\n      el.parentNode && el.parentNode.replaceChild(tplEl, el)\n      el = tplEl;\n    }else{\n      el.appendChild(tplEl)\n    }\n  }else{\n    el = tplEl;\n  }\n\n  this.$el = el;\n}\n\nBee.version = '0.5.3';\n\nmodule.exports = Bee;\n","\"use strict\";\n\nvar Watcher = require('./watcher')\n  , token = require('./token.js')\n  , utils = require('./utils')\n  , doc = require('./env.js').document\n  , directive = require('./directive')\n  ;\n\nvar NODETYPE = {\n    ELEMENT: 1\n  , ATTR: 2\n  , TEXT: 3\n  , COMMENT: 8\n  , FRAGMENT: 11\n};\n\ndoc.createElement('template');\n\n/**\n * 遍历 dom 树\n * @private\n * @param {Element|NodeList} el\n * @returns {Array} 节点下所有的绑定\n */\n\nfunction walk(el) {\n  var watchers = [], dirResult;\n  if(el.nodeType === NODETYPE.FRAGMENT) {\n    el = el.childNodes;\n  }\n\n  if(('length' in el) && utils.isUndefined(el.nodeType)){\n    //node list\n    //对于 nodelist 如果其中有包含 {{text}} 直接量的表达式, 文本节点会被分割, 其节点数量可能会动态增加\n    for(var i = 0; i < el.length; i++) {\n      watchers = watchers.concat( walk.call(this, el[i]) );\n    }\n    return watchers;\n  }\n\n  switch (el.nodeType) {\n    case NODETYPE.ELEMENT:\n      break;\n    case NODETYPE.COMMENT:\n      //注释节点\n      return watchers;\n      break;\n    case NODETYPE.TEXT:\n      //文本节点\n      watchers = watchers.concat( checkText.call(this, el) );\n      return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    //template shim\n    if(!el.content) {\n      el.content = doc.createDocumentFragment();\n      while(el.childNodes[0]) {\n        el.content.appendChild(el.childNodes[0])\n      }\n    }\n  }\n\n  dirResult = checkAttr.call(this, el);\n  watchers = watchers.concat(dirResult.watchers)\n  if(dirResult.terminal){\n    return watchers;\n  }\n\n  if(el.nodeName.toLowerCase() === 'template') {\n    watchers = watchers.concat( walk.call(this, el.content) )\n  }\n\n  for(var child = el.firstChild, next; child; ){\n    next = child.nextSibling;\n    watchers = watchers.concat( walk.call(this, child) );\n    child = next;\n  }\n\n  return watchers\n}\n\n//遍历属性\nfunction checkAttr(el) {\n  var cstr = this.constructor\n    , dirs = directive.getDirs(el, cstr, this.$context && this.$context.constructor)\n    , dir\n    , terminalPriority, watchers = []\n    , result = {};\n  ;\n\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    dir.dirs = dirs;\n\n    //对于 terminal 为 true 的 directive, 在解析完其相同权重的 directive 后中断遍历该元素\n    if(terminalPriority > dir.priority) {\n      break;\n    }\n\n    el.removeAttribute(dir.nodeName);\n\n    watchers = watchers.concat( setBinding.call(this, dir) );\n\n    if(dir.terminal) {\n      result.terminal = true;\n      terminalPriority = dir.priority;\n    }\n  }\n\n  result.watchers = watchers\n\n  return result\n}\n\nvar partialReg = /^>\\s*/;\n//处理文本节点中的绑定占位符({{...}})\nfunction checkText(node) {\n  var watchers = [];\n  if(token.hasToken(node.nodeValue)) {\n    var tokens = token.parseToken(node.nodeValue)\n      , textMap = tokens.textMap\n      , el = node.parentNode\n      , dirs = this.constructor.directives\n      , t, dir\n      ;\n\n    //将{{key}}分割成单独的文本节点\n    if(textMap.length > 1) {\n      textMap.forEach(function(text) {\n        var tn = doc.createTextNode(text);\n        el.insertBefore(tn, node);\n        watchers = watchers.concat(checkText.call(this, tn));\n      }.bind(this));\n      el.removeChild(node);\n    }else{\n      t = tokens[0];\n      //内置各占位符处理.\n      if(partialReg.test(t.path)) {\n        t.path = t.path.replace(partialReg, '');\n        dir = utils.create(dirs.content)\n        dir.dirName = dir.type\n        dir.anchors = directive.setAnchors(node, dir.type)\n      }else{\n        dir = utils.create(t.escape ? dirs.text : dirs.html)\n      }\n\n      watchers = setBinding.call(this, utils.extend(dir, t, {\n        el: node\n      }));\n    }\n  }\n  return watchers\n}\n\nfunction setBinding(dir) {\n  var watcher\n  if(dir.replace) {\n    var el = dir.el;\n    if(utils.isFunction(dir.replace)) {\n      dir.node = dir.replace();\n    }else{\n      dir.node = doc.createTextNode('');\n    }\n\n    dir.el = dir.el.parentNode;\n    dir.el.replaceChild(dir.node, el);\n  }\n\n  dir.vm = this;\n  dir.link();\n\n  watcher = Watcher.addWatcher.call(this, dir)\n  return watcher ? [watcher] : []\n}\n\nfunction unBinding(watchers) {\n  watchers.forEach(function(watcher) {\n    watcher.unwatch()\n  })\n}\n\nmodule.exports = {\n  walk: walk,\n  unBinding: unBinding\n};\n","var extend = require('./utils.js').extend;\n\nvar Class = {\n  /**\n   * 构造函数继承.\n   * 如: `var Car = Bee.extend({drive: function(){}}); new Car();`\n   * @param {Object} [protoProps] 子构造函数的扩展原型对象\n   * @param {Object} [staticProps] 子构造函数的扩展静态属性\n   * @returns {Function} 子构造函数\n   */\n  extend: function (protoProps, staticProps) {\n    protoProps = protoProps || {};\n    var constructor = protoProps.hasOwnProperty('constructor') ?\n          protoProps.constructor : function(){ return sup.apply(this, arguments); }\n    var sup = this;\n    var Fn = function() { this.constructor = constructor; };\n    var supRef = {__super__: sup.prototype};\n\n    Fn.prototype = sup.prototype;\n    constructor.prototype = new Fn();\n    extend(constructor.prototype, supRef, protoProps);\n    extend(constructor, sup, supRef, staticProps);\n\n    return constructor;\n  }\n};\n\nmodule.exports = Class;\n","\"use strict\";\n\nvar utils = require('./utils.js');\n\n/**\n * 注册组件\n * @param {String} tagName 自定义组件的标签名\n * @param {Function|props} Component 自定义组件的构造函数 / 构造函数参数\n * @return {Function} 自定义组件的构造函数\n */\nfunction tag(tagName, Component, statics) {\n  var tags = this.components = this.components || {};\n\n  this.doc.createElement(tagName);//for old IE\n\n  if(utils.isObject(Component)) {\n    Component = this.extend(Component, statics);\n  }\n  return tags[tagName] = Component;\n}\n\n/**\n * 查询某构造函数下的注册组件\n * @param {String} componentName 组件标签名\n * @param {Bee} Context 组件出现的环境组件构造函数\n */\nfunction getComponent(componentName, Context) {\n  var paths = utils.parseKeyPath(componentName);\n  var CurCstr = this;\n  paths.forEach(function(comName) {\n    CurCstr = CurCstr && CurCstr.components[comName];\n  });\n\n  if(Context && !CurCstr) {\n    CurCstr = Context.getComponent(componentName);\n  }\n  return CurCstr || null;\n}\n\nexports.tag = exports.component = tag;\nexports.getComponent = getComponent;\n","\"use strict\";\n\nvar utils = require('./utils.js')\n  , token = require('./token.js')\n  , doc = require('./env.js').document\n  , parse = require('./parse.js').parse\n  , evaluate = require('./eval.js')\n  , domUtils = require('./dom-utils')\n\n  , create = utils.create\n  ;\n\n/**\n * 为 Bee 构造函数添加指令 (directive). `Bee.directive`\n * @param {String} key directive 名称\n * @param {Object} [opts] directive 参数\n * @param {Number} opts.priority=0 directive 优先级. 同一个元素上的指令按照优先级顺序执行.\n * @param {Boolean} opts.terminal=false 执行该 directive 后, 是否终止后续 directive 执行.\n *   terminal 为真时, 与该 directive 优先级相同的 directive 仍会继续执行, 较低优先级的才会被忽略.\n * @param {Boolean} opts.anchor anchor 为 true 时, 会在指令节点前后各产生一个空白的标记节点. 分别对应 `anchors.start` 和 `anchors.end`\n */\nfunction directive(key, opts) {\n  var dirs = this.directives = this.directives || {};\n\n  return dirs[key] = new Directive(key, opts);\n}\n\nfunction Directive(key, opts) {\n  this.type = key;\n  utils.extend(this, opts);\n}\n\nvar astCache = {};\n\nDirective.prototype = {\n  priority: 0//权重\n, type: '' //指令类型\n, subType: '' //子类型. 比如 `b-on-click` 的 type 为 `on`, subType 为 `click`\n, sub: false //是否允许子类型指令\n, link: utils.noop//初始化方法\n, unLink: utils.noop//销毁回调\n, update: utils.noop//更新方法\n, tearDown: utils.noop\n, terminal: false//是否终止\n, replace: false//是否替换当前元素. 如果是, 将用一个空的文本节点替换当前元素\n, watch: true//是否监控 key 的变化. 如果为 false 的话, update 方法默认只会在初始化后调用一次\n, immediate: true //是否在 dir 初始化时立即执行 update 方法\n\n, anchor: false\n, anchors: null\n\n  //获取两个锚点之间的所有节点.\n, getNodes: function(start, end) {\n    start = start || this.anchors.start;\n    end = end || this.anchors.end;\n\n    var nodes = [], node = start.nextSibling;\n    if(this.anchor && node) {\n      while(node !== end){\n        nodes.push(node);\n        node = node.nextSibling;\n      }\n\n      return nodes;\n    }\n  }\n  //解析表达式\n, parse: function() {\n    var cache = astCache[this.path]\n    if(cache && cache._type === this.type){\n      this.ast = cache\n    }else {\n      if(this.type == 'attr' && this.escape === false) {\n        this.path = '{' + this.path + '}'\n      }\n      try {\n        this.ast = parse(this.path, this.type);\n        this.ast._type = this.type;\n        astCache[this.path] = this.ast;\n      } catch (e) {\n        this.ast = {};\n        e.message = 'SyntaxError in \"' + this.path + '\" | ' + e.message;\n        console.error(e);\n      }\n    }\n  }\n  //表达式求值\n  //forgive[true]: 是否将 undefined 及 null 转为空字符\n, getValue: function(scope, forgive) {\n    forgive = forgive !== false;\n    var val;\n\n    try{\n      val = evaluate.eval(this.ast, scope, this);\n    }catch(e){\n      val = '';\n      console.error(e);\n    }\n    if(forgive && (utils.isUndefined(val) || val === null)) {\n      val = '';\n    }\n    return val;\n  }\n};\n\nvar attrPostReg = /\\?$/;\n\n/**\n * 获取一个元素上所有用 HTML 属性定义的指令\n * @param  {Element} el   指令所在元素\n * @param  {Bee} cstr 组件构造函数\n * @param  {Bee} context 当前实例的上下文构造函数\n * @return {directeve[]}      `el` 上所有的指令\n */\nfunction getDirs(el, cstr, context){\n  var attr, attrName, dirName, proto\n    , dirs = [], dir\n    , parent = el.parentNode\n    , nodeName = el.nodeName.toLowerCase()\n    , directives = cstr.directives\n    , prefix = cstr.prefix\n    ;\n\n  //对于自定义标签, 将其转为 directive\n  if(cstr.getComponent(nodeName, context)) {\n    el.setAttribute(prefix + 'component', nodeName);\n  }\n\n  for(var i = el.attributes.length - 1; i >= 0; i--){\n    attr = el.attributes[i];\n    attrName = attr.nodeName;\n    dirName = attrName.slice(prefix.length);\n    proto = {el: el, node: attr, nodeName: attrName, path: attr.value};\n    dir = null;\n\n    if(attrName.indexOf(prefix) === 0 && (dir = getDir(dirName, directives))) {\n      //指令\n      dir.dirName = dirName//dir 名\n    }else if(token.hasToken(attr.value)) {\n      //属性表达式可能有多个表达式区\n      token.parseToken(attr.value).forEach(function(origin) {\n        origin.dirName = attrName ;\n        dirs.push(utils.extend(create(directives.attr), proto, origin))\n      });\n      //由于已知属性表达式不存在 anchor, 所以直接跳过下面的检测\n    }else if(attrPostReg.test(attrName)) {\n      //条件属性指令\n      dir = utils.extend(create(directives.attr), { dirName: attrName.replace(attrPostReg, ''), conditional: true });\n    }\n\n    if(dir) {\n      if(dir.anchor) {\n        dir.anchors = setAnchors(el, dir.dirName);\n      }\n      dirs.push(utils.extend(dir, proto));\n    }\n  }\n  dirs.sort(function(d0, d1) {\n    return d1.priority - d0.priority;\n  });\n  return dirs;\n}\n\nfunction getDir(dirName, dirs) {\n  var dir, subType;\n  for(var key in dirs) {\n    if(dirName === key){\n      dir = dirs[key]\n      break\n    }else if(dirName.indexOf(key + '-') === 0){\n      dir = dirs[key]\n      if(!dir.sub){\n        dir = null\n      }else{\n        subType = dirName.slice(key.length + 1)\n      }\n      break;\n    }\n  }\n  if(dir) {\n    dir = create(dir);\n    dir.subType = subType;\n  }\n  return dir;\n}\n\nfunction setAnchors(node, dirName) {\n  var parent = node.parentNode\n    , anchors = {}\n    ;\n\n    anchors.start = doc.createComment(dirName + ' start');\n    parent.insertBefore(anchors.start, node);\n\n    anchors.end = doc.createComment(dirName + ' end');\n    if(node.nextSibling) {\n      parent.insertBefore(anchors.end, node.nextSibling);\n    }else{\n      parent.appendChild(anchors.end);\n    }\n    return anchors\n}\n\nmodule.exports = {\n  Directive: Directive,\n  directive: directive,\n  getDirs: getDirs,\n  setAnchors: setAnchors\n};\n","\"use strict\";\n\n//属性指令\n\nvar utils = require('../utils.js');\n\nmodule.exports = {\n  link: function() {\n    if(this.dirName === this.type && this.nodeName !== this.dirName) {//attr binding\n      this.attrs = {};\n    }else {\n      //属性表达式默认将值置空, 防止表达式内变量不存在\n      this.update('')\n    }\n  }\n, update: function(val) {\n    var el = this.el;\n    var newAttrs = {};\n    var textMap = this.textMap\n\n    //b-attr\n    if(this.attrs) {\n      for(var attr in val) {\n        setProperty.call(this, el, attr, val[attr]);\n\n        delete this.attrs[attr];\n\n        newAttrs[attr] = true;\n      }\n\n      //移除不在上次记录中的属性\n      for(var attr in this.attrs) {\n        removeProperty.call(this, el, attr);\n      }\n      this.attrs = newAttrs;\n    }else{\n      if(this.conditional) {\n        val ? setProperty.call(this, el, this.dirName, val) : removeProperty.call(this, el, this.dirName);\n      }else{\n        textMap[this.position] = val;\n        setProperty.call(this, el, this.dirName, textMap.length > 1 ? textMap.join('') : textMap[0]);\n      }\n    }\n  }\n};\n\nfunction setProperty(el, key, val) {\n  if(isComponent(this)) {\n    el.bee.$set(utils.hyphenToCamel(key), val)\n  }else{\n    setAttr(el, key, val)\n  }\n}\n\nfunction removeProperty(el, key, undef) {\n  if(isComponent(this)) {\n    el.bee.$set(utils.hyphenToCamel(key), undef)\n  }else{\n    el.removeAttribute(key);\n  }\n}\n\n\n//IE 浏览器很多属性通过 `setAttribute` 设置后无效.\n//这些通过 `el[attr] = value` 设置的属性却能够通过 `removeAttribute` 清除.\nfunction setAttr(el, attr, val){\n  try{\n    if(((attr in el) || attr === 'class')){\n      if(attr === 'style' && el.style.setAttribute){\n        el.style.setAttribute('cssText', val);\n      }else if(attr === 'class'){\n        el.className = val;\n      }else{\n        el[attr] = typeof el[attr] === 'boolean' ? true : val;\n      }\n    }\n  }catch(e){}\n  //chrome setattribute with `{{}}` will throw an error\n  el.setAttribute(attr, val);\n}\n\nfunction isComponent (dir) {\n  var component = dir.el.bee;\n  return component && !component.__repeat && component != dir.vm;\n}\n","\"use strict\";\n\nmodule.exports = {\n  link: function() {\n    this.initClass = this.el.className || ''\n    this.keys = {};\n  },\n  update: function(classes) {\n    var classStr = this.initClass\n      , watcher = this.watcher\n      ;\n\n    if(typeof classes === 'string') {\n      if(classes) {\n        classStr += ' ' + classes;\n      }\n    }else{\n      for(var key in classes) {\n        if(!this.keys[key]) {\n          this.keys[key] = true;\n          //对象的键值默认不在监听范围之内, 这里手动监听\n          this.vm.$watch(key, function() {\n            watcher.update()\n          })\n        }\n        if(this.vm.$get(key)) {\n          classStr += ' ' + classes[key]\n        }\n      }\n    }\n    this.el.className = classStr;\n  }\n};\n","//component as directive\nvar utils = require('../utils.js');\nvar domUtils = require('../dom-utils')\nvar checkBinding = require('../check-binding')\n\nmodule.exports = {\n  priority: -1\n, watch: false\n, unLink: function() {\n    this.component && this.component.$destroy()\n  }\n, link: function() {\n    var vm = this.vm;\n    var el = this.el;\n    var cstr = vm.constructor;\n    var comp;\n    var dirs, $data = {};\n    var Comp = cstr.getComponent(this.path, vm.$context && vm.$context.constructor)\n    var statics = {};\n\n    if(Comp) {\n\n      //直接 `Bee.mount` 一个组件\n      if(Comp === cstr && vm.__mountcall || el.bee && el.bee === vm) {\n        return;\n      }\n\n      dirs = this.dirs.filter(function (dir) {\n        return dir.type == 'attr' || dir.type == 'with';\n      });\n\n      dirs.forEach(function (dir) {\n        var curPath, comPath;\n\n        curPath = dir.path;\n        if(dir.type === 'with') {\n          //comPath = '$data'\n          utils.extend(true, $data, vm.$get(curPath))\n\n          //监听父组件更新, 同步数据\n          //TODO 移到 b-with 指令中完成\n          vm.$watch(curPath, function (val) {\n            comp && comp.$set(utils.extend({}, vm.$get(curPath)));\n          })\n        }else{\n          comPath = utils.hyphenToCamel(dir.dirName);\n          $data[comPath] = getProperty(dir)\n          dir.el.removeAttribute(dir.dirName)\n        }\n      });\n\n      //组件内容属于其容器\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, el.childNodes));\n\n      statics = domUtils.getAttrs(el)\n\n      //排除指令属性\n      var _dir;\n      for(var attr in statics) {\n        _dir = utils.camelToHyphen(attr);\n        _dir = _dir.slice(vm.constructor.prefix.length)\n\n        if(_dir in vm.constructor.directives) {\n          delete statics[attr]\n        }\n      }\n\n      this.component = comp = new Comp({\n        $el: el,\n        $isReplace: true,\n        $context: vm,\n\n        $data: utils.extend(true, {}, $data, statics)\n      });\n      el.bee = comp;\n\n      return comp;\n    }else{\n      console.error('Component: ' + this.path + ' not defined!');\n    }\n  }\n};\n\n//如果组件的属性只有一个表达式, 则保持该表达式的数据类型\nfunction getProperty(dir) {\n  var textMap = dir.textMap, val\n  val = textMap && textMap.length > 1 ? textMap.join('') : textMap[0]\n\n  return utils.isPlainObject(val) ? utils.extend(true, {}, val) : val;\n}\n","\"use strict\";\n\nvar domUtils = require('../dom-utils')\n  , checkBinding = require('../check-binding')\n  ;\n\nmodule.exports = {\n  replace: true\n, anchor: true\n, link: function() {\n    this.watchers = [];\n  }\n, unLink: function() {\n    this.watchers.forEach(function(watcher) {\n      watcher.unwatch()\n    });\n  }\n, update: function(tpl) {\n    var nodes = this.getNodes()\n    var parent = this.anchors.end.parentNode\n\n    nodes.forEach(function(node) {\n      parent.removeChild(node);\n    });\n\n    this.unLink();\n\n    var content = domUtils.createContent(tpl)\n\n    this.watchers = checkBinding.walk.call(this.vm, content)\n    parent.insertBefore(content, this.anchors.end)\n  }\n}\n","\"use strict\";\n\nvar checkBinding = require('../check-binding')\n  , domUtils = require('../dom-utils')\n  , doc = require('../env').document\n\nmodule.exports = {\n  anchor: true\n, priority: 900\n, terminal: true\n, link: function() {\n    this.watchers = [];\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.el.parentNode.removeChild(this.el);\n    }else{\n      this.frag = doc.createDocumentFragment()\n    }\n    this.remove();\n  }\n, update: function(val) {\n    if(val) {\n      if(!this.state) { this.add() }\n    }else{\n      if(this.state) { this.remove(); }\n    }\n    this.state = val;\n  }\n\n, add: function() {\n    var anchor = this.anchors.end;\n    if(!this.walked) {\n      this.walked = true;\n      this.watchers = checkBinding.walk.call(this.vm, this.frag);\n    }\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = false;\n      if(watcher._needUpdate) {\n        watcher.update()\n        watcher._needUpdate = false;\n      }\n    })\n    anchor.parentNode && anchor.parentNode.insertBefore(this.frag, anchor);\n  }\n, remove: function() {\n    var nodes = this.getNodes();\n\n    for(var i = 0, l = nodes.length; i < l; i++) {\n      this.frag.appendChild(nodes[i]);\n    }\n\n    this.watchers.forEach(function(watcher) {\n      watcher._hide = true;\n    })\n  }\n};\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , checkBinding = require('../check-binding')\n  ;\n\nvar dirs = {};\n\n\ndirs.text = {\n  terminal: true\n, replace: true\n, update: function(val) {\n    this.node.nodeValue = utils.isUndefined(val) ? '' : val;\n  }\n};\n\n\ndirs.html = {\n  terminal: true\n, replace: true\n, link: function() {\n    this.nodes = [];\n  }\n, update: function(val) {\n    var el = doc.createElement('div');\n    el.innerHTML = utils.isUndefined(val) ? '' : val;\n\n    var node;\n    while(node = this.nodes.pop()) {\n      node.parentNode && node.parentNode.removeChild(node);\n    }\n\n    var nodes = el.childNodes;\n    while(node = nodes[0]) {\n      this.nodes.push(node);\n      this.el.insertBefore(node, this.node);\n    }\n  }\n};\n\ndirs.template = {\n  priority: 10000\n, watch: false\n, link: function() {\n    var nodes = this.el.childNodes\n      , frag = doc.createDocumentFragment()\n      ;\n\n    while(nodes[0]) {\n      frag.appendChild(nodes[0]);\n    }\n\n    this.el.content = frag;\n    //this.el.setAttribute(this.nodeName, '');\n  }\n};\n\n//图片用, 避免加载 URL 中带有大括号的原始模板内容\ndirs.src = {\n  update: function(val) {\n    this.el.src = val;\n  }\n};\n\ndirs['with'] = {};\n\ndirs['if'] = require('./if')\ndirs.repeat = require('./repeat');\ndirs.attr = require('./attr');\ndirs.model = require('./model');\ndirs.style = require('./style');\ndirs.on = require('./on');\ndirs.component = dirs.tag = require('./component');\ndirs.content = require('./content')\ndirs.ref = require('./ref')\ndirs['class'] = require('./class.js')\n\nmodule.exports = dirs;\n","\"use strict\";\n\nvar utils = require('../utils.js')\n  , hasToken = require('../token.js').hasToken\n  , events = require('../event-bind.js')\n  , checkBinding = require('../check-binding')\n  ;\n\n\nmodule.exports = {\n  teminal: true\n, priority: -2\n, link: function() {\n    var keyPath = this.path;\n    var vm = this.vm;\n\n    if(!keyPath) { return false; }\n\n    var comp = this.el\n      , ev = 'change'\n      , attr\n      , value = attr = 'value'\n      , isSetDefaut = utils.isUndefined(vm.$get(keyPath))//界面的初始值不会覆盖 model 的初始值\n      , crlf = /\\r\\n/g//IE 8 下 textarea 会自动将 \\n 换行符换成 \\r\\n. 需要将其替换回来\n\n        //更新组件\n      , update = function(val) {\n          if(val === 0 && comp.type !== 'checkbox') { val = '0' }\n          var newVal = (val || '') + ''\n            , val = comp[attr]\n            ;\n          val && val.replace && (val = val.replace(crlf, '\\n'));\n          if(newVal !== val){ comp[attr] = newVal; }\n        }\n\n        //更新 viewModel\n      , handler = function() {\n          var val = comp[value];\n\n          val.replace && (val = val.replace(crlf, '\\n'));\n          vm.$set(keyPath, val);\n        }\n      , callHandler = function(e) {\n          if(e && e.propertyName && e.propertyName !== attr) {\n            return;\n          }\n          handler.apply(this, arguments)\n        }\n      , ie = utils.ie\n      ;\n\n    if(comp.bee) {\n      // 组件的双向绑定\n      comp = comp.bee;\n      value = comp.$valuekey;\n      if(value) {\n        update = function(val) {\n          comp.$replace(value, val)\n        };\n        handler = function() {\n          vm.$replace(keyPath, comp.$get(value))\n        }\n        comp.$watch(value, function(val, oldValue) {\n          val !== oldValue && handler()\n        })\n        //将父组件的值同步到子组件\n        comp.$set(value, vm.$get(keyPath))\n      }\n    }else{\n      //优先解析内部内容\n      vm.__links = vm.__links.concat(checkBinding.walk.call(vm, comp.childNodes));\n\n      //HTML 原生控件的双向绑定\n      switch(comp.tagName) {\n        default:\n          value = attr = 'innerHTML';\n          //ev += ' blur';\n        case 'INPUT':\n        case 'TEXTAREA':\n          switch(comp.type) {\n            case 'checkbox':\n              value = attr = 'checked';\n              //IE6, IE7 下监听 propertychange 会挂?\n              if(ie) { ev += ' click'; }\n            break;\n            case 'radio':\n              attr = 'checked';\n              if(ie) { ev += ' click'; }\n              update = function(val) {\n                comp.checked = comp.value === val + '';\n              };\n              isSetDefaut = comp.checked;\n            break;\n            default:\n              if(!vm.$lazy){\n                if('oninput' in comp){\n                  ev += ' input';\n                }\n                //IE 下的 input 事件替代\n                if(ie) {\n                  ev += ' keyup propertychange cut';\n                }\n              }\n            break;\n          }\n        break;\n        case 'SELECT':\n          if(comp.multiple){\n            handler = function() {\n              var vals = [];\n              for(var i = 0, l = comp.options.length; i < l; i++){\n                if(comp.options[i].selected){ vals.push(comp.options[i].value) }\n              }\n              vm.$replace(keyPath, vals);\n            };\n            update = function(vals){\n              if(vals && vals.length){\n                for(var i = 0, l = comp.options.length; i < l; i++){\n                  comp.options[i].selected = vals.indexOf(comp.options[i].value) !== -1;\n                }\n              }\n            };\n          }\n          isSetDefaut = isSetDefaut && !hasToken(comp[value]);\n        break;\n      }\n\n      ev.split(/\\s+/g).forEach(function(e){\n        events.removeEvent(comp, e, callHandler);\n        events.addEvent(comp, e, callHandler);\n      });\n      //根据表单元素的初始化默认值设置对应 model 的值\n      if(comp[value] && isSetDefaut){\n         handler();\n      }\n    }\n\n    this.update = update;\n  }\n};\n","\"use strict\";\n\n//事件监听\n\nvar eventBind = require('../event-bind.js');\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, sub: true\n, priority: -3 //事件应该在 b-model 之后监听. 防止普通事件调用过快\n, immediate: false // watch 和 immediate 同时为 false 时, 指令的 update 方法将不会自动被外部调用\n, link: function() {\n    var dir = this;\n    if(this.subType){\n      // be-on-click 等\n      eventBind.addEvent(this.el, this.subType, function() {\n        dir.vm.$get(dir.path)\n      })\n    }else{\n      //link 方法的调用在 watcher 检测 immediate 之前,\n      //所以可以在这里将 immediate 置为 true 以便自动调用 update 方法\n      this.immediate = true;\n      //this.update(this.vm.$get(this.path))\n    }\n  }\n, update: function (events) {\n    var selector, eventType;\n    for(var name in events) {\n      selector = name.split(/\\s+/);\n      eventType = selector.shift();\n      selector = selector.join(' ');\n      eventBind.addEvent(this.el, eventType, callHandler(this, selector, events[name]));\n    }\n  }\n}\n\n//委托事件\n//要求 IE8+\n//请注意这里的 event.currentTarget 和 event.delegateTarget 同 jQuery 的刚好相反\nfunction callHandler (dir, selector, callback) {\n  return function(e) {\n    var cur = e.target || e.srcElement;\n    var els = selector ? utils.toArray(dir.el.querySelectorAll(selector)) : [cur];\n    do{\n      if(els.indexOf(cur) >= 0) {\n        e.delegateTarget = cur;//委托元素\n        return callback.call(dir.vm, e)\n      }\n    }while(cur = cur.parentNode)\n  }\n}\n","\nvar utils = require('../utils')\n\nmodule.exports = {\n  watch: false\n, priority: -2 // ref 应该在 component 之后\n, unLink: function() {\n    if(!utils.isArray(this.ref)) {\n      this.vm.$refs[this.path] = null;\n    }\n  }\n, link: function() {\n    var vm = this.vm\n    //在 `repeat` 元素上的 `ref` 会指向匿名 `viewmodel`\n    if(vm.__repeat){\n      if(!vm.$index) {\n        vm.$parent.$refs[this.path] = vm.__vmList;\n      }\n    }else{\n      vm.$refs[this.path] = this.el.bee || this.el;\n    }\n  }\n}\n","\"use strict\";\n\nvar doc = require('../env.js').document\n  , utils = require('../utils.js')\n  , scope = require('../scope')\n  ;\n\n//这些数组操作方法被重写成自动触发更新\nvar arrayMethods = ['splice', 'push', 'pop', 'shift', 'unshift', 'sort', 'reverse'];\n\nmodule.exports = {\n  priority: 1000\n, anchor: true\n, terminal: true\n, unLink: function(){\n    this.vmList.forEach(function(vm){\n      vm.$destroy()\n    })\n  }\n, link: function() {\n    var Bee = require('../bee')\n\n    this.trackId = this.el.getAttribute('track-by')\n    this.el.removeAttribute('track-by')\n\n    //创建 repeat 的匿名构造函数\n    //继承父构造函数的 `directives, components, filters` 属性\n    this.cstr = Bee.extend({}, this.vm.constructor)\n\n    //默认数据不应继承\n    this.cstr.defaults = {};\n\n    this.curArr = [];\n    this.vmList = [];//子 VM list\n\n    if(this.el.content) {\n      this.frag = this.el.content;\n      this.isRange = true\n    }else{\n      this.frag = this.el;\n    }\n    this.el.parentNode.removeChild(this.el);\n  }\n, update: function(items) {\n    var curArr = this.curArr;\n    var parentNode = this.anchors.end.parentNode;\n    var that = this, vmList = this.vmList;\n    var trackId = this.trackId;\n\n    //TODO 将数组修饰移至所有表达式中\n    var arrs = []; //repeat 表达式中出现的数组\n\n    if(utils.isArray(items)) {\n      // 在 repeat 指令表达式中相关变量\n      this.listPath = this.summary.paths.filter(function(path) {\n        return !utils.isFunction(that.vm.$get(path))\n      });\n\n      //删除元素\n      arrDiff(curArr, items, trackId).forEach(function(item) {\n        var pos = indexByTrackId(item, curArr, trackId)\n        curArr.splice(pos, 1)\n\n        if(that.isRange) {\n          getNodesByIndex(that, pos).forEach(function(node) {\n            parentNode.removeChild(node)\n          })\n        }else{\n          parentNode.removeChild(vmList[pos].$el)\n        }\n        vmList[pos].$destroy()\n        vmList.splice(pos, 1)\n      })\n\n      items.forEach(function(item, i) {\n        var pos = indexByTrackId(item, items, trackId, i)\n          , oldPos = indexByTrackId(item, curArr, trackId, i)\n          , vm, el, anchor\n          ;\n\n        //新增元素\n        if(oldPos < 0) {\n\n          el = this.frag.cloneNode(true)\n\n          if(this.isRange) {\n            anchor = doc.createComment('')\n            el.childNodes.length ? el.insertBefore(anchor, el.childNodes[0]) : el.appendChild(anchor)\n          }\n\n          vm = new this.cstr(el, {\n            $data: item,\n            $index: pos,\n            $root: this.vm.$root,\n            $parent: this.vm,\n            $context: this.vm.$context,\n            _assignments: this.summary.assignments,\n            __repeat: true,\n            __anchor: anchor,\n            __vmList: this.vmList\n          });\n\n          parentNode.insertBefore(vm.$el, getAnchor(that, pos))\n          vmList.splice(pos, 0, vm);\n          curArr.splice(pos, 0, item)\n\n          //延时赋值给 `_relativePath`, 避免出现死循环\n          //如果在上面实例化时当参数传入, 会冒泡到父级 vm 递归调用这里的 update 方法, 造成死循环.\n          vm._relativePath = this.listPath;\n        }else {\n\n          //调序\n          if (pos !== oldPos) {\n\n            parentNode.insertBefore(getElByIndex(that, oldPos), getAnchor(that, pos))\n            parentNode.insertBefore(getElByIndex(that, pos), getAnchor(that, oldPos + 1))\n\n            vmList[oldPos] = [vmList[pos], vmList[pos] = vmList[oldPos]][0]\n            curArr[oldPos] = [curArr[pos], curArr[pos] = curArr[oldPos]][0]\n            vmList[pos].$index = pos\n            vmList[pos].$update('$index')\n          }\n        }\n      }.bind(this))\n\n      //更新索引\n      vmList.forEach(function(vm, i) {\n        vm.$index = i\n        vm.$el.$index = i\n        vm.$update('$index', false)\n      });\n\n      this.listPath.forEach(function(localKey) {\n        var local = that.vm.$get(localKey)\n        utils.isArray(local) && arrs.push(local)\n      })\n      arrs.push(items)\n      arrs.forEach(function(local) {\n        var dirs = local.__dirs__;\n\n        if(!dirs){\n          //数组操作方法\n          utils.extend(local, {\n            $set: function(i, item) {\n              local.splice(i, 1, utils.isObject(item) ? utils.extend({}, local[i], item) : item)\n            },\n            $replace: function(i, item) {\n              local.splice(i, 1, item)\n            },\n            $remove: function(i) {\n              local.splice(i, 1);\n            }\n          });\n          arrayMethods.forEach(function(method) {\n            local[method] = utils.afterFn(local[method], function() {\n              dirs.forEach(function(dir) {\n                dir.listPath.forEach(function(path) {\n                  var reformed = scope.reformScope(dir.vm, path)\n                  reformed.vm.$update(reformed.path)\n                })\n              })\n            })\n          });\n          dirs = local.__dirs__  = [];\n        }\n        //一个数组多处使用\n        //TODO 移除时的情况\n        if(dirs.indexOf(that) === -1) {\n          dirs.push(that)\n        }\n      })\n\n    }else{\n      //TODO 普通对象的遍历\n    }\n  }\n};\n\nfunction getAnchor(dir, index) {\n  var vm = dir.vmList[index]\n  return vm ? ( dir.isRange ? vm.__anchor : vm.$el ) : dir.anchors.end\n}\n\n//根据索引获取该次迭代中的所有元素\nfunction getNodesByIndex(dir, index) {\n  var vmList = dir.vmList\n    , anchor = vmList[index].__anchor\n    , next = vmList[index + 1]\n    ;\n  return [anchor].concat(dir.getNodes(anchor, next && next.__anchor))\n}\n\nfunction getElByIndex (dir, index) {\n  var frag = doc.createDocumentFragment()\n  if(dir.isRange) {\n    getNodesByIndex(dir, index).forEach(function(node) {\n      frag.appendChild(node)\n    })\n  }else{\n    frag.appendChild(dir.vmList[index].$el)\n  }\n  return frag\n}\n\nfunction arrDiff(arr1, arr2, trackId) {\n  var arr2Copy = arr2.slice();\n  return arr1.filter(function(el) {\n    var result, index = indexByTrackId(el, arr2Copy, trackId)\n    if(index < 0) {\n      result = true\n    }else{\n      arr2Copy.splice(index, 1)\n    }\n    return result\n  })\n}\n\nfunction indexByTrackId(item, list, trackId, startIndex) {\n  startIndex = startIndex || 0;\n  var index = list.indexOf(item, startIndex);\n  if(index === -1 && trackId){\n    for(var i = startIndex, item1; item1 = list[i]; i++) {\n      if(item[trackId] ===  item1[trackId] && !utils.isUndefined(item[trackId])){\n        index = i;\n        break;\n      }\n    }\n  }\n  return index;\n}\n","\"use strict\";\n\n//样式指令\nvar utils = require('../utils')\n\n//默认单位为 px 的属性\nvar pixelAttrs = [\n  'width','height','min-width', 'min-height', 'max-width', 'max-height',\n  'margin', 'margin-top', 'margin-right', 'margin-left', 'margin-bottom',\n  'padding', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left',\n  'top', 'left', 'right', 'bottom'\n]\n\n//对于 IE6, IE7 浏览器需要使用 `el.style.getAttribute('cssText')` 与 `el.style.setAttribute('cssText')` 来读写 style 字符属性\n\nmodule.exports = {\n  link: function() {\n    this.initStyle = this.el.style.getAttribute ? this.el.style.getAttribute('cssText') : this.el.getAttribute('style')\n  },\n  update: function(styles) {\n    var el = this.el;\n    var styleStr = this.initStyle ? this.initStyle.replace(/;?$/, ';') : '';\n    var dashKey, val;\n\n    if(typeof styles === 'string') {\n      styleStr += styles;\n    }else {\n      for (var key in styles) {\n        val = styles[key];\n\n        //marginTop -> margin-top. 驼峰转连接符式\n        dashKey = utils.camelToHyphen(key);\n\n        if (pixelAttrs.indexOf(dashKey) >= 0 && utils.isNumeric(val)) {\n          val += 'px';\n        }\n        if(!utils.isUndefined(val)){\n          styleStr += dashKey + ': ' + val + '; ';\n        }\n      }\n    }\n    if(el.style.setAttribute){\n      //老 IE\n      el.style.setAttribute('cssText', styleStr);\n    }else{\n      el.setAttribute('style', styleStr);\n    }\n  }\n};\n","\"use strict\";\n\nvar doc = require('./env.js').document\nvar utils = require('./utils')\n\nmodule.exports = {\n  //将模板/元素/nodelist 包裹在 fragment 中\n  createContent: function createContent(tpl) {\n    var content = doc.createDocumentFragment();\n    var wraper;\n    var nodes = [];\n    if(utils.isObject(tpl)) {\n      if(tpl.nodeName && tpl.nodeType) {\n        //dom 元素\n        content.appendChild(tpl);\n      }else if('length' in tpl){\n        //nodelist\n        nodes = tpl;\n      }\n    }else {\n      wraper = doc.createElement('div')\n      //自定义标签在 IE8 下无效. 使用 component 指令替代\n      wraper.innerHTML = (tpl + '').trim();\n      nodes = wraper.childNodes;\n    }\n    while(nodes[0]) {\n      content.appendChild(nodes[0])\n    }\n    return content;\n  },\n\n  //获取元素属性\n  getAttrs: function(el) {\n    var attributes = el.attributes;\n    var attrs = {};\n\n    for(var i = attributes.length - 1; i >= 0; i--) {\n      //连接符转驼峰写法\n      attrs[utils.hyphenToCamel(attributes[i].nodeName)] = attributes[i].value;\n    }\n\n    return attrs;\n  },\n\n  hasAttr: function(el, attrName) {\n    return el.hasAttribute ? el.hasAttribute(attrName) : !utils.isUndefined(el[attrName]);\n  }\n};\n","(function(root){\n  \"use strict\";\n\n  exports.root = root;\n  exports.document = root.document || require('jsdom').jsdom();\n\n})((function() {return this})());\n","/**\n * 表达式执行\n */\n\n\"use strict\";\n\nvar scope = require('./scope')\n\nvar operators = {\n  'unary': {\n    '+': function(v) { return +v; }\n  , '-': function(v) { return -v; }\n  , '!': function(v) { return !v; }\n\n  , '[': function(v){ return v; }\n  , '{': function(v){\n      var r = {};\n      for(var i = 0, l = v.length; i < l; i++) {\n        r[v[i][0]] = v[i][1];\n      }\n      return r;\n    }\n  , 'typeof': function(v){ return typeof v; }\n  , 'new': function(v){ return new v }\n  }\n\n, 'binary': {\n    '+': function(l, r) { return l + r; }\n  , '-': function(l, r) { return l - r; }\n  , '*': function(l, r) { return l * r; }\n  , '/': function(l, r) { return l / r; }\n  , '%': function(l, r) { return l % r; }\n  , '<': function(l, r) { return l < r; }\n  , '>': function(l, r) { return l > r; }\n  , '<=': function(l, r) { return l <= r; }\n  , '>=': function(l, r) { return l >= r; }\n  , '==': function(l, r) { return l == r; }\n  , '!=': function(l, r) { return l != r; }\n  , '===': function(l, r) { return l === r; }\n  , '!==': function(l, r) { return l !== r; }\n  , '&&': function(l, r) { return l && r; }\n  , '||': function(l, r) { return l || r; }\n  , ',': function(l, r) { return l, r; }\n\n  , '.': function(l, r) {\n      var prev = this.first;\n      //排除 a[b].c 这种情况\n      if(r && path && !(prev.arity === 'binary' && prev.value === '[')){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n  , '[': function(l, r) {\n      if(typeof r !== 'undefined' && path){\n        path = path + '.' + r;\n      }\n      return l[r];\n    }\n\n    //TODO 模板中方法的 this 应该指向 root\n  , '(': function(l, r){ return l.apply(root, r) }\n    //filter. name|filter\n  , '|': function(l, r){ return callFilter(l, r, []) }\n  , 'new': function(l, r){\n      return l === Date ? new Function('return new Date(' + r.join(', ') + ')')() : new (Function.prototype.bind.apply(l, [null].concat(r)));\n    }\n\n  , 'in': function(l, r){\n      if(this.repeat) {\n        //repeat\n        return r;\n      }else{\n        return l in r;\n      }\n    }\n  , 'catchby': function(l, r) {\n      if(l['catch']) {\n        return l['catch'](r.bind(root))\n      }else{\n        summaryCall || console.error('catchby expect a promise')\n        return l;\n      }\n    }\n  }\n\n, 'ternary': {\n    '?': function(f, s, t) { return f ? s : t; }\n  , '(': function(f, s, t) { return f[s].apply(f, t) }\n\n    //filter. name | filter : arg2 : arg3\n  , '|': function(f, s, t){ return callFilter(f, s, t) }\n  }\n};\n\nfunction callFilter(arg, filter, args) {\n  if(arg && arg.then) {\n    return arg.then(function(data) {\n      return filter.apply(root, [data].concat(args))\n    });\n  }else{\n    return filter.apply(root, [arg].concat(args))\n  }\n}\n\nvar argName = ['first', 'second', 'third']\n  , context, summary, summaryCall\n  , path\n  , self\n  , root\n  ;\n\n//遍历 ast\nvar evaluate = function(tree) {\n  var arity = tree.arity\n    , value = tree.value\n    , args = []\n    , n = 0\n    , arg\n    , res\n    ;\n\n  //操作符最多只有三元\n  for(; n < 3; n++){\n    arg = tree[argName[n]];\n    if(arg){\n      if(Array.isArray(arg)){\n        args[n] = [];\n        for(var i = 0, l = arg.length; i < l; i++){\n          args[n].push(typeof arg[i].key === 'undefined' ?\n            evaluate(arg[i]) : [arg[i].key, evaluate(arg[i])]);\n        }\n      }else{\n        args[n] = evaluate(arg);\n      }\n    }\n  }\n\n  if(arity !== 'literal') {\n    if(path && value !== '.' && value !== '[') {\n      summary.paths[path] = true;\n    }\n    if(arity === 'name') {\n      path = value;\n    }\n  }\n\n  switch(arity){\n    case 'unary':\n    case 'binary':\n    case 'ternary':\n      try{\n        res = getOperator(arity, value).apply(tree, args);\n      }catch(e){\n        summaryCall || console.warn(e);\n      }\n    break;\n    case 'literal':\n      res = value;\n    break;\n    case 'repeat':\n      summary.assignments[value] = true;\n    break;\n    case 'name':\n      res = getValue(value, context.locals);\n    break;\n    case 'filter':\n      summary.filters[value] = true;\n      res = context.filters[value];\n    break;\n    case 'this':\n      res = context.locals;\n    break;\n  }\n  return res;\n};\n\nfunction getOperator(arity, value){\n  return operators[arity][value] || function() { return; }\n}\n\nfunction reset(scope, that) {\n  summaryCall = true;\n  if(scope) {\n    root = scope.$root;\n    summaryCall = false;\n    context = {locals: scope || {}, filters: scope.constructor.filters || {}};\n  }else{\n    context = {filters: {}, locals: {}};\n  }\n  if(that){\n    self = that;\n  }\n\n  summary = {filters: {}, paths: {}, assignments: {}};\n  path = '';\n}\n\n//在作用域中查找值\nvar getValue = function(key, vm) {\n  var reformed = scope.reformScope(vm, key)\n  return reformed.vm[reformed.path]\n}\n\n//表达式求值\n//tree: parser 生成的 ast\n//scope 执行环境\nexports.eval = function(tree, scope, that) {\n  reset(scope || {}, that);\n\n  return evaluate(tree);\n};\n\n//表达式摘要\n//return: {filters:[], paths: [], assignments: []}\nexports.summary = function(tree) {\n  reset();\n\n  evaluate(tree);\n\n  if(path) {\n    summary.paths[path] = true;\n  }\n  for(var key in summary) {\n    summary[key] = Object.keys(summary[key]);\n  }\n  return summary;\n};\n","\"use strict\";\n\nexports.addEvent = function addEvent(el, event, handler) {\n  if(el.addEventListener) {\n    el.addEventListener(event, handler, false);\n  }else{\n    el.attachEvent('on' + event, handler);\n  }\n}\n\nexports.removeEvent = function removeEvent(el, event, handler) {\n  if(el.removeEventListener) {\n    el.removeEventListener(event, handler);\n  }else{\n    el.detachEvent('on' + event, handler);\n  }\n}","\"use strict\";\n//Javascript expression parser modified form Crockford's TDOP parser\nvar create = Object.create || function (o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n};\n\nvar source;\n\nvar error = function (message, t) {\n\tt = t || this;\n  var msg = message += \" But found '\" + t.value + \"'\" + (t.from ? \" at \" + t.from : \"\") + \" in '\" + source + \"'\";\n  var e = new Error(msg);\n\te.name = t.name = \"SyntaxError\";\n\tt.message = message;\n  throw e;\n};\n\nvar tokenize = function (code, prefix, suffix) {\n\tvar c; // The current character.\n\tvar from; // The index of the start of the token.\n\tvar i = 0; // The index of the current character.\n\tvar length = code.length;\n\tvar n; // The number value.\n\tvar q; // The quote character.\n\tvar str; // The string value.\n\n\tvar result = []; // An array to hold the results.\n\n\t// Make a token object.\n\tvar make = function (type, value) {\n\t\treturn {\n\t\t\ttype : type,\n\t\t\tvalue : value,\n\t\t\tfrom : from,\n\t\t\tto : i\n\t\t};\n\t};\n\n\t// Begin tokenization. If the source string is empty, return nothing.\n\tif (!code) {\n\t\treturn;\n\t}\n\n\t// Loop through code text, one character at a time.\n\tc = code.charAt(i);\n\twhile (c) {\n\t\tfrom = i;\n\n\t\tif (c <= ' ') { // Ignore whitespace.\n\t\t\ti += 1;\n\t\t\tc = code.charAt(i);\n\t\t} else if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '$' || c === '_') { // name.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||\n\t\t\t\t\t(c >= '0' && c <= '9') || c === '_') {\n\t\t\t\t\tstr += c;\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.push(make('name', str));\n\t\t} else if (c >= '0' && c <= '9') {\n\t\t\t// number.\n\n\t\t\t// A number cannot start with a decimal point. It must start with a digit,\n\t\t\t// possibly '0'.\n\t\t\tstr = c;\n\t\t\ti += 1;\n\n\t\t\t// Look for more digits.\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t}\n\n\t\t\t// Look for a decimal fraction part.\n\t\t\tif (c === '.') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tfor (; ; ) {\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for an exponent part.\n\t\t\tif (c === 'e' || c === 'E') {\n\t\t\t\ti += 1;\n\t\t\t\tstr += c;\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c === '-' || c === '+') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t}\n\t\t\t\tif (c < '0' || c > '9') {\n\t\t\t\t\terror(\"Bad exponent\", make('number', str));\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tstr += c;\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t} while (c >= '0' && c <= '9');\n\t\t\t}\n\n\t\t\t// Make sure the next character is not a letter.\n\n\t\t\tif (c >= 'a' && c <= 'z') {\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// Convert the string value to a number. If it is finite, then it is a good\n\t\t\t// token.\n\n\t\t\tn = +str;\n\t\t\tif (isFinite(n)) {\n\t\t\t\tresult.push(make('number', n));\n\t\t\t} else {\n\t\t\t\terror(\"Bad number\", make('number', str));\n\t\t\t}\n\n\t\t\t// string\n\n\t\t} else if (c === '\\'' || c === '\"') {\n\t\t\tstr = '';\n\t\t\tq = c;\n\t\t\ti += 1;\n\t\t\tfor (; ; ) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (c < ' ') {\n\t\t\t\t\tmake('string', str);\n\t\t\t\t\terror(c === '\\n' || c === '\\r' || c === '' ?\n\t\t\t\t\t\t\"Unterminated string.\" :\n\t\t\t\t\t\t\"Control character in string.\", make('', str));\n\t\t\t\t}\n\n\t\t\t\t// Look for the closing quote.\n\n\t\t\t\tif (c === q) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Look for escapement.\n\n\t\t\t\tif (c === '\\\\') {\n\t\t\t\t\ti += 1;\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t}\n\t\t\t\t\tc = code.charAt(i);\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tc = '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tc = '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tc = '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'r':\n\t\t\t\t\t\tc = '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tc = '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = parseInt(code.substr(i + 1, 4), 16);\n\t\t\t\t\t\tif (!isFinite(c) || c < 0) {\n\t\t\t\t\t\t\terror(\"Unterminated string\", make('string', str));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tc = String.fromCharCode(c);\n\t\t\t\t\t\ti += 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\ti += 1;\n\t\t\tresult.push(make('string', str));\n\t\t\tc = code.charAt(i);\n\n\t\t\t// combining\n\n\t\t} else if (prefix.indexOf(c) >= 0) {\n\t\t\tstr = c;\n\t\t\ti += 1;\n\t\t\twhile (true) {\n\t\t\t\tc = code.charAt(i);\n\t\t\t\tif (i >= length || suffix.indexOf(c) < 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tstr += c;\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\tresult.push(make('operator', str));\n\n\t\t\t// single-character operator\n\n\t\t} else {\n\t\t\ti += 1;\n\t\t\tresult.push(make('operator', c));\n\t\t\tc = code.charAt(i);\n\t\t}\n\t}\n\treturn result;\n};\n\nvar make_parse = function (vars) {\n\tvars = vars || {};//预定义的变量\n\tvar symbol_table = {};\n\tvar token;\n\tvar tokens;\n\tvar token_nr;\n\tvar context;\n\n\tvar itself = function () {\n\t\treturn this;\n\t};\n\n\tvar find = function (n) {\n\t\tn.nud = itself;\n\t\tn.led = null;\n\t\tn.std = null;\n\t\tn.lbp = 0;\n\t\treturn n;\n\t};\n\n\tvar advance = function (id) {\n\t\tvar a, o, t, v;\n\t\tif (id && token.id !== id) {\n\t\t\terror(\"Expected '\" + id + \"'.\", token);\n\t\t}\n\t\tif (token_nr >= tokens.length) {\n\t\t\ttoken = symbol_table[\"(end)\"];\n\t\t\treturn;\n\t\t}\n\t\tt = tokens[token_nr];\n\t\ttoken_nr += 1;\n\t\tv = t.value;\n\t\ta = t.type;\n\t\tif ((a === \"operator\" || a !== 'string') && v in symbol_table) {\n\t\t\t//true, false 等直接量也会进入此分支\n\t\t\to = symbol_table[v];\n\t\t\tif (!o) {\n\t\t\t\terror(\"Unknown operator.\", t);\n\t\t\t}\n\t\t} else if (a === \"name\") {\n\t\t\to = find(t);\n\t\t} else if (a === \"string\" || a === \"number\" || a === \"regexp\") {\n\t\t\to = symbol_table[\"(literal)\"];\n\t\t\ta = \"literal\";\n\t\t} else {\n\t\t\terror(\"Unexpected token.\", t);\n\t\t}\n\t\ttoken = create(o);\n\t\ttoken.from = t.from;\n\t\ttoken.to = t.to;\n\t\ttoken.value = v;\n\t\ttoken.arity = a;\n\t\treturn token;\n\t};\n\n  //表达式\n  //rbp: right binding power 右侧约束力\n\tvar expression = function (rbp) {\n\t\tvar left;\n\t\tvar t = token;\n\t\tadvance();\n\t\tleft = t.nud();\n\t\twhile (rbp < token.lbp) {\n\t\t\tt = token;\n\t\t\tadvance();\n\t\t\tleft = t.led(left);\n\t\t}\n\t\treturn left;\n\t};\n\n\tvar original_symbol = {\n\t\tnud : function () {\n\t\t\terror(\"Undefined.\", this);\n\t\t},\n\t\tled : function (left) {\n\t\t\terror(\"Missing operator.\", this);\n\t\t}\n\t};\n\n\tvar symbol = function (id, bp) {\n\t\tvar s = symbol_table[id];\n\t\tbp = bp || 0;\n\t\tif (s) {\n\t\t\tif (bp >= s.lbp) {\n\t\t\t\ts.lbp = bp;\n\t\t\t}\n\t\t} else {\n\t\t\ts = create(original_symbol);\n\t\t\ts.id = s.value = id;\n\t\t\ts.lbp = bp;\n\t\t\tsymbol_table[id] = s;\n\t\t}\n\t\treturn s;\n\t};\n\n\tvar constant = function (s, v, a) {\n\t\tvar x = symbol(s);\n\t\tx.nud = function () {\n\t\t\tthis.value = symbol_table[this.id].value;\n\t\t\tthis.arity = \"literal\";\n\t\t\treturn this;\n\t\t};\n\t\tx.value = v;\n\t\treturn x;\n\t};\n\n\tvar infix = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar infixr = function (id, bp, led) {\n\t\tvar s = symbol(id, bp);\n\t\ts.led = led || function (left) {\n\t\t\tthis.first = left;\n\t\t\tthis.second = expression(bp - 1);\n\t\t\tthis.arity = \"binary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tvar prefix = function (id, nud) {\n\t\tvar s = symbol(id);\n\t\ts.nud = nud || function () {\n\t\t\tthis.first = expression(70);\n\t\t\tthis.arity = \"unary\";\n\t\t\treturn this;\n\t\t};\n\t\treturn s;\n\t};\n\n\tsymbol(\"(end)\");\n\tsymbol(\"(name)\");\n\tsymbol(\":\");\n\tsymbol(\")\");\n\tsymbol(\"]\");\n\tsymbol(\"}\");\n\tsymbol(\",\");\n\n\tconstant(\"true\", true);\n\tconstant(\"false\", false);\n\tconstant(\"null\", null);\n\tconstant(\"undefined\");\n\n\tconstant(\"Math\", Math);\n\tconstant(\"Date\", Date);\n\tfor(var v in vars) {\n\t\tconstant(v, vars[v]);\n\t}\n\n\tsymbol(\"(literal)\").nud = itself;\n\n\tsymbol(\"this\").nud = function () {\n\t  this.arity = \"this\";\n\t  return this;\n\t};\n\n\t//Operator Precedence:\n\t//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\n\n  //infix(',', 1);\n\tinfix(\"?\", 20, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tadvance(\":\");\n\t\tthis.third = expression(0);\n\t\tthis.arity = \"ternary\";\n\t\treturn this;\n\t});\n\n\tinfixr(\"&&\", 31);\n\tinfixr(\"||\", 30);\n\n\tinfixr(\"===\", 40);\n\tinfixr(\"!==\", 40);\n\n\tinfixr(\"==\", 40);\n\tinfixr(\"!=\", 40);\n\n\tinfixr(\"<\", 40);\n\tinfixr(\"<=\", 40);\n\tinfixr(\">\", 40);\n\tinfixr(\">=\", 40);\n\n\tinfix(\"in\", 45, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tif (context === 'repeat') {\n\t\t\t// `in` at repeat block\n\t\t\tleft.arity = 'repeat';\n\t\t\tthis.repeat = true;\n\t\t}\n\t\treturn this;\n\t});\n\n\tinfix(\"+\", 50);\n\tinfix(\"-\", 50);\n\n\tinfix(\"*\", 60);\n\tinfix(\"/\", 60);\n\tinfix(\"%\", 60);\n\n\tinfix(\"(\", 75, function (left) {\n\t\tvar a = [];\n\t\tif (left.id === \".\" || left.id === \"[\") {\n\t\t\tthis.arity = \"ternary\";\n\t\t\tthis.first = left.first;\n\t\t\tthis.second = left.second;\n\t\t\tthis.third = a;\n\t\t} else {\n\t\t\tthis.arity = \"binary\";\n\t\t\tthis.first = left;\n\t\t\tthis.second = a;\n\t\t\tif ((left.arity !== \"unary\" || left.id !== \"function\") &&\n\t\t\t\tleft.arity !== \"name\" && left.arity !== \"literal\" && left.id !== \"(\" &&\n\t\t\t\tleft.id !== \"&&\" && left.id !== \"||\" && left.id !== \"?\") {\n\t\t\t\terror(\"Expected a variable name.\", left);\n\t\t\t}\n\t\t}\n\t\tif (token.id !== \")\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\")\");\n\t\treturn this;\n\t});\n\n\tinfix(\".\", 80, function (left) {\n\t\tthis.first = left;\n\t\tif (token.arity !== \"name\") {\n\t\t\terror(\"Expected a property name.\", token);\n\t\t}\n\t\ttoken.arity = \"literal\";\n\t\tthis.second = token;\n\t\tthis.arity = \"binary\";\n\t\tadvance();\n\t\treturn this;\n\t});\n\n\tinfix(\"[\", 60, function (left) {\n\t\tthis.first = left;\n\t\tthis.second = expression(0);\n\t\tthis.arity = \"binary\";\n\t\tadvance(\"]\");\n\t\treturn this;\n\t});\n\n\t//filter\n\tinfix(\"|\", 10, function (left) {\n\t\tvar a;\n\t\tthis.first = left;\n\t\ttoken.arity = 'filter';\n\t\tthis.second = expression(10);\n\t\tthis.arity = 'binary';\n\t\tif (token.id === ':') {\n\t\t\tthis.arity = 'ternary';\n\t\t\tthis.third = a = [];\n\t\t\twhile (true) {\n\t\t\t\tadvance(':');\n\t\t\t\ta.push(expression(10));\n\t\t\t\tif (token.id !== \":\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t});\n  infix('catchby', 10);\n\n\tprefix(\"!\");\n\tprefix(\"-\");\n\tprefix(\"typeof\");\n\n\tprefix(\"(\", function () {\n\t\tvar e = expression(0);\n\t\tadvance(\")\");\n\t\treturn e;\n\t});\n\n\tprefix(\"[\", function () {\n\t\tvar a = [];\n\t\tif (token.id !== \"]\") {\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"]\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix(\"{\", function () {\n\t\tvar a = [],\tn, v;\n\t\tif (token.id !== \"}\") {\n\t\t\twhile (true) {\n\t\t\t\tn = token;\n\t\t\t\tif (n.arity !== \"name\" && n.arity !== \"literal\") {\n\t\t\t\t\terror(\"Bad property name: \", token);\n\t\t\t\t}\n\t\t\t\tadvance();\n\t\t\t\tadvance(\":\");\n\t\t\t\tv = expression(1);\n\t\t\t\tv.key = n.value;\n\t\t\t\ta.push(v);\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t}\n\t\tadvance(\"}\");\n\t\tthis.first = a;\n\t\tthis.arity = \"unary\";\n\t\treturn this;\n\t});\n\n\tprefix('new', function () {\n\t\tvar a = [];\n\t\tthis.first = expression(79);\n\t\tif(token.id === '(') {\n\t\t\tadvance(\"(\");\n\t\t\tthis.arity = 'binary';\n\t\t\tthis.second = a;\n\t\t\twhile (true) {\n\t\t\t\ta.push(expression(1));\n\t\t\t\tif (token.id !== \",\") {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tadvance(\",\");\n\t\t\t}\n\t\t\tadvance(\")\");\n\t\t}else{\n\t\t\tthis.arity = \"unary\";\n\t\t}\n\t\treturn this;\n\t});\n\n\t//_source: 表达式代码字符串\n\t//_context: 表达式的语句环境\n\treturn function (_source, _context) {\n    source = _source;\n\t\ttokens = tokenize(_source, '=<>!+-*&|/%^', '=<>&|');\n\t\ttoken_nr = 0;\n\t\tcontext = _context;\n\t\tadvance();\n\t\tvar s = expression(0);\n\t\tadvance(\"(end)\");\n\t\treturn s;\n\t};\n};\n\nexports.parse = make_parse();\n","\"use strict\";\n\nvar utils = require('./utils');\n\n//根据变量及 vm 确定变量所属的真正 vm\nvar reformScope = function (vm, path) {\n  var paths = utils.parseKeyPath(path);\n  var cur = vm, local = paths[0];\n  var ass, curVm = cur;\n\n  while(cur) {\n    curVm = cur;\n    ass = cur._assignments;\n    if( cur.__repeat) {\n      if (ass && ass.length) {\n        // 具名 repeat 不会直接查找自身作用域\n        if (local === '$index' || local === '$parent') {\n          break;\n        } else if (local === ass[0]) {\n          //修正key\n          if (paths.length === 1) {\n            paths[0] = '$data';\n          } else {\n            paths.shift()\n          }\n          break;\n        }\n      } else {\n        //匿名 repeat\n        if (path in cur) {\n          break;\n        }\n      }\n    }\n    cur = cur.$parent;\n  }\n\n  return { vm: curVm, path: paths.join('.') }\n};\n\n\nexports.reformScope = reformScope;\n","var tokenReg = /{{({(.+?)}|.+?)}}/g;\n\n//字符串中是否包含模板占位符标记\nfunction hasToken(str) {\n  tokenReg.lastIndex = 0;\n  return str && tokenReg.test(str);\n}\n\nfunction parseToken(value) {\n  var tokens = []\n    , textMap = []\n    , start = 0\n    , val, token\n    ;\n\n  tokenReg.lastIndex = 0;\n\n  while((val = tokenReg.exec(value))){\n    if(tokenReg.lastIndex - start > val[0].length){\n      textMap.push(value.slice(start, tokenReg.lastIndex - val[0].length));\n    }\n\n    token = {\n      escape: !val[2]\n    , path: (val[2] || val[1]).trim()\n    , position: textMap.length\n    , textMap: textMap\n    };\n\n    tokens.push(token);\n\n    //一个引用类型(数组)作为节点对象的文本图, 这样当某一个引用改变了一个值后, 其他引用取得的值都会同时更新\n    textMap.push(val[0]);\n\n    start = tokenReg.lastIndex;\n  }\n\n  if(value.length > start){\n    textMap.push(value.slice(start, value.length));\n  }\n\n  tokens.textMap = textMap;\n\n  return tokens;\n}\n\nexports.hasToken = hasToken;\n\nexports.parseToken = parseToken;\n","\"use strict\";\n\n//utils\n//---\n\nvar doc = require('./env.js').document;\n\nvar keyPathReg = /(?:\\.|\\[)/g\n  , bra = /\\]/g\n  ;\n\n//将 keyPath 转为数组形式\n//path.key, path[key] --> ['path', 'key']\nfunction parseKeyPath(keyPath){\n  return keyPath.replace(bra, '').split(keyPathReg);\n}\n\n/**\n * 合并对象\n * @static\n * @param {Boolean} [deep=false] 是否深度合并\n * @param {Object} target 目标对象\n * @param {Object} [object...] 来源对象\n * @returns {Object} 合并后的 target 对象\n */\nfunction extend(/* deep, target, object... */) {\n  var options\n    , name, src, copy, copyIsArray, clone\n    , target = arguments[0] || {}\n    , i = 1\n    , length = arguments.length\n    , deep = false\n    ;\n\n  // Handle a deep copy situation\n  if (typeof target === \"boolean\") {\n    deep = target;\n\n    // skip the boolean and the target\n    target = arguments[ i ] || {};\n    i++;\n  }\n\n  // Handle case when target is a string or something (possible in deep copy)\n  if (typeof target !== \"object\" && !utils.isFunction(target)) {\n    target = {};\n  }\n\n  for ( ; i < length; i++ ) {\n    // Only deal with non-null/undefined values\n    if ( (options = arguments[ i ]) != null ) {\n      // Extend the base object\n      for ( name in options ) {\n        //android 2.3 browser can enum the prototype of constructor...\n        if(name !== 'prototype'){\n          src = target[ name ];\n          copy = options[ name ];\n\n\n          // Recurse if we're merging plain objects or arrays\n          if ( deep && copy && ( utils.isPlainObject(copy) || (copyIsArray = utils.isArray(copy)) ) ) {\n\n            // Prevent never-ending loop\n            if ( target === copy ) {\n              continue;\n            }\n            if ( copyIsArray ) {\n              copyIsArray = false;\n              clone = src && utils.isArray(src) ? src : [];\n\n            } else {\n              clone = src && utils.isPlainObject(src) ? src : {};\n            }\n\n            // Never move original objects, clone them\n            target[ name ] = extend( deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if ( !utils.isUndefined(copy) && typeof target !== 'string') {\n            //一些情下, 比如 firefox 下给字符串对象赋值时会异常\n            target[name] = copy;\n          }\n        }\n      }\n    }\n  }\n\n  // Return the modified object\n  return target;\n}\n\nvar create = Object.create || function (o) {\n  function F() {}\n  F.prototype = o;\n  return new F();\n};\n\nvar deepGet = function (keyStr, obj) {\n  var chain, cur = obj, key;\n  if(keyStr){\n    chain = parseKeyPath(keyStr);\n    for(var i = 0, l = chain.length; i < l; i++) {\n      key = chain[i];\n      if(cur){\n        cur = cur[key];\n      }else{\n        return;\n      }\n    }\n  }\n  return cur;\n}\n\n//html 中属性名不区分大小写, 并且会全部转成小写.\n//这里会将连字符写法转成驼峰式\n//attr-name --> attrName\n//attr--name --> attr-name\nvar hyphensReg = /-(-?)([a-z])/ig;\nvar hyphenToCamel = function(attrName) {\n  return attrName.replace(hyphensReg, function(s, dash, char) {\n    return dash ? dash + char : char.toUpperCase();\n  })\n}\n\n//驼峰转连接符\nvar camelReg = /([A-Z])/g;\nvar camelToHyphen = function(key) {\n  return key.replace(camelReg, function (upperChar) {\n    return '-' + upperChar.toLowerCase();\n  })\n}\n\nvar utils = {\n  noop: function (){}\n, ie: (function(){\n    var undef,\n        v = 3,\n        div = doc.createElement('div'),\n        all = div.getElementsByTagName('i');\n\n    while (\n      div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n      all[0]\n    );\n\n    return v > 4 ? v : undef;\n\n  }())\n\n, isObject: function (val) {\n    return typeof val === 'object' && val !== null;\n  }\n\n, isUndefined: function (val) {\n    return typeof val === 'undefined';\n  }\n\n, isFunction: function (val){\n    return typeof val === 'function';\n  }\n\n, isArray: function (val) {\n    if(utils.ie){\n      //IE 9 及以下 IE 跨窗口检测数组\n      return val && val.constructor + '' === Array + '';\n    }else{\n      return Array.isArray(val);\n    }\n  }\n, isNumeric: function(val) {\n    return !utils.isArray(val) && val - parseFloat(val) + 1 >= 0;\n  }\n  //简单对象的简易判断\n, isPlainObject: function (o){\n    if (!o || ({}).toString.call(o) !== '[object Object]' || o.nodeType || o === o.window) {\n      return false;\n    }else{\n      return true;\n    }\n  }\n\n  //函数切面. oriFn 原始函数, fn 切面补充函数\n  //前面的函数返回值传入 breakCheck 判断, breakCheck 返回值为真时不执行切面补充的函数\n, beforeFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = fn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret, arguments)){\n        return ret;\n      }\n      return oriFn.apply(this, arguments);\n    };\n  }\n\n, afterFn: function (oriFn, fn, breakCheck) {\n    return function() {\n      var ret = oriFn.apply(this, arguments);\n      if(breakCheck && breakCheck.call(this, ret, arguments)){\n        return ret;\n      }\n      fn.apply(this, arguments);\n      return ret;\n    }\n  }\n\n, parseKeyPath: parseKeyPath\n\n, deepSet: function (keyStr, value, obj) {\n    if(keyStr){\n      var chain = parseKeyPath(keyStr)\n        , cur = obj\n        ;\n      chain.forEach(function(key, i) {\n        if(i === chain.length - 1){\n          cur[key] = value;\n        }else{\n          if(cur && cur.hasOwnProperty(key)){\n            cur = cur[key];\n          }else{\n            cur[key] = {};\n            cur = cur[key];\n          }\n        }\n      });\n    }else{\n      extend(obj, value);\n    }\n    return obj;\n  }\n, extend: extend\n, create: create\n, toArray: function(arrLike) {\n    var arr = [];\n\n    try{\n      //IE 8 对 dom 对象会报错\n      arr = Array.prototype.slice.call(arrLike)\n    }catch (e){\n      for(var i = 0, l = arrLike.length; i < l; i++) {\n        arr[i] = arrLike[i]\n      }\n    }\n    return arr;\n  }\n, hyphenToCamel: hyphenToCamel\n, camelToHyphen: camelToHyphen\n};\n\nmodule.exports = utils;\n","\"use strict\";\n\nvar evaluate = require('./eval.js')\n  , utils = require('./utils.js')\n  , parse = require('./parse.js').parse\n  , reformScope = require('./scope').reformScope\n  ;\n\nvar summaryCache = {};\n\n/**\n * 每个 directive 对应一个 watcher\n * @param {Bee} vm  directive 所处的环境\n * @param {Directive} dir\n */\nfunction Watcher(vm, dir) {\n  var reformed, path, curVm = vm, watchers = [];\n  var summary = summaryCache[dir.path]\n\n  dir.watcher = this;\n\n  this.state = 1;\n  this.dir = dir;\n  this.vm = vm;\n  this.watchers = [];\n\n  this.val = NaN;\n\n  dir.parse();\n\n  if(!summary || summary._type !== dir.type){\n    summary = evaluate.summary(dir.ast);\n    summary._type = dir.type;\n    summaryCache[dir.path] = summary;\n  }\n  dir.summary = summary\n\n  //将该 watcher 与每一个属性建立引用关系\n  for(var i = 0, l = dir.summary.paths.length; i < l; i++) {\n    reformed = reformScope(vm, dir.summary.paths[i])\n    curVm = reformed.vm\n    path = reformed.path\n    if(dir.watch) {\n      curVm._watchers[path] = curVm._watchers[path] || [];\n      curVm._watchers[path].push(this);\n      watchers = curVm._watchers[path];\n    }else{\n      watchers = [this];\n    }\n    //将每个 key 对应的 watchers 都塞进来\n    this.watchers.push( watchers );\n  }\n\n  //是否在初始化时更新\n  dir.immediate !== false && this.update();\n}\n\n//根据表达式移除当前 vm 中的 watcher\nfunction unwatch (vm, exp, callback) {\n  var summary;\n  try {\n    summary = evaluate.summary(parse(exp))\n  }catch (e){\n    e.message = 'SyntaxError in \"' + exp + '\" | ' + e.message;\n    console.error(e);\n  }\n  summary.paths.forEach(function(path) {\n    var watchers = vm._watchers[path] || [], update;\n\n    for(var i = watchers.length - 1; i >= 0; i--){\n      update = watchers[i].dir.update;\n      if(update === callback || update._originFn === callback){\n        watchers[i].unwatch()\n      }\n    }\n  })\n}\n\nfunction addWatcher(dir) {\n  if(dir.path) {\n    return new Watcher(this, dir);\n  }\n}\n\nWatcher.unwatch = unwatch;\nWatcher.addWatcher = addWatcher;\n\n//获取某 keyPath 子路径的 watchers\nWatcher.getWatchers = function getWatchers(vm, keyPath) {\n  var _watchers = vm._watchers, watchers = [];\n  var point;\n  for(var key in _watchers) {\n    point = key.charAt(keyPath.length);\n    if(key.indexOf(keyPath) === 0 && (point === '.')) {\n      watchers = watchers.concat(_watchers[key])\n    }\n  }\n  return watchers\n}\n\nfunction watcherUpdate (val) {\n  var oldValue = this.val;\n  this.val = val;\n  this.dir.update(val, oldValue);\n}\n\nutils.extend(Watcher.prototype, {\n  //表达式执行并更新 view\n  update: function() {\n    var that = this\n      , newVal\n      ;\n\n    if(this._hide) {\n      this._needUpdate = true;\n      return;\n    }\n    newVal = this.dir.getValue(this.vm);\n\n    //简单过滤重复更新\n    if(newVal !== this.val || utils.isObject(newVal)){\n      if(newVal && newVal.then) {\n        //a promise\n        newVal.then(function(val) {\n          watcherUpdate.call(that, val);\n        });\n      }else{\n        watcherUpdate.call(this, newVal);\n      }\n    }\n  },\n  //移除\n  unwatch: function() {\n    this.watchers.forEach(function(watchers) {\n      for(var i = watchers.length - 1; i >= 0; i--){\n        if(watchers[i] === this){\n          if(this.state){\n            watchers[i].dir.unLink();\n            this.state = 0;\n          }\n          watchers.splice(i, 1);\n        }\n      }\n    }.bind(this))\n    this.watchers = [];\n  }\n});\n\nmodule.exports = Watcher\n"],"sourceRoot":"./"}